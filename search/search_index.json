{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"T\u1ed5ng quan v\u1ec1 h\u1ec7 th\u1ed1ng SECOND-BRAIN","text":"<p>Welcome to SECOND-BRAIN documentation!</p> <p>C\u00e1ch t\u1ea1o t\u00e0i li\u1ec7u</p>"},{"location":"about/","title":"SECOND-BRAIN Documentation","text":"<p>H\u1ec7 th\u1ed1ng Documentation c\u1ee7a SECOND-BRAIN l\u00e0 n\u01a1i t\u1eadp trung t\u1ea5t c\u1ea3 c\u00e1c t\u00e0i li\u1ec7u phu\u0323c vu\u0323 cho vi\u00ea\u0323c truy xu\u00e2\u0301t nhanh</p>"},{"location":"about/#cac-noi-dung-chinh-cua-he-thong","title":"C\u00e1c n\u1ed9i dung ch\u00ednh c\u1ee7a h\u1ec7 th\u1ed1ng","text":""},{"location":"about/#1-tai-lieu-cai-at-moi-truong","title":"1. T\u00e0i li\u1ec7u c\u00e0i \u0111\u1eb7t m\u00f4i tr\u01b0\u1eddng","text":"<ul> <li>Ph\u1ea7n n\u00e0y h\u01b0\u1edbng d\u1eabn chi ti\u1ebft c\u00e1ch thi\u1ebft l\u1eadp m\u00f4i tr\u01b0\u1eddng l\u00e0m vi\u1ec7c, t\u1eeb vi\u1ec7c c\u00e0i \u0111\u1eb7t c\u00e1c c\u00f4ng c\u1ee5 c\u1ea7n thi\u1ebft, c\u1ea5u h\u00ecnh c\u01a1 b\u1ea3n, \u0111\u1ebfn c\u00e1ch ch\u1ea1y h\u1ec7 th\u1ed1ng l\u1ea7n \u0111\u1ea7u.</li> <li>Bao g\u1ed3m c\u00e1c b\u01b0\u1edbc d\u00e0nh cho c\u1ea3 m\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n (local), m\u00f4i tr\u01b0\u1eddng ki\u1ec3m th\u1eed (staging), v\u00e0 m\u00f4i tr\u01b0\u1eddng s\u1ea3n xu\u1ea5t (production).</li> <li>M\u1ee5c ti\u00eau l\u00e0 \u0111\u1ea3m b\u1ea3o m\u1ecdi th\u00e0nh vi\u00ean c\u00f3 th\u1ec3 thi\u1ebft l\u1eadp m\u00f4i tr\u01b0\u1eddng m\u1ed9t c\u00e1ch \u0111\u1ed3ng nh\u1ea5t v\u00e0 nhanh ch\u00f3ng.</li> </ul>"},{"location":"about/#loi-ich-cua-he-thong-documentation","title":"L\u1ee3i \u00edch c\u1ee7a h\u1ec7 th\u1ed1ng Documentation","text":"<ul> <li>D\u1ec5 d\u00e0ng truy c\u1eadp: Ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 truy c\u1eadp t\u00e0i li\u1ec7u m\u1ecdi l\u00fac, m\u1ecdi n\u01a1i qua tr\u00ecnh duy\u1ec7t web.</li> <li>T\u1ed5 ch\u1ee9c khoa h\u1ecdc: N\u1ed9i dung \u0111\u01b0\u1ee3c ph\u00e2n chia r\u00f5 r\u00e0ng, logic, gi\u00fap ti\u1ebft ki\u1ec7m th\u1eddi gian t\u00ecm ki\u1ebfm th\u00f4ng tin.</li> <li>C\u1eadp nh\u1eadt nhanh ch\u00f3ng: T\u00e0i li\u1ec7u \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt li\u00ean t\u1ee5c \u0111\u1ec3 ph\u1ea3n \u00e1nh \u0111\u00fang ki\u00ea\u0301n th\u01b0\u0301c m\u01a1\u0301i nh\u00e2\u0301t</li> </ul>"},{"location":"about/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>H\u1ec7 th\u1ed1ng Documentation c\u1ee7a SECOND-BRAIN kh\u00f4ng ch\u1ec9 l\u00e0 c\u00f4ng c\u1ee5 h\u1ed7 tr\u1ee3 m\u00e0 c\u00f2n l\u00e0 m\u1ed9t ph\u1ea7n kh\u00f4ng th\u1ec3 thi\u1ebfu trong vi\u1ec7c va\u0300 tra c\u01b0\u0301u ki\u00ea\u0301n th\u01b0\u0301c</p>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#tag:netframework","title":".netframework","text":"<ul> <li>            K\u0129 thu\u1eadt Redirecting assembly versions          </li> </ul>"},{"location":"tags/#tag:blog","title":"blog","text":"<ul> <li>            Bitmask, Serialization/Deserialization trong C\\#          </li> <li>            K\u0129 thu\u1eadt Redirecting assembly versions          </li> </ul>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2025/04/11/bitmask-serialization-deserialization/","title":"Bitmask, Serialization/Deserialization trong C#","text":"<p>D\u01b0\u1edbi l\u1edbp v\u1ecf \u0111\u01a1n gi\u1ea3n c\u1ee7a C# l\u00e0 nh\u1eefng k\u1ef9 thu\u1eadt tinh g\u1ecdn nh\u01b0ng m\u1ea1nh m\u1ebd. Bitmask gi\u00fap qu\u1ea3n l\u00fd tr\u1ea1ng th\u00e1i ch\u1ec9 v\u1edbi v\u00e0i bit, c\u00f2n serialization l\u00e0 c\u00e2y c\u1ea7u gi\u1eefa b\u1ed9 nh\u1edb v\u00e0 th\u1ebf gi\u1edbi b\u00ean ngo\u00e0i. B\u00e0i vi\u1ebft n\u00e0y l\u00e0 m\u1ed9t c\u00e1i nh\u00ecn ng\u1eafn g\u1ecdn, s\u00fac t\u00edch \u2014 nh\u01b0ng \u0111\u1ee7 s\u00e2u \u2014 \u0111\u1ec3 b\u1ea1n hi\u1ec3u v\u00e0 d\u00f9ng ch\u00fang hi\u1ec7u qu\u1ea3.</p>","tags":["blog"]},{"location":"blog/2024/02/11/redirecting-assembly-versions-in-netframework/","title":"K\u0129 thu\u1eadt Redirecting assembly versions","text":"<p>Redirecting assembly versions</p>","tags":[".netframework","blog"]},{"location":"checklists/v1/","title":"SECOND-BRAIN CHECKLIST V1","text":""},{"location":"checklists/v2/","title":"SECOND-BRAIN CHECKLIST V2","text":""},{"location":"checklists/v2/#i-general-conventions","title":"I. General conventions","text":"<ul> <li> 1. C\u00e0i \u0111\u1eb7t <code>endline</code> mode c\u1ee7a editor v\u1ec1 <code>CRLF</code>, c\u0103n l\u1ec1 \u0111\u1ea7u d\u00f2ng s\u1eed d\u1ee5ng tabs.</li> <li> 2. M\u1ed9t d\u00f2ng kh\u00f4ng n\u00ean v\u01b0\u1ee3t qu\u00e1 120 k\u00ed t\u1ef1.</li> <li> 3. M\u1ed7i file ch\u1ec9 n\u00ean ch\u1ee9a m\u1ed9t class.</li> <li> 4. Source code thay \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c ch\u1ee9a <code>warning</code>.</li> <li> 5. H\u1ea1n ch\u1ebf s\u1eed d\u1ee5ng TODO. <ul> <li>N\u1ebfu c\u1ea7n TODO, comment r\u00f5 t\u00ecnh tr\u1ea1ng v\u00e0 l\u00fd do \u0111\u1ec3 d\u1ec5 \u0111\u1ed1i \u1ee9ng sau n\u00e0y.  </li> </ul> </li> <li> 6. M\u1ed7i member trong class c\u00e1ch nhau ch\u00ednh x\u00e1c 1 d\u00f2ng tr\u1ed1ng.</li> <li> 7. Kh\u00f4ng s\u1eed d\u1ee5ng c\u00e1c <code>Obsolete</code> members. <ul> <li>N\u1ebfu b\u1eaft bu\u1ed9c s\u1eed d\u1ee5ng th\u00ec ph\u1ea3i comment r\u00f5 l\u00fd do.  </li> </ul> </li> </ul>"},{"location":"checklists/v2/#ii-naming-conventions","title":"II. Naming conventions","text":"<ul> <li> 8. Ph\u00e2n bi\u1ec7t ch\u1eef vi\u1ebft hoa/th\u01b0\u1eddng: <ul> <li>_camelCase: T\u00ean field.</li> <li>camelCase: T\u00ean variable, parameter.  </li> <li>UPPER_CASE: T\u00ean const, static readonly.  </li> <li>PascalCase: C\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f2n l\u1ea1i. </li> </ul> </li> <li> 9. T\u00ean ng\u1eafn g\u1ecdn, d\u1ec5 hi\u1ec3u, \u0111\u00fang ng\u1eef c\u1ea3nh: <ul> <li>Class: T\u00ean th\u1ec3 hi\u1ec7n \u0111\u1ed1i t\u01b0\u1ee3ng g\u00ec trong h\u1ec7 th\u1ed1ng.  </li> <li>Method: T\u00ean th\u1ec3 hi\u1ec7n ph\u01b0\u01a1ng th\u1ee9c l\u00e0m g\u00ec, ph\u1ee5c v\u1ee5 ai.  </li> <li>Variable: T\u00ean th\u1ec3 hi\u1ec7n r\u00f5 \u00fd ngh\u0129a trong logic x\u1eed l\u00fd, \u0111\u1eb7c bi\u1ec7t v\u1edbi business code.  </li> </ul> </li> <li> 10. T\u00ean r\u00f5 r\u00e0ng v\u00e0 \u0111\u00fang ng\u1eef ph\u00e1p ti\u1ebfng Anh: <ul> <li>\u0110\u1eb7t t\u00ean bi\u1ebfn d\u1ea1ng s\u1ed1 nhi\u1ec1u n\u1ebfu bi\u1ebfn l\u00e0 ki\u1ec3u danh s\u00e1ch (<code>List</code>, <code>IEnumerable</code>, <code>Array</code>, ...).  </li> <li>Kh\u00f4ng vi\u1ebft t\u1eaft qu\u00e1 m\u1ee9c, s\u1eed d\u1ee5ng t\u1eeb v\u1ef1ng ch\u00ednh x\u00e1c \u0111\u1ec3 tr\u00e1nh g\u00e2y kh\u00f3 hi\u1ec3u.  </li> </ul> </li> <li> 11. S\u1eed d\u1ee5ng t\u1eeb ng\u1eef ch\u00ednh x\u00e1c trong ng\u1eef c\u1ea3nh: <ul> <li>Ph\u00e2n bi\u1ec7t <code>Validate</code> (x\u00e1c th\u1ef1c) v\u00e0 <code>Check</code> (ki\u1ec3m tra).  </li> <li>Ki\u1ec3m tra v\u00e0 \u0111\u1ed5i t\u00ean method khi n\u1ed9i dung method thay \u0111\u1ed5i.  </li> </ul> </li> <li> 12. S\u1eed d\u1ee5ng <code>prefix</code> ho\u1eb7c <code>suffix</code> ph\u00f9 h\u1ee3p (v\u00ed d\u1ee5: <code>I</code> cho interface, <code>Base</code> cho class c\u01a1 s\u1edf ho\u1eb7c c\u00e1c ph\u01b0\u01a1ng th\u1ee9c ho\u1eb7c h\u00e0m b\u1ea5t \u0111\u1ed3ng b\u1ed9 ph\u1ea3i c\u00f3 h\u1eadu t\u1ed1 <code>Async</code> v\u00e0 ng\u01b0\u1ee3c l\u1ea1i).</li> </ul>"},{"location":"checklists/v2/#iii-coding-styles","title":"III. Coding styles","text":"<ul> <li> 13. \u01afu ti\u00ean s\u1eed d\u1ee5ng <code>var</code> thay cho ki\u1ec3u d\u1eef li\u1ec7u t\u01b0\u1eddng minh.</li> <li> 14. S\u1eed d\u1ee5ng d\u1ea5u ngo\u1eb7c <code>{}</code> v\u00e0 xu\u1ed1ng d\u00f2ng cho m\u1ecdi \u0111i\u1ec1u ki\u1ec7n <code>if</code> v\u00e0 <code>method</code> ho\u1eb7c <code>function</code>.</li> <li> 15. Bi\u1ec3u th\u1ee9c c\u00f3 t\u1eeb 3 \u0111i\u1ec1u ki\u1ec7n tr\u1edf l\u00ean th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i \u0111i\u1ec1u ki\u1ec7n (bao g\u1ed3m lambda v\u00e0 c\u00e1c bi\u1ec3u th\u1ee9c \u0111i\u1ec1u ki\u1ec7n nh\u01b0 <code>while</code>, <code>if</code>, ... )</li> <li> 16. N\u1ebfu ph\u01b0\u01a1ng th\u1ee9c ho\u1eb7c h\u00e0m c\u00f3 3 tham s\u1ed1 tr\u1edf l\u00ean th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i tham s\u1ed1.</li> <li> 17. Khi g\u1ecdi extension methods, n\u1ebfu g\u1ecdi li\u00ean t\u1ee5c t\u1eeb 3 methods tr\u1edf l\u00ean ho\u1eb7c c\u00e2u l\u1ec7nh \u0111\u00e3 qu\u00e1 d\u00e0i th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i l\u1eddi g\u1ecdi method.</li> <li> 18. Kh\u00f4ng s\u1eed d\u1ee5ng <code>expression-bodied</code> cho method \u1edf b\u1ea5t k\u00ec tr\u01b0\u1eddng h\u1ee3p n\u00e0o.</li> <li> 19. Ch\u1ec9 s\u1eed d\u1ee5ng to\u00e1n t\u1eed \u0111i\u1ec1u ki\u1ec7n <code>Ternary</code> cho gi\u00e1 tr\u1ecb c\u1ed1 \u0111\u1ecbnh, kh\u00f4ng s\u1eed d\u1ee5ng cho l\u1eddi g\u1ecdi h\u00e0m.</li> <li> 20. S\u1eed d\u1ee5ng <code>nameof</code> thay cho hardcode t\u00ean bi\u1ebfn ho\u1eb7c t\u00ean member.</li> <li> 21. Ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n v\u00e0 <code>return</code> s\u1edbm nh\u1ea5t c\u00f3 th\u1ec3.</li> </ul>"},{"location":"checklists/v2/#iv-tuan-thu-oop-va-solid","title":"IV. Tu\u00e2n th\u1ee7 OOP v\u00e0 SOLID","text":"<ul> <li> 22. Khai b\u00e1o s\u1eed d\u1ee5ng h\u1ee3p l\u00fd Access Modifiers: <ul> <li>Lu\u00f4n \u0111\u1ec3 field \u1edf <code>private</code>.  </li> <li>Ngo\u00e0i ra c\u1ea7n tu\u00e2n th\u1ee7 t\u00ednh k\u1ebf th\u1eeba / truy c\u1eadp \u0111\u1ec3 \u0111\u1eb7t access modifier.  </li> </ul> </li> <li> 23. Khai b\u00e1o v\u00e0 s\u1eed d\u1ee5ng h\u1ee3p l\u00fd constant, readonly, static field/property: <ul> <li><code>const</code>: H\u1eb1ng s\u1ed1 ch\u1ec9 s\u1eed d\u1ee5ng cho gi\u00e1 tr\u1ecb kh\u00f4ng thay \u0111\u1ed5i v\u00e0 d\u00f9ng chung.  </li> <li><code>readonly</code>: Bi\u1ebfn ch\u1ec9 kh\u1edfi t\u1ea1o m\u1ed9t l\u1ea7n t\u1ea1i th\u1eddi \u0111i\u1ec3m khai b\u00e1o ho\u1eb7c trong constructor.  </li> <li><code>static</code>: Ch\u1ec9 d\u00f9ng khi bi\u1ebfn d\u00f9ng chung cho nhi\u1ec1u \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c nhau trong h\u1ec7 th\u1ed1ng.  </li> </ul> </li> <li> 24. Khai b\u00e1o v\u00e0 s\u1eed properties h\u1ee3p l\u00fd: <ul> <li>\u01afu ti\u00ean s\u1eed d\u1ee5ng auto-properties khi c\u00f3 th\u1ec3.  </li> <li>S\u1eed d\u1ee5ng <code>private set</code> ho\u1eb7c <code>init</code> cho c\u00e1c properties ch\u1ec9 \u0111\u1ecdc sau khi kh\u1edfi t\u1ea1o.  </li> <li>Ph\u00e2n bi\u1ec7t v\u1edbi <code>field</code>. Property s\u1eed \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nh\u01b0 1 API \u0111\u1ec3 cho c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c ngo\u00e0i class truy c\u1eadp v\u00e0o, c\u00f2n field th\u00ec ch\u1ec9 s\u1eed d\u1ee5ng trong class \u0111\u00f3.  </li> </ul> </li> </ul>"},{"location":"checklists/v2/#v-tuan-thu-cac-quy-tac-second-brain","title":"V. Tu\u00e2n Th\u1ee7 C\u00e1c Quy T\u1eafc SECOND-BRAIN","text":"<ul> <li> 25. X\u00f3a code kh\u00f4ng s\u1eed d\u1ee5ng: <ul> <li>X\u00f3a c\u00e1c <code>using</code> kh\u00f4ng c\u1ea7n thi\u1ebft trong c\u00e1c file <code>.cs</code>.  </li> <li>X\u00f3a file, class, method, property, bi\u1ebfn kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng.  </li> <li>X\u00f3a bi\u1ebfn kh\u00f4ng s\u1eed d\u1ee5ng trong c\u00e1c method c\u00f3 s\u1eeda \u0111\u1ed5i.  </li> </ul> </li> <li> 26. X\u00f3a code kh\u00f4ng c\u1ea7n thi\u1ebft: <ul> <li>Kh\u00f4ng c\u1ea7n kh\u1edfi t\u1ea1o <code>null</code> cho bi\u1ebfn ki\u1ec3u reference type n\u1ebfu kh\u00f4ng c\u1ea7n thi\u1ebft.  </li> <li>Bi\u1ebfn \u0111\u00e3 \u0111\u01b0\u1ee3c validate \u0111\u1ea7u v\u00e0o r\u1ed3i th\u00ec kh\u00f4ng c\u1ea7n check <code>null</code> ho\u1eb7c r\u1ed7ng.  </li> <li>X\u00f3a \u0111o\u1ea1n code kh\u00f4ng d\u00f9ng, kh\u00f4ng \u0111\u01b0\u1ee3c comment l\u1ea1i b\u1eb1ng <code>//</code>.  </li> </ul> </li> <li> 27. Gi\u1ea3i th\u00edch r\u00f5 r\u00e0ng khi copy code t\u1eeb n\u01a1i kh\u00e1c: ngu\u1ed3n g\u1ed1c, m\u1ee5c \u0111\u00edch.</li> <li> 28. C\u00e2n nh\u1eafc s\u1eed d\u1ee5ng <code>thread-safe collections</code> trong tr\u01b0\u1eddng h\u1ee3p \u0111a lu\u1ed3ng.</li> <li> 29. Kh\u00f4ng thay \u0111\u1ed5i source code m\u00e0 kh\u00f4ng li\u00ean quan tr\u1ef1c ti\u1ebfp \u0111\u1ebfn task \u0111ang \u0111\u1ed1i \u1ee9ng, k\u1ec3 c\u1ea3 vi\u1ec7c x\u00f3a c\u00e1c \u0111o\u1ea1n code th\u1eeba.</li> </ul>"},{"location":"checklists/v2/#vi-hieu-nang","title":"VI. Hi\u1ec7u N\u0103ng","text":"<ul> <li> 30. S\u1eed d\u1ee5ng <code>String Interpolation</code> ho\u1eb7c <code>StringBuilder</code> thay v\u00ec c\u1ed9ng chu\u1ed7i.</li> <li> 31. D\u00f9ng <code>OrdinalIgnoreCase</code> thay v\u00ec <code>InvariantCultureIgnoreCase</code> khi so s\u00e1nh chu\u1ed7i.</li> <li> 32. H\u1ea1n ch\u1ebf s\u1ed1 l\u01b0\u1ee3ng request (t\u1edbi DB) trong m\u1ed9t x\u1eed l\u00fd.</li> <li> 33. \u0110\u00e1nh d\u1ea5u v\u00e0 gi\u1ea3i th\u00edch logic ph\u1ee9c t\u1ea1p ho\u1eb7c magic number b\u1eb1ng comment r\u00f5 r\u00e0ng.</li> <li> 34. Tr\u00e1nh code b\u1ecb l\u1eb7p ho\u1eb7c qu\u00e1 d\u00e0i <ul> <li>T\u00e1ch code th\u00e0nh c\u00e1c method nh\u1ecf, r\u00f5 r\u00e0ng \u0111\u1ec3 t\u00e1i s\u1eed d\u1ee5ng v\u00e0 d\u1ec5 \u0111\u1ecdc.  </li> <li>Ki\u1ec3m tra xem c\u00f3 s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c source code \u0111\u00e3 c\u00f3 s\u1eb5n hay kh\u00f4ng.  </li> </ul> </li> <li> 35. X\u1eed l\u00fd d\u1eef li\u1ec7u: <ul> <li>Tr\u01b0\u1edbc khi <code>return</code> danh s\u00e1ch, s\u1eed d\u1ee5ng <code>ToList()</code> ho\u1eb7c <code>ToArray()</code> \u0111\u1ec3 execute data.  </li> <li>X\u1eed l\u00fd tu\u1ea7n t\u1ef1 theo <code>index</code> n\u00ean d\u00f9ng <code>for</code>, h\u1ea1n ch\u1ebf <code>foreach</code> n\u1ebfu c\u00f3 y\u00eau c\u1ea7u r\u00f5 r\u00e0ng v\u1ec1 th\u1ee9 t\u1ef1.  </li> </ul> </li> <li> 36. H\u1ea1n ch\u1ebf <code>return null</code>.</li> <li> 37. S\u1eed d\u1ee5ng <code>throw</code> thay v\u00ec <code>throw ex</code> \u0111\u1ec3 gi\u1eef nguy\u00ean stack trace.</li> <li> 38. S\u1eed d\u1ee5ng <code>using</code> \u0111\u1ec3 gi\u1ea3i ph\u00f3ng unmanaged resources khi kh\u00f4ng c\u00f2n s\u1eed d\u1ee5ng</li> <li> 39. S\u1eed d\u1ee5ng <code>async/await</code> thay cho <code>Task.Wait()</code> ho\u1eb7c <code>Task.Result</code> ho\u1eb7c <code>Task.WaitAll()</code> \u0111\u1ec3 tr\u00e1nh block.</li> </ul>"},{"location":"checklists/v2/#vii-comment-code","title":"VII. Comment Code","text":"<ul> <li> 40. Comment \u0111\u1ea7y \u0111\u1ee7 cho t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng (ri\u00eang \u0111\u1ed1i v\u1edbi field th\u00ec t\u00f9y ch\u1ecdn): <ul> <li>\u0110\u1ea7u c\u00e1c classes, methods, interfaces, properties, ... (c\u00e1c members m\u00e0 c\u00f3 th\u1ec3 access t\u1eeb \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c) - s\u1eed d\u1ee5ng XML comments  </li> <li>C\u00e1c \u0111o\u1ea1n logic ph\u1ee9c t\u1ea1p.  </li> <li>N\u1ed9i dung comment \u0111\u00fang ng\u1eef c\u1ea3nh s\u1eed d\u1ee5ng, th\u1ec3 hi\u1ec7n r\u00f5 \u00fd t\u01b0\u1edfng.  </li> </ul> </li> </ul>"},{"location":"checklists/v2/checklist/","title":"Checklist","text":""},{"location":"checklists/v2/checklist/#i-general-conventions","title":"I. General conventions","text":"<ul> <li> 1. C\u00e0i \u0111\u1eb7t <code>endline</code> mode c\u1ee7a editor v\u1ec1 <code>CRLF</code>, c\u0103n l\u1ec1 \u0111\u1ea7u d\u00f2ng s\u1eed d\u1ee5ng tabs.</li> <li> 2. M\u1ed9t d\u00f2ng kh\u00f4ng n\u00ean v\u01b0\u1ee3t qu\u00e1 120 k\u00ed t\u1ef1.</li> <li> 3. M\u1ed7i file ch\u1ec9 n\u00ean ch\u1ee9a m\u1ed9t class.</li> <li> 4. Source code thay \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c ch\u1ee9a <code>warning</code>.</li> <li> 5. H\u1ea1n ch\u1ebf s\u1eed d\u1ee5ng TODO. <ul> <li>N\u1ebfu c\u1ea7n TODO, comment r\u00f5 t\u00ecnh tr\u1ea1ng v\u00e0 l\u00fd do \u0111\u1ec3 d\u1ec5 \u0111\u1ed1i \u1ee9ng sau n\u00e0y.  </li> </ul> </li> <li> 6. M\u1ed7i member trong class c\u00e1ch nhau ch\u00ednh x\u00e1c 1 d\u00f2ng tr\u1ed1ng.</li> <li> 7. Kh\u00f4ng s\u1eed d\u1ee5ng c\u00e1c <code>Obsolete</code> members. <ul> <li>N\u1ebfu b\u1eaft bu\u1ed9c s\u1eed d\u1ee5ng th\u00ec ph\u1ea3i comment r\u00f5 l\u00fd do.  </li> </ul> </li> </ul>"},{"location":"checklists/v2/checklist/#ii-naming-conventions","title":"II. Naming conventions","text":"<ul> <li> 8. Ph\u00e2n bi\u1ec7t ch\u1eef vi\u1ebft hoa/th\u01b0\u1eddng: <ul> <li>_camelCase: T\u00ean field.</li> <li>camelCase: T\u00ean variable, parameter.  </li> <li>UPPER_CASE: T\u00ean const, static readonly.  </li> <li>PascalCase: C\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f2n l\u1ea1i. </li> </ul> </li> <li> 9. T\u00ean ng\u1eafn g\u1ecdn, d\u1ec5 hi\u1ec3u, \u0111\u00fang ng\u1eef c\u1ea3nh: <ul> <li>Class: T\u00ean th\u1ec3 hi\u1ec7n \u0111\u1ed1i t\u01b0\u1ee3ng g\u00ec trong h\u1ec7 th\u1ed1ng.  </li> <li>Method: T\u00ean th\u1ec3 hi\u1ec7n ph\u01b0\u01a1ng th\u1ee9c l\u00e0m g\u00ec, ph\u1ee5c v\u1ee5 ai.  </li> <li>Variable: T\u00ean th\u1ec3 hi\u1ec7n r\u00f5 \u00fd ngh\u0129a trong logic x\u1eed l\u00fd, \u0111\u1eb7c bi\u1ec7t v\u1edbi business code.  </li> </ul> </li> <li> 10. T\u00ean r\u00f5 r\u00e0ng v\u00e0 \u0111\u00fang ng\u1eef ph\u00e1p ti\u1ebfng Anh: <ul> <li>\u0110\u1eb7t t\u00ean bi\u1ebfn d\u1ea1ng s\u1ed1 nhi\u1ec1u n\u1ebfu bi\u1ebfn l\u00e0 ki\u1ec3u danh s\u00e1ch (<code>List</code>, <code>IEnumerable</code>, <code>Array</code>, ...).  </li> <li>Kh\u00f4ng vi\u1ebft t\u1eaft qu\u00e1 m\u1ee9c, s\u1eed d\u1ee5ng t\u1eeb v\u1ef1ng ch\u00ednh x\u00e1c \u0111\u1ec3 tr\u00e1nh g\u00e2y kh\u00f3 hi\u1ec3u.  </li> </ul> </li> <li> 11. S\u1eed d\u1ee5ng t\u1eeb ng\u1eef ch\u00ednh x\u00e1c trong ng\u1eef c\u1ea3nh: <ul> <li>Ph\u00e2n bi\u1ec7t <code>Validate</code> (x\u00e1c th\u1ef1c) v\u00e0 <code>Check</code> (ki\u1ec3m tra).  </li> <li>Ki\u1ec3m tra v\u00e0 \u0111\u1ed5i t\u00ean method khi n\u1ed9i dung method thay \u0111\u1ed5i.  </li> </ul> </li> <li> 12. S\u1eed d\u1ee5ng <code>prefix</code> ho\u1eb7c <code>suffix</code> ph\u00f9 h\u1ee3p (v\u00ed d\u1ee5: <code>I</code> cho interface, <code>Base</code> cho class c\u01a1 s\u1edf ho\u1eb7c c\u00e1c ph\u01b0\u01a1ng th\u1ee9c ho\u1eb7c h\u00e0m b\u1ea5t \u0111\u1ed3ng b\u1ed9 ph\u1ea3i c\u00f3 h\u1eadu t\u1ed1 <code>Async</code> v\u00e0 ng\u01b0\u1ee3c l\u1ea1i).</li> </ul>"},{"location":"checklists/v2/checklist/#iii-coding-styles","title":"III. Coding styles","text":"<ul> <li> 13. \u01afu ti\u00ean s\u1eed d\u1ee5ng <code>var</code> thay cho ki\u1ec3u d\u1eef li\u1ec7u t\u01b0\u1eddng minh.</li> <li> 14. S\u1eed d\u1ee5ng d\u1ea5u ngo\u1eb7c <code>{}</code> v\u00e0 xu\u1ed1ng d\u00f2ng cho m\u1ecdi \u0111i\u1ec1u ki\u1ec7n <code>if</code> v\u00e0 <code>method</code> ho\u1eb7c <code>function</code>.</li> <li> 15. Bi\u1ec3u th\u1ee9c c\u00f3 t\u1eeb 3 \u0111i\u1ec1u ki\u1ec7n tr\u1edf l\u00ean th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i \u0111i\u1ec1u ki\u1ec7n (bao g\u1ed3m lambda v\u00e0 c\u00e1c bi\u1ec3u th\u1ee9c \u0111i\u1ec1u ki\u1ec7n nh\u01b0 <code>while</code>, <code>if</code>, ... )</li> <li> 16. N\u1ebfu ph\u01b0\u01a1ng th\u1ee9c ho\u1eb7c h\u00e0m c\u00f3 3 tham s\u1ed1 tr\u1edf l\u00ean th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i tham s\u1ed1.</li> <li> 17. Khi g\u1ecdi extension methods, n\u1ebfu g\u1ecdi li\u00ean t\u1ee5c t\u1eeb 3 methods tr\u1edf l\u00ean ho\u1eb7c c\u00e2u l\u1ec7nh \u0111\u00e3 qu\u00e1 d\u00e0i th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i l\u1eddi g\u1ecdi method.</li> <li> 18. Kh\u00f4ng s\u1eed d\u1ee5ng <code>expression-bodied</code> cho method \u1edf b\u1ea5t k\u00ec tr\u01b0\u1eddng h\u1ee3p n\u00e0o.</li> <li> 19. Ch\u1ec9 s\u1eed d\u1ee5ng to\u00e1n t\u1eed \u0111i\u1ec1u ki\u1ec7n <code>Ternary</code> cho gi\u00e1 tr\u1ecb c\u1ed1 \u0111\u1ecbnh, kh\u00f4ng s\u1eed d\u1ee5ng cho l\u1eddi g\u1ecdi h\u00e0m.</li> <li> 20. S\u1eed d\u1ee5ng <code>nameof</code> thay cho hardcode t\u00ean bi\u1ebfn ho\u1eb7c t\u00ean member.</li> <li> 21. Ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n v\u00e0 <code>return</code> s\u1edbm nh\u1ea5t c\u00f3 th\u1ec3.</li> </ul>"},{"location":"checklists/v2/checklist/#iv-tuan-thu-oop-va-solid","title":"IV. Tu\u00e2n th\u1ee7 OOP v\u00e0 SOLID","text":"<ul> <li> 22. Khai b\u00e1o s\u1eed d\u1ee5ng h\u1ee3p l\u00fd Access Modifiers: <ul> <li>Lu\u00f4n \u0111\u1ec3 field \u1edf <code>private</code>.  </li> <li>Ngo\u00e0i ra c\u1ea7n tu\u00e2n th\u1ee7 t\u00ednh k\u1ebf th\u1eeba / truy c\u1eadp \u0111\u1ec3 \u0111\u1eb7t access modifier.  </li> </ul> </li> <li> 23. Khai b\u00e1o v\u00e0 s\u1eed d\u1ee5ng h\u1ee3p l\u00fd constant, readonly, static field/property: <ul> <li><code>const</code>: H\u1eb1ng s\u1ed1 ch\u1ec9 s\u1eed d\u1ee5ng cho gi\u00e1 tr\u1ecb kh\u00f4ng thay \u0111\u1ed5i v\u00e0 d\u00f9ng chung.  </li> <li><code>readonly</code>: Bi\u1ebfn ch\u1ec9 kh\u1edfi t\u1ea1o m\u1ed9t l\u1ea7n t\u1ea1i th\u1eddi \u0111i\u1ec3m khai b\u00e1o ho\u1eb7c trong constructor.  </li> <li><code>static</code>: Ch\u1ec9 d\u00f9ng khi bi\u1ebfn d\u00f9ng chung cho nhi\u1ec1u \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c nhau trong h\u1ec7 th\u1ed1ng.  </li> </ul> </li> <li> 24. Khai b\u00e1o v\u00e0 s\u1eed properties h\u1ee3p l\u00fd: <ul> <li>\u01afu ti\u00ean s\u1eed d\u1ee5ng auto-properties khi c\u00f3 th\u1ec3.  </li> <li>S\u1eed d\u1ee5ng <code>private set</code> ho\u1eb7c <code>init</code> cho c\u00e1c properties ch\u1ec9 \u0111\u1ecdc sau khi kh\u1edfi t\u1ea1o.  </li> <li>Ph\u00e2n bi\u1ec7t v\u1edbi <code>field</code>. Property s\u1eed \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nh\u01b0 1 API \u0111\u1ec3 cho c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c ngo\u00e0i class truy c\u1eadp v\u00e0o, c\u00f2n field th\u00ec ch\u1ec9 s\u1eed d\u1ee5ng trong class \u0111\u00f3.  </li> </ul> </li> </ul>"},{"location":"checklists/v2/checklist/#v-tuan-thu-cac-quy-tac-second-brain","title":"V. Tu\u00e2n Th\u1ee7 C\u00e1c Quy T\u1eafc SECOND-BRAIN","text":"<ul> <li> 25. X\u00f3a code kh\u00f4ng s\u1eed d\u1ee5ng: <ul> <li>X\u00f3a c\u00e1c <code>using</code> kh\u00f4ng c\u1ea7n thi\u1ebft trong c\u00e1c file <code>.cs</code>.  </li> <li>X\u00f3a file, class, method, property, bi\u1ebfn kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng.  </li> <li>X\u00f3a bi\u1ebfn kh\u00f4ng s\u1eed d\u1ee5ng trong c\u00e1c method c\u00f3 s\u1eeda \u0111\u1ed5i.  </li> </ul> </li> <li> 26. X\u00f3a code kh\u00f4ng c\u1ea7n thi\u1ebft: <ul> <li>Kh\u00f4ng c\u1ea7n kh\u1edfi t\u1ea1o <code>null</code> cho bi\u1ebfn ki\u1ec3u reference type n\u1ebfu kh\u00f4ng c\u1ea7n thi\u1ebft.  </li> <li>Bi\u1ebfn \u0111\u00e3 \u0111\u01b0\u1ee3c validate \u0111\u1ea7u v\u00e0o r\u1ed3i th\u00ec kh\u00f4ng c\u1ea7n check <code>null</code> ho\u1eb7c r\u1ed7ng.  </li> <li>X\u00f3a \u0111o\u1ea1n code kh\u00f4ng d\u00f9ng, kh\u00f4ng \u0111\u01b0\u1ee3c comment l\u1ea1i b\u1eb1ng <code>//</code>.  </li> </ul> </li> <li> 27. Gi\u1ea3i th\u00edch r\u00f5 r\u00e0ng khi copy code t\u1eeb n\u01a1i kh\u00e1c: ngu\u1ed3n g\u1ed1c, m\u1ee5c \u0111\u00edch.</li> <li> 28. C\u00e2n nh\u1eafc s\u1eed d\u1ee5ng <code>thread-safe collections</code> trong tr\u01b0\u1eddng h\u1ee3p \u0111a lu\u1ed3ng.</li> <li> 29. Kh\u00f4ng thay \u0111\u1ed5i source code m\u00e0 kh\u00f4ng li\u00ean quan tr\u1ef1c ti\u1ebfp \u0111\u1ebfn task \u0111ang \u0111\u1ed1i \u1ee9ng, k\u1ec3 c\u1ea3 vi\u1ec7c x\u00f3a c\u00e1c \u0111o\u1ea1n code th\u1eeba.</li> </ul>"},{"location":"checklists/v2/checklist/#vi-hieu-nang","title":"VI. Hi\u1ec7u N\u0103ng","text":"<ul> <li> 30. S\u1eed d\u1ee5ng <code>String Interpolation</code> ho\u1eb7c <code>StringBuilder</code> thay v\u00ec c\u1ed9ng chu\u1ed7i.</li> <li> 31. D\u00f9ng <code>OrdinalIgnoreCase</code> thay v\u00ec <code>InvariantCultureIgnoreCase</code> khi so s\u00e1nh chu\u1ed7i.</li> <li> 32. H\u1ea1n ch\u1ebf s\u1ed1 l\u01b0\u1ee3ng request (t\u1edbi DB) trong m\u1ed9t x\u1eed l\u00fd.</li> <li> 33. \u0110\u00e1nh d\u1ea5u v\u00e0 gi\u1ea3i th\u00edch logic ph\u1ee9c t\u1ea1p ho\u1eb7c magic number b\u1eb1ng comment r\u00f5 r\u00e0ng.</li> <li> 34. Tr\u00e1nh code b\u1ecb l\u1eb7p ho\u1eb7c qu\u00e1 d\u00e0i <ul> <li>T\u00e1ch code th\u00e0nh c\u00e1c method nh\u1ecf, r\u00f5 r\u00e0ng \u0111\u1ec3 t\u00e1i s\u1eed d\u1ee5ng v\u00e0 d\u1ec5 \u0111\u1ecdc.  </li> <li>Ki\u1ec3m tra xem c\u00f3 s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c source code \u0111\u00e3 c\u00f3 s\u1eb5n hay kh\u00f4ng.  </li> </ul> </li> <li> 35. X\u1eed l\u00fd d\u1eef li\u1ec7u: <ul> <li>Tr\u01b0\u1edbc khi <code>return</code> danh s\u00e1ch, s\u1eed d\u1ee5ng <code>ToList()</code> ho\u1eb7c <code>ToArray()</code> \u0111\u1ec3 execute data.  </li> <li>X\u1eed l\u00fd tu\u1ea7n t\u1ef1 theo <code>index</code> n\u00ean d\u00f9ng <code>for</code>, h\u1ea1n ch\u1ebf <code>foreach</code> n\u1ebfu c\u00f3 y\u00eau c\u1ea7u r\u00f5 r\u00e0ng v\u1ec1 th\u1ee9 t\u1ef1.  </li> </ul> </li> <li> 36. H\u1ea1n ch\u1ebf <code>return null</code>.</li> <li> 37. S\u1eed d\u1ee5ng <code>throw</code> thay v\u00ec <code>throw ex</code> \u0111\u1ec3 gi\u1eef nguy\u00ean stack trace.</li> <li> 38. S\u1eed d\u1ee5ng <code>using</code> \u0111\u1ec3 gi\u1ea3i ph\u00f3ng unmanaged resources khi kh\u00f4ng c\u00f2n s\u1eed d\u1ee5ng</li> <li> 39. S\u1eed d\u1ee5ng <code>async/await</code> thay cho <code>Task.Wait()</code> ho\u1eb7c <code>Task.Result</code> ho\u1eb7c <code>Task.WaitAll()</code> \u0111\u1ec3 tr\u00e1nh block.</li> </ul>"},{"location":"checklists/v2/checklist/#vii-comment-code","title":"VII. Comment Code","text":"<ul> <li> 40. Comment \u0111\u1ea7y \u0111\u1ee7 cho t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng (ri\u00eang \u0111\u1ed1i v\u1edbi field th\u00ec t\u00f9y ch\u1ecdn): <ul> <li>\u0110\u1ea7u c\u00e1c classes, methods, interfaces, properties, ... (c\u00e1c members m\u00e0 c\u00f3 th\u1ec3 access t\u1eeb \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c) - s\u1eed d\u1ee5ng XML comments  </li> <li>C\u00e1c \u0111o\u1ea1n logic ph\u1ee9c t\u1ea1p.  </li> <li>N\u1ed9i dung comment \u0111\u00fang ng\u1eef c\u1ea3nh s\u1eed d\u1ee5ng, th\u1ec3 hi\u1ec7n r\u00f5 \u00fd t\u01b0\u1edfng.  </li> </ul> </li> </ul>"},{"location":"cloud/aws/","title":"AWS Services Documentation","text":"<p>Welcome to the AWS Services Documentation. This guide provides an overview of the services offered by Amazon Web Services (AWS) and their classifications.</p>"},{"location":"cloud/aws/#what-is-aws","title":"What is AWS?","text":"<p>AWS provides cloud computing capabilities, enabling developers to focus on development without managing infrastructure at home or work. It offers various service models to suit different needs:</p>"},{"location":"cloud/aws/#service-models","title":"Service Models","text":""},{"location":"cloud/aws/#1-infrastructure-as-a-service-iaas","title":"1. Infrastructure as a Service (IaaS)","text":"<ul> <li>Description: Provides building blocks for cloud IT, including networking, computers, and data storage.</li> <li>Key Features:</li> <li>You manage everything except the physical infrastructure.</li> <li>Example: Amazon EC2 (Elastic Compute Cloud).</li> </ul>"},{"location":"cloud/aws/#2-platform-as-a-service-paas","title":"2. Platform as a Service (PaaS)","text":"<ul> <li>Description: Removes the need to manage underlying infrastructure, focusing on application deployment and management.</li> <li>Key Features:</li> <li>You manage only the application and data.</li> <li>Example: AWS Elastic Beanstalk.</li> </ul>"},{"location":"cloud/aws/#3-software-as-a-service-saas","title":"3. Software as a Service (SaaS)","text":"<ul> <li>Description: A complete product managed by a service provider, accessed directly through an application.</li> <li>Key Features:</li> <li>You interact with the application for all features.</li> <li>Examples: Amazon Rekognition, Dropbox, Gmail.</li> </ul> <p>Explore the documentation to learn more about AWS services and how they can help you build scalable, reliable, and cost-effective solutions.</p>"},{"location":"cloud/aws/exam-questions/","title":"From Udemy Practice Exams - Not Stephane-only","text":"<ol> <li>A programmer is creating an application that requires signed requests (Signature Version 4) for invoking other AWS services. Having constructed a canonical request, created the string to sign, and calculated the signing information, which strategies can the programmer apply to finalize a signed request? (Select TWO.)<ol> <li>When sending a request to AWS services using Signature Version 4, the signature should be included in the \"Authorization\" HTTP header or as a parameter \"X-Amz-Signature\" in the query string.</li> </ol> </li> <li>A Development team has deployed several applications running on an Auto Scaling fleet of Amazon EC2 instances. The Operations team have asked for a display that shows a key performance metric for each application on a single screen for monitoring purposes.<ol> <li>Create a custom namespace with a unique metric name for each application</li> <li>Explanation: Therefore, the Developer should create a custom namespace with a unique metric name for each application. This namespace will then allow the metrics for each individual application to be shown in a single view through CloudWatch.</li> </ol> </li> <li>An application is using Amazon DynamoDB as its data store and needs to be able to read 100 items per second as strongly consistent reads. Each item is 5 KB in size. What value should be set for the table's provisioned throughput for reads?<ol> <li>To determine the number of RCUs required to handle 100 strongly consistent reads per/second with an average item size of 5KB, perform the following steps:</li> <li>Determine the average item size by rounding up the next multiple of 4KB (5KB rounds up to 8KB).</li> <li>Determine the RCU per item by dividing the item size by 4KB (8KB/4KB = 2).</li> <li>Multiply the value from step 2 with the number of reads required per second (2x100 = 200).</li> </ol> </li> <li>An application uses both Amazon EC2 instances and on-premises servers. The on-premises servers are a critical component of the application, and a developer wants to collect metrics and logs from these servers. The developer would like to use Amazon CloudWatch. How can the developer accomplish this?<ol> <li>Install the CloudWatch agent on the on-premises servers and specify IAM credentials with permissions to CloudWatch.</li> </ol> </li> <li>A Developer is designing a fault-tolerant environment where client sessions will be saved. How can the Developer ensure that no sessions are lost if an Amazon EC2 instance fails?<ol> <li>Use Amazon DynamoDB to perform scalable session handling</li> <li>The\u00a0DynamoDB Session Handler\u00a0is a custom session handler for PHP that allows developers to use Amazon DynamoDB as a session store. Using DynamoDB for session storage alleviates issues that occur with session handling in a distributed web application by moving sessions off of the local file system and into a shared location. DynamoDB is fast, scalable, easy to setup, and handles replication of your data automatically.</li> </ol> </li> <li>An application uses Amazon API Gateway, an AWS Lambda function and a DynamoDB table. The developer requires that another Lambda function is triggered when an item lifecycle activity occurs in the DynamoDB table.<ol> <li>Enable a DynamoDB stream and trigger the Lambda function synchronously from the stream</li> </ol> </li> <li>A company uses an Amazon S3 bucket to store a large number of sensitive files relating to eCommerce transactions. The company has a policy that states that all data written to the S3 bucket must be encrypted.<ol> <li>Create an S3 bucket policy that denies any S3 Put request that does not include the x-amz-server-side-encryption</li> </ol> </li> <li>An application is being migrated into the cloud. The application is stateless and will run on a fleet of Amazon EC2 instances. The application should scale elastically. How can a Developer ensure that the number of instances available is sufficient for current demand?<ol> <li>Create a launch configuration and use Amazon EC2 Auto Scaling</li> </ol> </li> <li>A Developer is designing a cloud native application. The application will use several AWS Lambda functions that will process items that the functions read from an event source. Which AWS services are supported for Lambda event source mappings? (Select THREE.)<ol> <li>Amazon Simple Queue Service (SQS)</li> <li>Amazon DynamoDB</li> <li>Amazon Kinesis</li> </ol> </li> <li>An engineer is constructing an AWS Lambda function and intends to log specific key events that transpire during the function's execution. To correlate the events with a particular function invocation, the engineer is looking to incorporate a unique identifier. The following code segment has been added to the Lambda function: function handler (event, context) {}<ol> <li>Use\u00a0context.awsRequestId\u00a0within the function to fetch the unique identifier associated with each invocation.</li> </ol> </li> </ol>"},{"location":"cloud/aws/exam-questions/#from-exam-topics-dva-c02","title":"From Exam Topics DVA-C02","text":""},{"location":"cloud/aws/exam-questions/#question-1-marked","title":"Question 1 (marked)","text":"<p>A company is implementing an application on Amazon EC2 instances. The application needs to process incoming transactions. When the application detects a transaction that is not valid, the application must send a chat message to the company's support team. To send the message, the application needs to retrieve the access token to authenticate by using the chat API. A developer needs to implement a solution to store the access token. The access token must be encrypted at rest and in transit. The access token must also be accessible from other AWS accounts. Which solution will meet these requirements with the LEAST management overhead?</p> <p>C. Use AWS Secrets Manager with an AWS Key Management Service (AWS KMS) customer managed key to store the access token. Add a resource-based policy to the secret to allow access from other accounts. Update the IAM role of the EC2 instances with permissions to access Secrets Manager. Retrieve the token from Secrets Manager. Use the decrypted access token to send the message to the chat</p> <p>Note: You cannot use a resource-based policy with a parameter in the Parameter Store</p>"},{"location":"cloud/aws/exam-questions/#question-2","title":"Question 2","text":"<p>A company is running Amazon EC2 instances in multiple AWS accounts. A developer needs to implement an application that collects all the lifecycle events of the EC2 instances. The application needs to store the lifecycle events in a single Amazon Simple Queue Service (Amazon SQS) queue in the company's main AWS account for further processing. Which solution will meet these requirements?</p> <p>D.\u00a0Configure the permissions on the main account event bus to receive events from all accounts. Create an Amazon EventBridge rule in each account to send all the EC2 instance lifecycle events to the main account event bus. Add an EventBridge rule to the main account event bus that matches all EC2 instance lifecycle events. Set the SQS queue as a target for the rule</p>"},{"location":"cloud/aws/exam-questions/#question-3","title":"Question 3","text":"<p>An application is using Amazon Cognito user pools and identity pools for secure access. A developer wants to integrate the user-specific file upload and download features in the application with Amazon S3. The developer must ensure that the files are saved and retrieved in a secure manner and that users can access only their own files. The file sizes range from 3 KB to 300 MB. Which option will meet these requirements with the HIGHEST level of security?</p> <p>D.\u00a0Use an IAM policy within the Amazon Cognito identity prefix to restrict users to use their own folders in Amazon S3.</p>"},{"location":"cloud/aws/exam-questions/#question-4","title":"Question 4","text":"<p>A company is building a scalable data management solution by using AWS services to improve the speed and agility of development. The solution will ingest large volumes of data from various sources and will process this data through multiple business rules and transformations. The solution requires business rules to run in sequence and to handle reprocessing of data if errors occur when the business rules run. The company needs the solution to be scalable and to require the least possible maintenance. Which AWS service should the company use to manage and automate the orchestration of the data flows to meet these requirements?</p> <p>B.\u00a0AWS Step Functions</p>"},{"location":"cloud/aws/exam-questions/#question-5","title":"Question 5","text":"<p>A developer has created an AWS Lambda function that is written in Python. The Lambda function reads data from objects in Amazon S3 and writes data to an Amazon DynamoDB table. The function is successfully invoked from an S3 event notification when an object is created. However, the function fails when it attempts to write to the DynamoDB table. What is the MOST likely cause of this issue?</p> <p>C.\u00a0The Lambda function does not have IAM permissions to write to DynamoDB.</p>"},{"location":"cloud/aws/exam-questions/#question-6","title":"Question 6","text":"<p>A developer is creating an AWS CloudFormation template to deploy Amazon EC2 instances across multiple AWS accounts. The developer must choose the EC2 instances from a list of approved instance types. How can the developer incorporate the list of approved instance types in the CloudFormation template?</p> <p>D.\u00a0In the CloudFormation template, create a parameter with the list of EC2 instance types as AllowedValues.</p>"},{"location":"cloud/aws/exam-questions/#question-7","title":"Question 7","text":"<p>A developer has an application that makes batch requests directly to Amazon DynamoDB by using the BatchGetItem low-level API operation. The responses frequently return values in the UnprocessedKeys element. Which actions should the developer take to increase the resiliency of the application when the batch response includes values in UnprocessedKeys? (Choose two.)</p> <p>B.\u00a0Retry the batch operation with exponential backoff and randomized delay. D.\u00a0Increase the provisioned read capacity of the DynamoDB tables that the operation accesses.</p>"},{"location":"cloud/aws/exam-questions/#question-8","title":"Question 8","text":"<p>A company is running a custom application on a set of on-premises Linux servers that are accessed using Amazon API Gateway. AWS X-Ray tracing has been enabled on the API test stage. How can a developer enable X-Ray tracing on the on-premises servers with the LEAST amount of configuration?</p> <p>B.\u00a0Install and run the X-Ray daemon on the on-premises servers to capture and relay the data to the X-Ray service.</p>"},{"location":"cloud/aws/exam-questions/#question-9","title":"Question 9","text":"<p>A company wants to share information with a third party. The third party has an HTTP API endpoint that the company can use to share the information. The company has the required API key to access the HTTP API. The company needs a way to manage the API key by using code. The integration of the API key with the application code cannot affect application performance. Which solution will meet these requirements MOST securely?</p> <p>A.\u00a0Store the API credentials in AWS Secrets Manager. Retrieve the API credentials at runtime by using the AWS SDK. Use the credentials to make the API call.\u00a0Most Voted</p>"},{"location":"cloud/aws/exam-questions/#question-10","title":"Question 10","text":"<p>A developer is deploying a new application to Amazon Elastic Container Service (Amazon ECS). The developer needs to securely store and retrieve different types of variables. These variables include authentication information for a remote API, the URL for the API, and credentials. The authentication information and API URL must be available to all current and future deployed versions of the application across development, testing, and production environments. How should the developer retrieve the variables with the FEWEST application changes?</p> <p>A.\u00a0Update the application to retrieve the variables from AWS Systems Manager Parameter Store. Use unique paths in Parameter Store for each variable in each environment. Store the credentials in AWS Secrets Manager in each environment.</p>"},{"location":"cloud/aws/exam-questions/#question-11","title":"Question 11","text":"<p>A company is migrating legacy internal applications to AWS. Leadership wants to rewrite the internal employee directory to use native AWS services. A developer needs to create a solution for storing employee contact details and high-resolution photos for use with the new application. Which solution will enable the search and retrieval of each employee's individual details and high-resolution photos using AWS APIs?</p> <p>B.\u00a0Store each employee's contact information in an Amazon DynamoDB table along with the object keys for the photos stored in Amazon S3.</p>"},{"location":"cloud/aws/exam-questions/#question-12","title":"Question 12","text":"<p>A developer is creating an application that will give users the ability to store photos from their cellphones in the cloud. The application needs to support tens of thousands of users. The application uses an Amazon API Gateway REST API that is integrated with AWS Lambda functions to process the photos. The application stores details about the photos in Amazon DynamoDB. Users need to create an account to access the application. In the application, users must be able to upload photos and retrieve previously uploaded photos. The photos will range in size from 300 KB to 5 MB. Which solution will meet these requirements with the LEAST operational overhead?</p> <p>B.\u00a0Use Amazon Cognito user pools to manage user accounts. Create an Amazon Cognito user pool authorizer in API Gateway to control access to the API. Use the Lambda function to store the photos in Amazon S3. Store the object's S3 key as part of the photo details in the DynamoDB table. Retrieve previously uploaded photos by querying DynamoDB for the S3 key.</p>"},{"location":"cloud/aws/exam-questions/#question-13","title":"Question 13","text":"<p>A company receives food orders from multiple partners. The company has a microservices application that uses Amazon API Gateway APIs with AWS Lambda integration. Each partner sends orders by calling a customized API that is exposed through API Gateway. The API call invokes a shared Lambda function to process the orders. Partners need to be notified after the Lambda function processes the orders. Each partner must receive updates for only the partner's own orders. The company wants to add new partners in the future with the fewest code changes possible. Which solution will meet these requirements in the MOST scalable way?</p> <p>C.\u00a0Create an Amazon Simple Notification Service (Amazon SNS) topic. Configure the Lambda function to publish messages with specific attributes to the SNS topic. Subscribe each partner to the SNS topic. Apply the appropriate filter policy to the topic subscriptions.</p>"},{"location":"cloud/aws/exam-questions/#question-14-marked","title":"Question 14 (marked)","text":"<p>A financial company must store original customer records for 10 years for legal reasons. A complete record contains personally identifiable information (PII). According to local regulations, PII is available to only certain people in the company and must not be shared with third parties. The company needs to make the records available to third-party organizations for statistical analysis without sharing the PII. A developer wants to store the original immutable record in Amazon S3. Depending on who accesses the S3 document, the document should be returned as is or with all the PII removed. The developer has written an AWS Lambda function to remove the PII from the document. The function is named removePii. What should the developer do so that the company can meet the PII requirements while maintaining only one copy of the document?</p> <p>C.\u00a0Create an S3 Object Lambda access point from the S3 console. Select the removePii function. Use S3 Access Points to access the object without PII.\u00a0(An S3 Object Lambda access point is a new type of access point that you can create to invoke your own AWS Lambda function to modify the content of an S3 object. You can use S3 Object Lambda access points to transform data as it is being retrieved from an S3 bucket, without modifying the original data stored in the bucket)</p>"},{"location":"cloud/aws/exam-questions/#question-15","title":"Question 15","text":"<p>A developer is deploying an AWS Lambda function The developer wants the ability to return to older versions of the function quickly and seamlessly. How can the developer achieve this goal with the LEAST operational overhead?</p> <p>B.\u00a0Use a function alias with different versions.</p>"},{"location":"cloud/aws/exam-questions/#question-16","title":"Question 16","text":"<p>A developer has written an AWS Lambda function. The function is CPU-bound. The developer wants to ensure that the function returns responses quickly. How can the developer improve the function's performance?</p> <p>B.\u00a0Increase the function's memory.</p>"},{"location":"cloud/aws/exam-questions/#question-17","title":"Question 17","text":"<p>For a deployment using AWS Code Deploy, what is the run order of the hooks for in-place deployments?</p> <p>B.\u00a0ApplicationStop -&gt; BeforeInstall -&gt; AfterInstall -&gt; ApplicationStart</p>"},{"location":"cloud/aws/exam-questions/#question-18-marked","title":"Question 18 (marked)","text":"<p>A company is building a serverless application on AWS. The application uses an AWS Lambda function to process customer orders 24 hours a day, 7 days a week. The Lambda function calls an external vendor's HTTP API to process payments. During load tests, a developer discovers that the external vendor payment processing API occasionally times out and returns errors. The company expects that some payment processing API calls will return errors. The company wants the support team to receive notifications in near real time only when the payment processing external API error rate exceed 5% of the total number of transactions in an hour. Developers need to use an existing Amazon Simple Notification Service (Amazon SNS) topic that is configured to notify the support team. Which solution will meet these requirements?</p> <p>B.\u00a0Publish custom metrics to CloudWatch that record the failures of the external payment processing API calls. Configure a CloudWatch alarm to notify the existing SNS topic when error rate exceeds the specified rate.</p>"},{"location":"cloud/aws/exam-questions/#question-19","title":"Question 19","text":"<p>A company is offering APIs as a service over the internet to provide unauthenticated read access to statistical information that is updated daily. The company uses Amazon API Gateway and AWS Lambda to develop the APIs. The service has become popular, and the company wants to enhance the responsiveness of the APIs. Which action can help the company achieve this goal?</p> <p>A.\u00a0Enable API caching in API Gateway.</p>"},{"location":"cloud/aws/exam-questions/#question-20","title":"Question 20","text":"<p>A developer wants to store information about movies. Each movie has a title, release year, and genre. The movie information also can include additional properties about the cast and production crew. This additional information is inconsistent across movies. For example, one movie might have an assistant director, and another movie might have an animal trainer. The developer needs to implement a solution to support the following use cases: For a given title and release year, get all details about the movie that has that title and release year. For a given title, get all details about all movies that have that title. For a given genre, get all details about all movies in that genre. Which data store configuration will meet these requirements?</p> <p>A. Create an Amazon DynamoDB table. Configure the table with a primary key that consists of the title as the partition key and the release year as the sort key. Create a global secondary index that uses the genre as the partition key and the title as the sort key</p>"},{"location":"cloud/aws/exam-questions/#question-21","title":"Question 21","text":"<p>A developer maintains an Amazon API Gateway REST API. Customers use the API through a frontend UI and Amazon Cognito authentication. The developer has a new version of the API that contains new endpoints and backward-incompatible interface changes. The developer needs to provide beta access to other developers on the team without affecting customers. Which solution will meet these requirements with the LEAST operational overhead?</p> <p>A.\u00a0Define a development stage on the API Gateway API. Instruct the other developers to point the endpoints to the development stage.</p>"},{"location":"cloud/aws/exam-questions/#question-22","title":"Question 22","text":"<p>A developer is creating an application that will store personal health information (PHI). The PHI needs to be encrypted at all times. An encrypted Amazon RDS for MySQL DB instance is storing the data. The developer wants to increase the performance of the application by caching frequently accessed data while adding the ability to sort or rank the cached datasets. Which solution will meet these requirements?</p> <p>Create an Amazon ElastiCache for Redis instance. Enable encryption of data in transit and at rest. Store frequently accessed data in the cache. (Redis Sorted Sets to easily implement a dashboard that keeps a list of sorted data by their rank.)</p>"},{"location":"cloud/aws/exam-questions/#question-23-marked","title":"Question 23 (marked)","text":"<p>A company has a multi-node Windows legacy application that runs on premises. The application uses a network shared folder as a centralized configuration repository to store configuration files in .xml format. The company is migrating the application to Amazon EC2 instances. As part of the migration to AWS, a developer must identify a solution that provides high availability for the repository. Which solution will meet this requirement MOST cost-effectively?</p> <p>C.\u00a0Create an Amazon S3 bucket to host the repository. Migrate the existing .xml files to the S3 bucket. Update the application code to use the AWS SDK to read and write configuration files from Amazon S3 (Note: EBS is not scalable and highly-available)</p>"},{"location":"cloud/aws/exam-questions/#question-24","title":"Question 24","text":"<p>A company wants to deploy and maintain static websites on AWS. Each website's source code is hosted in one of several version control systems, including AWS CodeCommit, Bitbucket, and GitHub. The company wants to implement phased releases by using development, staging, user acceptance testing, and production environments in the AWS Cloud. Deployments to each environment must be started by code merges on the relevant Git branch. The company wants to use HTTPS for all data exchange. The company needs a solution that does not require servers to run continuously. Which solution will meet these requirements with the LEAST operational overhead?</p> <p>A.\u00a0Host each website by using AWS Amplify with a serverless backend. Conned the repository branches that correspond to each of the desired environments. Start deployments by merging code changes to a desired branch.</p>"},{"location":"cloud/aws/exam-questions/#question-25","title":"Question 25","text":"<p>A company is migrating an on-premises database to Amazon RDS for MySQL. The company has read-heavy workloads. The company wants to refactor the code to achieve optimum read performance for queries. Which solution will meet this requirement with LEAST current and future effort?</p> <p>C.\u00a0Deploy Amazon RDS with one or more read replicas. Modify the application code so that queries use the URL for the read replicas.</p>"},{"location":"cloud/aws/exam-questions/#question-26-marked","title":"Question 26 (marked)","text":"<p>A developer is creating an application that will be deployed on IoT devices. The application will send data to a RESTful API that is deployed as an AWS Lambda function. The application will assign each API request a unique identifier. The volume of API requests from the application can randomly increase at any given time of day. During periods of request throttling, the application might need to retry requests. The API must be able to handle duplicate requests without inconsistencies or data loss. Which solution will meet these requirements?</p> <p>B.\u00a0Create an Amazon DynamoDB table. Store the unique identifier for each request in the table. Modify the Lambda function to check the table for the identifier before processing the request</p> <p>Note: Focus on Durability not latency (thus why not ElastiCache)</p>"},{"location":"cloud/aws/exam-questions/#question-27-marked","title":"Question 27 (marked)","text":"<p>A developer wants to expand an application to run in multiple AWS Regions. The developer wants to copy Amazon Machine Images (AMIs) with the latest changes and create a new application stack in the destination Region. According to company requirements, all AMIs must be encrypted in all Regions. However, not all the AMIs that the company uses are encrypted. How can the developer expand the application to run in the destination Region while meeting the encryption requirement?</p> <p>A. Create new AMIs, and specify encryption parameters. Copy the encrypted AMIs to the destination Region. Delete the unencrypted AMIs.</p> <p>Note: The best solution for meeting the encryption requirement is to create new AMIs with encryption enabled and copy them to the destination Region. By default, when an AMI is copied to another Region, it is not encrypted in the destination Region even if it is encrypted in the source Region. Therefore, the developer must create new encrypted AMIs that can be used in the destination Region. Once the new encrypted AMIs have been created, they can be copied to the destination Region. The unencrypted AMIs can then be deleted to ensure that all instances running in all Regions are using only encrypted AMIs.</p>"},{"location":"cloud/aws/exam-questions/#question-28","title":"Question 28","text":"<p>A company hosts a client-side web application for one of its subsidiaries on Amazon S3. The web application can be accessed through Amazon CloudFront from https://www.example.com. After a successful rollout, the company wants to host three more client-side web applications for its remaining subsidiaries on three separate S3 buckets. To achieve this goal, a developer moves all the common JavaScript files and web fonts to a central S3 bucket that serves the web applications. However, during testing, the developer notices that the browser blocks the JavaScript files and web fonts. What should the developer do to prevent the browser from blocking the JavaScript files and web fonts?</p> <p>C.\u00a0Create a cross-origin resource sharing (CORS) configuration that allows access to the central S3 bucket. Add the CORS configuration to the central S3 bucket.</p>"},{"location":"cloud/aws/exam-questions/#question-29","title":"Question 29","text":"<p>An application is processing clickstream data using Amazon Kinesis. The clickstream data feed into Kinesis experiences periodic spikes. The PutRecords API call occasionally fails and the logs show that the failed call returns the response shown below. Which techniques will help mitigate this exception? (Choose two.)</p> <p><code>Some image which has Kinesis Throughput Exceeded for a Shard</code></p> <p>A.\u00a0Implement retries with exponential backoff. C.\u00a0Reduce the frequency and/or size of the requests.</p>"},{"location":"cloud/aws/exam-questions/#question-30","title":"Question 30","text":"<p>A company has an application that uses Amazon Cognito user pools as an identity provider. The company must secure access to user records. The company has set up multi-factor authentication (MFA). The company also wants to send a login activity notification by email every time a user logs in. What is the MOST operationally efficient solution that meets this requirement?</p> <p>B.\u00a0Create an AWS Lambda function that uses Amazon Simple Email Service (Amazon SES) to send the email notification. Add an Amazon Cognito post authentication Lambda trigger for the function.</p>"},{"location":"cloud/aws/exam-questions/#question-31","title":"Question 31","text":"<p>A developer has an application that stores data in an Amazon S3 bucket. The application uses an HTTP API to store and retrieve objects. When the PutObject API operation adds objects to the S3 bucket the developer must encrypt these objects at rest by using server-side encryption with Amazon S3 managed keys (SSE-S3). Which solution will meet this requirement?</p> <p>B.\u00a0Set the <code>x-amz-server-side-encryption</code> header when invoking the PutObject API operation.</p>"},{"location":"cloud/aws/exam-questions/#question-32","title":"Question 32","text":"<p>A developer needs to perform geographic load testing of an API. The developer must deploy resources to multiple AWS Regions to support the load testing of the API. How can the developer meet these requirements without additional application code?</p> <p>B.\u00a0Create an AWS CloudFormation template that defines the load test resources. Use the AWS CLI create-stack-set command to create a stack set in the desired Regions.</p>"},{"location":"cloud/aws/exam-questions/#question-33","title":"Question 33","text":"<p>A developer is creating an application that includes an Amazon API Gateway REST API in the us-east-2 Region. The developer wants to use Amazon CloudFront and a custom domain name for the API. The developer has acquired an SSL/TLS certificate for the domain from a third-party provider. How should the developer configure the custom domain for the application?</p> <p>D.\u00a0Import the SSL/TLS certificate into AWS Certificate Manager (ACM) in the us-east-1 Region. Create a DNS CNAME record for the custom domain.</p>"},{"location":"cloud/aws/exam-questions/#question-34","title":"Question 34","text":"<p>A developer is creating a template that uses AWS CloudFormation to deploy an application. The application is serverless and uses Amazon API Gateway, Amazon DynamoDB, and AWS Lambda. Which AWS service or tool should the developer use to define serverless resources in YAML?</p> <p>C.\u00a0AWS Serverless Application Model (AWS SAM)</p>"},{"location":"cloud/aws/exam-questions/#question-35","title":"Question 35","text":"<p>A developer wants to insert a record into an Amazon DynamoDB table as soon as a new file is added to an Amazon S3 bucket. Which set of steps would be necessary to achieve this?</p> <p>B.\u00a0Configure an S3 event to invoke an AWS Lambda function that inserts records into DynamoDB.</p>"},{"location":"cloud/aws/exam-questions/#question-36","title":"Question 36","text":"<p>A development team maintains a web application by using a single AWS CloudFormation template. The template defines web servers and an Amazon RDS database. The team uses the Cloud Formation template to deploy the Cloud Formation stack to different environments. During a recent application deployment, a developer caused the primary development database to be dropped and recreated. The result of this incident was a loss of data. The team needs to avoid accidental database deletion in the future. Which solutions will meet these requirements? (Choose two.)</p> <p>A.\u00a0Add a CloudFormation Deletion Policy attribute with the Retain value to the database resource. B.\u00a0Update the CloudFormation stack policy to prevent updates to the database.</p>"},{"location":"cloud/aws/exam-questions/#question-37","title":"Question 37","text":"<p>A company has an Amazon S3 bucket that contains sensitive data. The data must be encrypted in transit and at rest. The company encrypts the data in the S3 bucket by using an AWS Key Management Service (AWS KMS) key. A developer needs to grant several other AWS accounts the permission to use the S3 GetObject operation to retrieve the data from the S3 bucket. How can the developer enforce that all requests to retrieve the data provide encryption in transit?</p> <p>A.\u00a0Define a resource-based policy on the S3 bucket to deny access when a request meets the condition \u201caws:SecureTransport\u201d: \u201cfalse\u201d.</p>"},{"location":"cloud/aws/exam-questions/#question-38","title":"Question 38","text":"<p>An application that is hosted on an Amazon EC2 instance needs access to files that are stored in an Amazon S3 bucket. The application lists the objects that are stored in the S3 bucket and displays a table to the user. During testing, a developer discovers that the application does not show any objects in the list. What is the MOST secure way to resolve this issue?</p> <p>B.\u00a0Update the IAM instance profile that is attached to the EC2 instance to include the S3:ListBucket permission for the S3 bucket.</p>"},{"location":"cloud/aws/exam-questions/#question-39","title":"Question 39","text":"<p>A company is planning to securely manage one-time fixed license keys in AWS. The company's development team needs to access the license keys in automaton scripts that run in Amazon EC2 instances and in AWS CloudFormation stacks. Which solution will meet these requirements MOST cost-effectively?</p> <p>C.\u00a0AWS Systems Manager Parameter Store SecureString parameters</p>"},{"location":"cloud/aws/exam-questions/#question-40","title":"Question 40","text":"<p>A company has deployed infrastructure on AWS. A development team wants to create an AWS Lambda function that will retrieve data from an Amazon Aurora database. The Amazon Aurora database is in a private subnet in company's VPC. The VPC is named VPC1. The data is relational in nature. The Lambda function needs to access the data securely. Which solution will meet these requirements?</p> <p>A.\u00a0Create the Lambda function. Configure VPC1 access for the function. Attach a security group named SG1 to both the Lambda function and the database. Configure the security group inbound and outbound rules to allow TCP traffic on Port 3306.</p>"},{"location":"cloud/aws/exam-questions/#question-41","title":"Question 41","text":"<p>A developer is building a web application that uses Amazon API Gateway to expose an AWS Lambda function to process requests from clients. During testing, the developer notices that the API Gateway times out even though the Lambda function finishes under the set time limit. Which of the following API Gateway metrics in Amazon CloudWatch can help the developer troubleshoot the issue? (Choose two.)</p> <p>B.\u00a0IntegrationLatency D.\u00a0Latency</p>"},{"location":"cloud/aws/exam-questions/#question-42","title":"Question 42","text":"<p>A development team wants to build a continuous integration/continuous delivery (CI/CD) pipeline. The team is using AWS CodePipeline to automate the code build and deployment. The team wants to store the program code to prepare for the CI/CD pipeline. Which AWS service should the team use to store the program code?</p> <p>C.\u00a0AWS CodeCommit</p>"},{"location":"cloud/aws/exam-questions/#question-43","title":"Question 43","text":"<p>A developer is designing an AWS Lambda function that creates temporary files that are less than 10 MB during invocation. The temporary files will be accessed and modified multiple times during invocation. The developer has no need to save or retrieve these files in the future. Where should the temporary files be stored?</p> <p>A.\u00a0the /tmp directory</p>"},{"location":"cloud/aws/exam-questions/#question-44","title":"Question 44","text":"<p>A developer is designing a serverless application with two AWS Lambda functions to process photos. One Lambda function stores objects in an Amazon S3 bucket and stores the associated metadata in an Amazon DynamoDB table. The other Lambda function fetches the objects from the S3 bucket by using the metadata from the DynamoDB table. Both Lambda functions use the same Python library to perform complex computations and are approaching the quota for the maximum size of zipped deployment packages. What should the developer do to reduce the size of the Lambda deployment packages with the LEAST operational overhead?</p> <p>B.\u00a0Create a Lambda layer with the required Python library. Use the Lambda layer in both Lambda functions.</p>"},{"location":"cloud/aws/exam-questions/#question-45","title":"Question 45","text":"<p>A developer is writing an AWS Lambda function. The developer wants to log key events that occur while the Lambda function runs. The developer wants to include a unique identifier to associate the events with a specific function invocation. The developer adds the following code to the Lambda function:</p> <pre><code>function handler(event, context) {}\n</code></pre> <p>Which solution will meet this requirement?</p> <p>A.\u00a0Obtain the request identifier from the AWS request ID field in the context object. Configure the application to write logs to standard output.</p>"},{"location":"cloud/aws/exam-questions/#question-46","title":"Question 46","text":"<p>A developer is working on a serverless application that needs to process any changes to an Amazon DynamoDB table with an AWS Lambda function. How should the developer configure the Lambda function to detect changes to the DynamoDB table?</p> <p>C.\u00a0Enable DynamoDB Streams on the table. Create a trigger to connect the DynamoDB stream to the Lambda function.</p>"},{"location":"cloud/aws/exam-questions/#question-47","title":"Question 47","text":"<p>An application uses an Amazon EC2 Auto Scaling group. A developer notices that EC2 instances are taking a long time to become available during scale-out events. The UserData script is taking a long time to run. The developer must implement a solution to decrease the time that elapses before an EC2 instance becomes available. The solution must make the most recent version of the application available at all times and must apply all available security updates. The solution also must minimize the number of images that are created. The images must be validated. Which combination of steps should the developer take to meet these requirements? (Choose two.)</p> <p>A.\u00a0Use EC2 Image Builder to create an Amazon Machine Image (AMI). Install all the patches and agents that are needed to manage and run the application. Update the Auto Scaling group launch configuration to use the AMI E.\u00a0Remove any commands that perform operating system patching from the UserData script</p>"},{"location":"cloud/aws/exam-questions/#question-48","title":"Question 48","text":"<p>A developer is creating an AWS Lambda function that needs credentials to connect to an Amazon RDS for MySQL database. An Amazon S3 bucket currently stores the credentials. The developer needs to improve the existing solution by implementing credential rotation and secure storage. The developer also needs to provide integration with the Lambda function. Which solution should the developer use to store and retrieve the credentials with the LEAST management overhead?</p> <p>C.\u00a0Store the credentials in AWS Secrets Manager. Set the secret type to Credentials for Amazon RDS database. Select the database that the secret will access. Use the default AWS Key Management Service (AWS KMS) key to encrypt the secret. Enable automatic rotation for the secret. Use the secret from Secrets Manager on the Lambda function to connect to the database.</p>"},{"location":"cloud/aws/exam-questions/#question-49","title":"Question 49","text":"<p>A developer has written the following IAM policy to provide access to an Amazon S3 bucket:</p> <pre><code>An image which has 2 statements:\nStatement 1 =&gt; Allow =&gt; GetObject &amp; PutObject =&gt; for a arn::s3:DOC-EXAMPLE-BUCKET/*\nStatement 2 =&gt; Deny =&gt; Any Action =&gt; arn::s3:DOC-EXAMPLE-BUCKET/secrets\n</code></pre> <p>Which access does the policy allow regarding the s3:GetObject and s3:PutObject actions?</p> <p>D.\u00a0Access on all objects in the \u201cDOC-EXAMPLE-BUCKET\u201d bucket except on objects that start with \u201csecrets\u201d</p>"},{"location":"cloud/aws/exam-questions/#question-50","title":"Question 50","text":"<p>A developer is creating a mobile app that calls a backend service by using an Amazon API Gateway REST API. For integration testing during the development phase, the developer wants to simulate different backend responses without invoking the backend service. Which solution will meet these requirements with the LEAST operational overhead?</p> <p>D.\u00a0Use a request mapping template to select the mock integration response.</p>"},{"location":"cloud/aws/exam-questions/#question-51","title":"Question 51","text":"<p>A developer has a legacy application that is hosted on-premises. Other applications hosted on AWS depend on the on-premises application for proper functioning. In case of any application errors, the developer wants to be able to use Amazon CloudWatch to monitor and troubleshoot all applications from one place. How can the developer accomplish this?</p> <p>B.\u00a0Download the CloudWatch agent to the on-premises server. Configure the agent to use IAM user credentials with permissions for CloudWatch.</p>"},{"location":"cloud/aws/exam-questions/#question-52","title":"Question 52","text":"<p>An Amazon Kinesis Data Firehose delivery stream is receiving customer data that contains personally identifiable information. A developer needs to remove pattern-based customer identifiers from the data and store the modified data in an Amazon S3 bucket. What should the developer do to meet these requirements?</p> <p>A.\u00a0Implement Kinesis Data Firehose data transformation as an AWS Lambda function. Configure the function to remove the customer identifiers. Set an Amazon S3 bucket as the destination of the delivery stream</p>"},{"location":"cloud/aws/exam-questions/#question-53-marked","title":"Question 53 (marked)","text":"<p>A developer is using an AWS Lambda function to generate avatars for profile pictures that are uploaded to an Amazon S3 bucket. The Lambda function is automatically invoked for profile pictures that are saved under the /original/ S3 prefix. The developer notices that some pictures cause the Lambda function to time out. The developer wants to implement a fallback mechanism by using another Lambda function that resizes the profile picture. Which solution will meet these requirements with the LEAST development effort?</p> <p>B.\u00a0Create an Amazon Simple Queue Service (Amazon SQS) queue. Set the SQS queue as a destination with an on failure condition for the avatar generator Lambda function. Configure the image resize Lambda function to poll from the SQS queue.</p> <p>Note: might be also: A. Set the image resize Lambda function as a destination of the avatar generator Lambda function for the events that fail processing</p>"},{"location":"cloud/aws/exam-questions/#question-54-marked","title":"Question 54 (marked)","text":"<p>A developer needs to migrate an online retail application to AWS to handle an anticipated increase in traffic. The application currently runs on two servers: one server for the web application and another server for the database. The web server renders webpages and manages session state in memory. The database server hosts a MySQL database that contains order details. When traffic to the application is heavy, the memory usage for the web server approaches 100% and the application slows down considerably. The developer has found that most of the memory increase and performance decrease is related to the load of managing additional user sessions. For the web server migration, the developer will use Amazon EC2 instances with an Auto Scaling group behind an Application Load Balancer. Which additional set of changes should the developer make to the application to improve the application's performance?</p> <p>B.\u00a0Use Amazon ElastiCache for Memcached to store and manage the session data. Use an Amazon RDS for MySQL DB instance to store the application data.</p>"},{"location":"cloud/aws/exam-questions/#question-55","title":"Question 55","text":"<p>An application uses Lambda functions to extract metadata from files uploaded to an S3 bucket; the metadata is stored in Amazon DynamoDB. The application starts behaving unexpectedly, and the developer wants to examine the logs of the Lambda function code for errors. Based on this system configuration, where would the developer find the logs?</p> <p>C.\u00a0Amazon CloudWatch</p>"},{"location":"cloud/aws/exam-questions/#question-56","title":"Question 56","text":"<p>A company is using an AWS Lambda function to process records from an Amazon Kinesis data stream. The company recently observed slow processing of the records. A developer notices that the iterator age metric for the function is increasing and that the Lambda run duration is constantly above normal. Which actions should the developer take to increase the processing speed? (Choose two.)</p> <p>A.\u00a0Increase the number of shards of the Kinesis data stream C.\u00a0Increase the memory that is allocated to the Lambda function</p>"},{"location":"cloud/aws/exam-questions/#question-57","title":"Question 57","text":"<p>A company needs to harden its container images before the images are in a running state. The company's application uses Amazon Elastic Container Registry (Amazon ECR) as an image registry. Amazon Elastic Kubernetes Service (Amazon EKS) for compute, and an AWS CodePipeline pipeline that orchestrates a continuous integration and continuous delivery (CI/CD) workflow. Dynamic application security testing occurs in the final stage of the pipeline after a new image is deployed to a development namespace in the EKS cluster. A developer needs to place an analysis stage before this deployment to analyze the container image earlier in the CI/CD pipeline. Which solution will meet these requirements with the MOST operational efficiency?</p> <p>B.\u00a0Create a new CodePipeline stage that occurs after the container image is built. Configure ECR basic image scanning to scan on image push. Use an AWS Lambda function as the action provider. Configure the Lambda function to check the scan results and to fail the pipeline if there are findings.</p>"},{"location":"cloud/aws/exam-questions/#question-58","title":"Question 58","text":"<p>A developer is testing a new file storage application that uses an Amazon CloudFront distribution to serve content from an Amazon S3 bucket. The distribution accesses the S3 bucket by using an origin access identity (OAI). The S3 bucket's permissions explicitly deny access to all other users. The application prompts users to authenticate on a login page and then uses signed cookies to allow users to access their personal storage directories. The developer has configured the distribution to use its default cache behavior with restricted viewer access and has set the origin to point to the S3 bucket. However, when the developer tries to navigate to the login page, the developer receives a 403 Forbidden error. The developer needs to implement a solution to allow unauthenticated access to the login page. The solution also must keep all private content secure. Which solution will meet these requirements?</p> <p>A.\u00a0Add a second cache behavior to the distribution with the same origin as the default cache behavior. Set the path pattern for the second cache behavior to the path of the login page, and make viewer access unrestricted. Keep the default cache behavior's settings unchanged</p>"},{"location":"cloud/aws/exam-questions/#question-59-marked","title":"Question 59 (marked)","text":"<p>A developer is using AWS Amplify Hosting to build and deploy an application. The developer is receiving an increased number of bug reports from users. The developer wants to add end-to-end testing to the application to eliminate as many bugs as possible before the bugs reach production. Which solution should the developer implement to meet these requirements?</p> <p>C.\u00a0Add a test phase to the <code>amplify.yml</code> build settings for the application.</p>"},{"location":"cloud/aws/exam-questions/#question-60","title":"Question 60","text":"<p>An ecommerce company is using an AWS Lambda function behind Amazon API Gateway as its application tier. To process orders during checkout, the application calls a POST API from the frontend. The POST API invokes the Lambda function asynchronously. In rare situations, the application has not processed orders. The Lambda application logs show no errors or failures. What should a developer do to solve this problem?</p> <p>B.\u00a0Create and inspect the Lambda dead-letter queue. Troubleshoot the failed functions. Reprocess the events</p>"},{"location":"cloud/aws/exam-questions/#question-61","title":"Question 61","text":"<p>A company is building a web application on AWS. When a customer sends a request, the application will generate reports and then make the reports available to the customer within one hour. Reports should be accessible to the customer for 8 hours. Some reports are larger than 1 MB. Each report is unique to the customer. The application should delete all reports that are older than 2 days. Which solution will meet these requirements with the LEAST operational overhead?</p> <p>C.\u00a0Generate the reports and then store the reports in an Amazon S3 bucket that uses server-side encryption. Generate a presigned URL that contains an expiration date Provide the URL to customers through the web application. Add S3 Lifecycle configuration rules to the S3 bucket to delete old reports.</p>"},{"location":"cloud/aws/exam-questions/#question-62","title":"Question 62","text":"<p>A company has deployed an application on AWS Elastic Beanstalk. The company has configured the Auto Scaling group that is associated with the Elastic Beanstalk environment to have five Amazon EC2 instances. If the capacity is fewer than four EC2 instances during the deployment, application performance degrades. The company is using the all-at-once deployment policy. What is the MOST cost-effective way to solve the deployment issue?</p> <p>C.\u00a0Change the deployment policy to rolling with additional batch. Specify a batch size of 1.</p>"},{"location":"cloud/aws/exam-questions/#question-63-marked","title":"Question 63 (marked)","text":"<p>A developer is incorporating AWS X-Ray into an application that handles personal identifiable information (PII). The application is hosted on Amazon EC2 instances. The application trace messages include encrypted PII and go to Amazon CloudWatch. The developer needs to ensure that no PII goes outside of the EC2 instances. Which solution will meet these requirements?</p> <p>A.\u00a0Manually instrument the X-Ray SDK in the application code. (Most Voted) B.\u00a0Use the X-Ray auto-instrumentation agent. (IDK, but from reading it has nothing on configuration for PII removal)</p> <p>Note: Option A sounds correct</p>"},{"location":"cloud/aws/exam-questions/#question-64","title":"Question 64","text":"<p>A developer is migrating some features from a legacy monolithic application to use AWS Lambda functions instead. The application currently stores data in an Amazon Aurora DB cluster that runs in private subnets in a VPC. The AWS account has one VPC deployed. The Lambda functions and the DB cluster are deployed in the same AWS Region in the same AWS account. The developer needs to ensure that the Lambda functions can securely access the DB cluster without crossing the public internet. Which solution will meet these requirements?</p> <p>D.\u00a0Configure the VPC, subnets, and a security group for the Lambda functions</p>"},{"location":"cloud/aws/exam-questions/#question-65","title":"Question 65","text":"<p>A developer is building a new application on AWS. The application uses an AWS Lambda function that retrieves information from an Amazon DynamoDB table. The developer hard coded the DynamoDB table name into the Lambda function code. The table name might change over time. The developer does not want to modify the Lambda code if the table name changes. Which solution will meet these requirements MOST efficiently?</p> <p>A.\u00a0Create a Lambda environment variable to store the table name. Use the standard method for the programming language to retrieve the variable.</p>"},{"location":"cloud/aws/exam-questions/#question-66","title":"Question 66","text":"<p>A company has a critical application on AWS. The application exposes an HTTP API by using Amazon API Gateway. The API is integrated with an AWS Lambda function. The application stores data in an Amazon RDS for MySQL DB instance with 2 virtual CPUs (vCPUs) and 64 GB of RAM.  </p> <p>Customers have reported that some of the API calls return HTTP 500 Internal Server Error responses. Amazon CloudWatch Logs shows errors for \u201ctoo many connections.\u201d The errors occur during peak usage times that are unpredictable.  </p> <p>The company needs to make the application resilient. The database cannot be down outside of scheduled maintenance hours.  </p> <p>Which solution will meet these requirements?</p> <p>B.\u00a0Use Amazon RDS Proxy to create a proxy that connects to the DB instance. Update the Lambda function to connect to the proxy.</p>"},{"location":"cloud/aws/exam-questions/#question-67","title":"Question 67","text":"<p>A company has installed smart meters in all its customer locations. The smart meters measure power usage at 1-minute intervals and send the usage readings to a remote endpoint for collection. The company needs to create an endpoint that will receive the smart meter readings and store the readings in a database. The company wants to store the location ID and timestamp information.  </p> <p>The company wants to give its customers low-latency access to their current usage and historical usage on demand. The company expects demand to increase significantly. The solution must not impact performance or include downtime while scaling.  </p> <p>Which solution will meet these requirements MOST cost-effectively?</p> <p>B.\u00a0Store the smart meter readings in an Amazon DynamoDB table. Create a composite key by using the location ID and timestamp columns. Use the columns to filter on the customers' data</p>"},{"location":"cloud/aws/exam-questions/#question-68","title":"Question 68","text":"<p>A company is building a serverless application that uses AWS Lambda functions. The company needs to create a set of test events to test Lambda functions in a development environment. The test events will be created once and then will be used by all the developers in an IAM developer group. The test events must be editable by any of the IAM users in the IAM developer group.  </p> <p>Which solution will meet these requirements?</p> <p>B.\u00a0Create the test events. Configure the event sharing settings to make the test events shareable.</p>"},{"location":"cloud/aws/exam-questions/#question-69","title":"Question 69","text":"<p>A developer is configuring an application's deployment environment in AWS CodePipeline. The application code is stored in a GitHub repository. The developer wants to ensure that the repository package's unit tests run in the new deployment environment. The developer has already set the pipeline's source provider to GitHub and has specified the repository and branch to use in the deployment.  </p> <p>Which combination of steps should the developer take next to meet these requirements with the LEAST overhead? (Choose two.)</p> <p>B.\u00a0Create an AWS CodeBuild project. Add the repository package's build and test commands to the project's buildspec D.\u00a0Add an action to the source stage. Specify the newly created project as the action provider. Specify the build artifact as the action's input artifact.</p>"},{"location":"cloud/aws/exam-questions/#question-70-marked","title":"Question 70 (marked)","text":"<p>An engineer created an A/B test of a new feature on an Amazon CloudWatch Evidently project. The engineer configured two variations of the feature (Variation A and Variation B) for the test. The engineer wants to work exclusively with Variation A. The engineer needs to make updates so that Variation A is the only variation that appears when the engineer hits the application's endpoint.  </p> <p>Which solution will meet this requirement?</p> <p>A.\u00a0Add an override to the feature. Set the identifier of the override to the engineer's user ID. Set the variation to Variation A</p>"},{"location":"cloud/aws/exam-questions/#question-71","title":"Question 71","text":"<p>A developer is working on an existing application that uses Amazon DynamoDB as its data store. The DynamoDB table has the following attributes: partNumber (partition key), vendor (sort key), description, productFamily, and productType. When the developer analyzes the usage patterns, the developer notices that there are application modules that frequently look for a list of products based on the productFamily and productType attributes.  </p> <p>The developer wants to make changes to the application to improve performance of the query operations.  </p> <p>Which solution will meet these requirements?</p> <p>A.\u00a0Create a global secondary index (GSI) with productFamily as the partition key and productType as the sort key.</p>"},{"location":"cloud/aws/exam-questions/#question-72-marked","title":"Question 72 (marked)","text":"<p>A developer creates a VPC named VPC-A that has public and private subnets. The developer also creates an Amazon RDS database inside the private subnet of VPC-A. To perform some queries, the developer creates an AWS Lambda function in the default VPC. The Lambda function has code to access the RDS database. When the Lambda function runs, an error message indicates that the function cannot connect to the RDS database.  </p> <p>How can the developer solve this problem?</p> <p>B.\u00a0Redeploy the Lambda function in the same subnet as the RDS instance. Ensure that the RDS security group allows traffic from the Lambda function.</p>"},{"location":"cloud/aws/exam-questions/#question-73","title":"Question 73","text":"<p>A company runs an application on AWS. The company deployed the application on Amazon EC2 instances. The application stores data on Amazon Aurora.  </p> <p>The application recently logged multiple application-specific custom DECRYP_ERROR errors to Amazon CloudWatch logs. The company did not detect the issue until the automated tests that run every 30 minutes failed. A developer must implement a solution that will monitor for the custom errors and alert a development team in real time when these errors occur in the production environment.  </p> <p>Which solution will meet these requirements with the LEAST operational overhead?</p> <p>C.\u00a0Use Amazon CloudWatch Logs to create a metric filter that has a filter pattern for DECRYP_ERROR. Create a CloudWatch alarm on this metric for a threshold &gt;=1. Configure the alarm to send Amazon Simple Notification Service (Amazon SNS) notifications.</p>"},{"location":"cloud/aws/exam-questions/#question-74-marked","title":"Question 74 (marked)","text":"<p>A developer created an AWS Lambda function that accesses resources in a VPC. The Lambda function polls an Amazon Simple Queue Service (Amazon SQS) queue for new messages through a VPC endpoint. Then the function calculates a rolling average of the numeric values that are contained in the messages. After initial tests of the Lambda function, the developer found that the value of the rolling average that the function returned was not accurate.  </p> <p>How can the developer ensure that the function calculates an accurate rolling average?</p> <p>B.\u00a0Modify the function to store the values in Amazon ElastiCache. When the function initializes, use the previous values from the cache to calculate the rolling average</p> <p>Link</p>"},{"location":"cloud/aws/exam-questions/#question-75-marked","title":"Question 75 (marked)","text":"<p>A developer is writing unit tests for a new application that will be deployed on AWS. The developer wants to validate all pull requests with unit tests and merge the code with the main branch only when all tests pass.  </p> <p>The developer stores the code in AWS CodeCommit and sets up AWS CodeBuild to run the unit tests. The developer creates an AWS Lambda function to start the CodeBuild task. The developer needs to identify the CodeCommit events in an Amazon EventBridge event that can invoke the Lambda function when a pull request is created or updated.  </p> <p>Which CodeCommit event will meet these requirements?</p> <p>C. pullRequestSourceBranchUpdated, pullRequestCreated</p>"},{"location":"cloud/aws/exam-questions/#question-76-marked","title":"Question 76 (marked)","text":"<p>A developer deployed an application to an Amazon EC2 instance. The application needs to know the public IPv4 address of the instance.  </p> <p>How can the application find this information?</p> <p>A.\u00a0Query the instance metadata from http://169.254.169.254/latest/meta-data/.</p>"},{"location":"cloud/aws/exam-questions/#question-77","title":"Question 77","text":"<p>An application under development is required to store hundreds of video files. The data must be encrypted within the application prior to storage, with a unique key for each video file.  </p> <p>How should the developer code the application?</p> <p>C.\u00a0Use the KMS GenerateDataKey API to get a data key. Encrypt the data with the data key. Store the encrypted data key and data.</p>"},{"location":"cloud/aws/exam-questions/#question-78","title":"Question 78","text":"<p>A company is planning to deploy an application on AWS behind an Elastic Load Balancer. The application uses an HTTP/HTTPS listener and must access the client IP addresses.  </p> <p>Which load-balancing solution meets these requirements?</p> <p>A.\u00a0Use an Application Load Balancer and the X-Forwarded-For headers.</p>"},{"location":"cloud/aws/exam-questions/#question-79","title":"Question 79","text":"<p>A developer wants to debug an application by searching and filtering log data. The application logs are stored in Amazon CloudWatch Logs. The developer creates a new metric filter to count exceptions in the application logs. However, no results are returned from the logs.  </p> <p>What is the reason that no filtered results are being returned?</p> <p>B.\u00a0CloudWatch Logs only publishes metric data for events that happen after the filter is created.</p>"},{"location":"cloud/aws/exam-questions/#question-80","title":"Question 80","text":"<p>A company is planning to use AWS CodeDeploy to deploy an application to Amazon Elastic Container Service (Amazon ECS). During the deployment of a new version of the application, the company initially must expose only 10% of live traffic to the new version of the deployed application. Then, after 15 minutes elapse, the company must route all the remaining live traffic to the new version of the deployed application.  </p> <p>Which CodeDeploy predefined configuration will meet these requirements?</p> <p>A.\u00a0CodeDeployDefault.ECSCanary10Percent15Minutes</p>"},{"location":"cloud/aws/exam-questions/#from-exam-topics-dva-c01","title":"From Exam Topics DVA-C01","text":""},{"location":"cloud/aws/exam-questions/#question-1","title":"Question 1","text":"<p>A gaming website gives users the ability to trade game items with each other on the platform. The platform requires both users' records to be updated and persisted in one transaction. If any update fails, the transaction must roll back. Which AWS solution can provide the transactional capability that is required for this feature?</p> <p>C.\u00a0Amazon DynamoDB with reads and writes made by using Transact* operations</p>"},{"location":"cloud/aws/exam-questions/#question-2_1","title":"Question 2","text":"<p>A developer has created a Java application that makes HTTP requests directly to AWS services. Application logging shows 5xx HTTP response codes that occur at irregular intervals. The errors are affecting users. How should the developer update the application to improve the application's resiliency?</p> <p>B.\u00a0Use the AWS SDK for Java to interact with AWS APIs.</p>"},{"location":"cloud/aws/exam-questions/#question-3_1","title":"Question 3","text":"<p>A global company has a mobile app with static data stored in an Amazon S3 bucket in the us-east-1 Region. The company serves the content through an Amazon CloudFront distribution. The company is launching the mobile app in South Africa. The data must reside in the af-south-1 Region. The company does not want to deploy a specific mobile client for South Africa. What should the company do to meet these requirements?</p> <p>B.\u00a0Create a Lambda@Edge function. Associate the Lambda@Edge function as an origin request trigger with the CloudFront distribution to change the S3 origin Region.</p>"},{"location":"cloud/aws/exam-questions/#question-4_1","title":"Question 4","text":"<p>A developer is testing an AWS Lambda function by using the AWS Serverless Application Model (AWS SAM) local CLI. The application that is implemented by the Lambda function makes several AWS API calls by using the AWS software development kit (SDK). The developer wants to allow the function to make AWS API calls in a test AWS account from the developer's laptop. What should the developer do to meet these requirements?</p> <p>B.\u00a0Add a test profile by using the aws configure command with the --profile option. Run AWS SAM by using the sam local invoke command with the -profile option.</p>"},{"location":"cloud/aws/exam-questions/#question-5_1","title":"Question 5","text":"<p>A developer designed an application on an Amazon EC2 instance. The application makes API requests to objects in an Amazon S3 bucket. Which combination of steps will ensure that the application makes the API requests in the MOST secure manner? (Choose two.)</p> <p>B.\u00a0Create an IAM role that has permissions to the S3 bucket. C.\u00a0Add the IAM role to an instance profile. Attach the instance profile to the EC2 instance.</p>"},{"location":"cloud/aws/exam-questions/#question-6-marked","title":"Question 6 (marked)","text":"<p>A developer is configuring an Amazon CloudFront distribution for a new application to provide encryption in transit. The application is running in the eu-west-1 Region. The developer creates a new certificate in AWS Certificate Manager (ACM) in eu-west-1, but the certificate is not visible in the CloudFront distribution settings. What should the developer do to fix this problem?</p> <p>B.\u00a0Create the certificate in the eu-west-1 Region. Ensure that the alternate domain name (CNAME) in the distribution settings matches the domain name in the certificate.</p> <p>Note: there is a typo somewhere. To import an ACM into Cloudfront, the ACM needs to be in the us-east-1 region:</p>"},{"location":"cloud/aws/exam-questions/#question-7_1","title":"Question 7","text":"<p>A developer is building an application that runs behind an Application Load Balancer (ALB). The ALB is configured as the origin for an Amazon CloudFront distribution. Users will log in to the application by using their social media accounts. How can the developer authenticate users?</p> <p>B.\u00a0Configure the ALB to use Amazon Cognito as one of the authentication providers.</p>"},{"location":"cloud/aws/exam-questions/#question-8-marked","title":"Question 8 (marked)","text":"<p>A company has an application that analyzes photographs. A developer is preparing the application for deployment to Amazon EC2 instances. The application's image analysis functions require a mix of GPU instances and CPU instances that run on Amazon Linux. The developer needs to add code to the application so that the functions can determine whether they are running on a GPU instance. What should the functions do to obtain this information?</p> <p>D.\u00a0Retrieve the instance type from the instance metadata.</p>"},{"location":"cloud/aws/exam-questions/#question-9_1","title":"Question 9","text":"<p>A company has an application that uses Amazon Cognito user pools as an identity provider. The company must secure access to user records. The company has set up multi-factor authentication (MFA). The company also wants to send a login activity notification by email every time a user logs in. What is the MOST operationally efficient solution that meets this requirement?</p> <p>B.\u00a0Create an AWS Lambda function that uses Amazon Simple Email Service (Amazon SES) to send the email notification. Add an Amazon Cognito post authentication Lambda trigger for the function.</p>"},{"location":"cloud/aws/exam-questions/#question-10-marked","title":"Question 10 (marked)","text":"<p>A company hosts a three-tier web application on AWS behind an Amazon CloudFront distribution. A developer wants a dashboard to monitor error rates and anomalies of the CloudFront distribution with the shortest possible refresh interval. Which combination of slops should the developer take to meet these requirements? (Choose two.)</p> <p>A.\u00a0Activate real-time logs on the CloudFront distribution. Create a stream in Amazon Kinesis Data Streams. C.\u00a0Configure Amazon Kinesis Data Streams to deliver logs to Amazon OpenSearch Service (Amazon Elasticsearch Service). Create a dashboard in OpenSearch Dashboards (Kibana).</p>"},{"location":"cloud/aws/exam-questions/#question-11_1","title":"Question 11","text":"<p>A developer creates a customer managed key for multiple AWS users to encrypt data in Amazon S3. The developer configures Amazon Simple Notification Service (Amazon SNS) to publish a message if key deletion is scheduled. The developer needs to preserve any SNS messages that cannot be delivered so that those messages can be reprocessed. Which AWS service or feature should the developer use to meet this requirement?</p> <p>C.\u00a0Amazon Simple Queue Service (Amazon SQS)</p>"},{"location":"cloud/aws/exam-questions/#question-12-marked","title":"Question 12 (marked)","text":"<p>A developer needs to deploy an application to AWS Elastic Beanstalk for a company. The application consists of a single Docker image. The company's automated continuous integration and continuous delivery (CI/CD) process builds the Docker image and pushes the image to a public Docker registry. How should the developer deploy the application to Elastic Beanstalk?</p> <p>B.\u00a0Create a docker-compose.yml file. Use the Elastic Beanstalk CLI to deploy the application.</p> <p>Note: After testing your container locally, deploy it to an Elastic Beanstalk environment. Elastic Beanstalk uses the docker-compose.yml file to pull and run your image if you are using Docker Compose. Otherwise, Elastic Beanstalk uses the Dockerrun.aws.json instead.</p>"},{"location":"cloud/aws/exam-questions/#question-13_1","title":"Question 13","text":"<p>A company is using AWS CodeDeploy for all production deployments. A developer has an Amazon Elastic Container Service (Amazon ECS) application that uses the CodeDeployDefault.ECSAIIAtOnce configuration. The developer needs to update the production environment in increments of 10% until the entire production environment is updated. Which CodeDeploy configuration should the developer use to meet these requirements?</p> <p>B.\u00a0CodeDeployDefault.ECSLinear10PercentEvery3Minutes</p>"},{"location":"cloud/aws/exam-questions/#question-14-marked_1","title":"Question 14 (marked)","text":"<p>A company is using AWS Elastic Beanstalk to deploy a three-tier application. The application uses an Amazon RDS DB instance as the database tier. The company wants to decouple the DB instance from the Elastic Beanstalk environment. Which combination of steps should a developer lake to meet this requirement? (Choose two.)</p> <p>A.\u00a0Create a new Elastic Beanstalk environment that connects to the DB instance. C.\u00a0Use the Elastic Beanstalk CLI to decouple the DB instance.</p>"},{"location":"cloud/aws/exam-questions/#question-15-marked","title":"Question 15 (marked)","text":"<p>A company has point-of-sale devices across thousands of retail shops that synchronize sales transactions with a centralized system. The system includes an Amazon API Gateway API that exposes an AWS Lambda function. The Lambda function processes the transactions and stores the transactions in Amazon RDS for MySQL. The number of transactions increases rapidly during the day and is near zero at night. How can a developer increase the elasticity of the system MOST cost-effectively?</p> <p>D.\u00a0Create an Amazon Simple Queue Service (Amazon SQS) queue. Publish transactions to the queue. Set the queue to invoke the Lambda function. Set the reserved concurrency of the Lambda function to be less than the number of database connections</p> <p>Note: Read Replicas are for read, not for transactions</p>"},{"location":"cloud/aws/exam-questions/#question-16_1","title":"Question 16","text":"<p>A developer is writing an AWS Lambda function. The Lambda function needs to access items that are stored in an Amazon DynamoDB table. What is the MOST secure way to configure this access for the Lambda function?</p> <p>C.\u00a0Create an IAM policy that allows access to the DynamoDB table. Attach this policy to the Lambda function's IAM role.</p>"},{"location":"cloud/aws/exam-questions/#question-17_1","title":"Question 17","text":"<p>A developer is implementing user authentication and authorization for a web application that is hosted on an Amazon EC2 instance. The developer needs to ensure that the user credentials are encrypted and secure when they are stored and transmitted. Which solution will meet these requirements?</p> <p>C.\u00a0Use Amazon Cognito to configure a user pool. Use the Amazon Cognito API to authenticate and authorize the users.</p>"},{"location":"cloud/aws/exam-questions/#question-18","title":"Question 18","text":"<p>A company that has multiple offices uses an Amazon DynamoDB table to store employee payroll information. Item attributes consist of employee names, office identifiers, and cumulative daily hours worked The most frequently used query extracts a report of an alphabetical subset of employees for a specific office. Which design of the DynamoDB table primary key will have the MINIMUM performance impact?</p> <p>A.\u00a0Partition key on the office identifier and sort key on the employee name</p>"},{"location":"cloud/aws/exam-questions/#question-19_1","title":"Question 19","text":"<p>A company hosts a microservices application that uses Amazon API Gateway. AWS Lambda, Amazon Simple Queue Service (Amazon SQS), and Amazon DynamoDB. One of the Lambda functions adds messages to an SQS FIFO queue. When a developer checks the application logs, the developer finds a few duplicated items in a DynamoDB table. The items were inserted by another polling function that processes messages from the queue. What is the MOST likely cause of this issue?</p> <p>D.\u00a0The polling function timeout is greater than the queue visibility timeout.</p>"},{"location":"cloud/aws/exam-questions/#question-20-marked","title":"Question 20 (marked)","text":"<p>A development team has been using a builder server that is hosted on an Amazon EC2 instance to perform builds and deployments for the last 3 months. The EC2 instance's instance profile uses an IAM role that contains the Administrator Access managed policy. The development team must replace that policy with a policy that provides only the required permissions. What is the FASTEST way to create a custom IAM policy for the EC2 instance to meet this requirement?</p> <p>B.\u00a0Create a new IAM policy that includes all actions that AWS CloudTrail recorded for the IAM role in the last 3 months</p> <p>Note: Athena is an option, but you can query on Cloudtrail anyway, on Athena you have to setup</p>"},{"location":"cloud/aws/exam-questions/#question-21_1","title":"Question 21","text":"<p>A developer needs to write an AWS CloudFormation template on a local machine and deploy a CloudFormation stack to AWS. What must the developer do to complete these tasks?</p> <p>C.\u00a0Install the AWS CLI. Configure the AWS CLI by using an IAM user access key and secret key.</p>"},{"location":"cloud/aws/exam-questions/#question-22_1","title":"Question 22","text":"<p>A developer is working on a web application that runs on Amazon Elastic Container Service (Amazon ECS) and uses an Amazon DynamoDB table to store data. The application performs a large number of read requests against a small set of the table data. How can the developer improve the performance of these requests? (Choose two.)</p> <p>B.\u00a0Create a DynamoDB Accelerator (DAX) cluster. Configure the application to use the DAX cluster for DynamoDB requests. D.\u00a0Increase the read capacity of the DynamoDB table.</p>"},{"location":"cloud/aws/exam-questions/#question-23","title":"Question 23","text":"<p>A developer needs to use Amazon DynamoDB to store customer orders. The developer's company requires all customer data to be encrypted at rest with a key that the company generates. What should the developer do to meet these requirements?</p> <p>B.\u00a0Store the key by using AWS Key Management Service (AWS KMS). Choose an AWS KMS customer managed key during creation of the DynamoDB table. Provide the Amazon Resource Name (ARN) of the AWS KMS key.</p>"},{"location":"cloud/aws/exam-questions/#question-24_1","title":"Question 24","text":"<p>A developer is creating a solution to track an account's Amazon S3 buckets over time. The developer has created an AWS Lambda function that will run on a schedule. The function will list the account's S3 buckets and will store the list in an Amazon DynamoDB table. The developer receives a permissions error when the developer runs the function with the AWSLambdaBasicExecutionRole AWS managed policy. Which combination of permissions should the developer use to resolve this error? (Choose two.)</p> <p>B.\u00a0Permission for the Lambda function to list buckets in Amazon S3 C.\u00a0Permission for the Lambda function to write in DynamoDB</p>"},{"location":"cloud/aws/exam-questions/#question-25-marked","title":"Question 25 (marked)","text":"<p>A company is adding items to an Amazon DynamoDB table from an AWS Lambda function that is written in Python. A developer needs to implement a solution that inserts records in the DynamoDB table and performs automatic retry when the insert fails. Which solution meets these requirements with MINIMUM code changes?</p> <p>D.\u00a0Use the AWS software development kit (SDK) for Python (boto3) to call the PutItem operation</p>"},{"location":"cloud/aws/exam-questions/#question-26","title":"Question 26","text":"<p>A developer is writing an AWS Lambda function. The developer wants to log key events that occur during the Lambda function and include a unique identifier to associate the events with a specific function invocation. Which of the following will help the developer accomplish this objective?</p> <p>A.\u00a0Obtain the request identifier from the Lambda context object. Architect the application to write logs to the console.</p>"},{"location":"cloud/aws/exam-questions/#question-27-marked_1","title":"Question 27 (marked)","text":"<p>A company experienced partial downtime during the last deployment of a new application. AWS Elastic Beanstalk split the environment's Amazon EC2 instances into batches and deployed a new version one batch at a time after taking them out of service. Therefore, full capacity was not maintained during deployment. The developer plans to release a new version of the application, and is looking for a policy that will maintain full capacity and minimize the impact of the failed deployment. Which deployment policy should the developer use?</p> <p>A.\u00a0Immutable</p> <p>Note: impact is minimized through immutable, rolling back with additional batch is slower</p>"},{"location":"cloud/aws/exam-questions/#question-28_1","title":"Question 28","text":"<p>A company is providing services to many downstream consumers. Each consumer may connect to one or more services. This has resulted in a complex architecture that is difficult to manage and does not scale well. The company needs a single interface to manage these services to consumers. Which AWS service should be used to refactor this architecture?</p> <p>D.\u00a0Amazon API Gateway</p>"},{"location":"cloud/aws/exam-questions/#question-29_1","title":"Question 29","text":"<p>When a Developer tries to run an AWS CodeBuild project, it raises an error because the length of all environment variables exceeds the limit for the combined maximum of characters. What is the recommended solution?</p> <p>D.\u00a0Use AWS Systems Manager Parameter Store to store large numbers of environment variables.</p>"},{"location":"cloud/aws/exam-questions/#question-30_1","title":"Question 30","text":"<p>A Development team decides to adopt a continuous integration/continuous delivery (CI/CD) process using AWS CodePipeline and AWS CodeCommit for a new application. However, management wants a person to review and approve the code before it is deployed to production. How can the Development team add a manual approver to the CI/CD pipeline?</p> <p>D.\u00a0Add an approval action to the pipeline. Configure the approval action to publish to an Amazon SNS topic when approval is required. The pipeline execution will stop and wait for an approval.</p>"},{"location":"cloud/aws/exam-questions/#question-31_1","title":"Question 31","text":"<p>A Developer is migrating an on-premises application to AWS. The application currently takes user uploads and saves them to a local directory on the server. All uploads must be saved and made immediately available to all instances in an Auto Scaling group. Which approach will meet these requirements?</p> <p>B.\u00a0Use Amazon S3 and rearchitect the application so all uploads are placed in S3.</p>"},{"location":"cloud/aws/exam-questions/#question-32_1","title":"Question 32","text":"<p>A developer is creating a script to automate the deployment process for a serverless application. The developer wants to use an existing AWS Serverless Application Model (AWS SAM) template for the application. What should the developer use for the project? (Choose two.)</p> <p>A.\u00a0Call aws cloudformation package to create the deployment package. Call aws cloudformation deploy to deploy the package afterward. B.\u00a0Call sam package to create the deployment package. Call sam deploy to deploy the package afterward.</p>"},{"location":"cloud/aws/exam-questions/#question-33_1","title":"Question 33","text":"<p>A developer has built a market application that stores pricing data in Amazon DynamoDB with Amazon ElastiCache in front. The prices of items in the market change frequently. Sellers have begun complaining that, after they update the price of an item, the price does not actually change in the product listing. What could be causing this issue?</p> <p>A.\u00a0The cache is not being invalidated when the price of the item is changed</p>"},{"location":"cloud/aws/exam-questions/#question-34-marked","title":"Question 34 (marked)","text":"<p>The developer is creating a web application that collects highly regulated and confidential user data through a POST request. The web application is served through Amazon CloudFront. User names and phone numbers must be encrypted at the edge and must remain encrypted throughout the entire application stack. What is the MOST secure way to meet these requirements?</p> <p>D.\u00a0Use field-level encryption on CloudFront. Link: https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/data-protection-summary.html</p>"},{"location":"cloud/aws/exam-questions/#question-35-marked","title":"Question 35 (marked)","text":"<p>A Developer has been asked to create an AWS Lambda function that is triggered any time updates are made to items in an Amazon DynamoDB table. The function has been created, and appropriate permissions have been added to the Lambda execution role. Amazon DynamoDB streams have been enabled for the table, but the function is still not being triggered. Which option would enable DynamoDB table updates to trigger the Lambda function?</p> <p>B.\u00a0Configure event source mapping for the Lambda function</p>"},{"location":"cloud/aws/exam-questions/#question-36_1","title":"Question 36","text":"<p>A company maintains a REST service using Amazon API Gateway and the API Gateway native API key validation. The company recently launched a new registration page, which allows users to sign up for the service. The registration page creates a new API key using CreateApiKey and sends the new key to the user. When the user attempts to call the API using this key, the user receives a 403 Forbidden error. Existing users are unaffected and can still call the API. What code updates will grant these new users access to the API?</p> <p>D.\u00a0The createUsagePlanKey method must be called to associate the newly created API key with the correct usage plan.</p>"},{"location":"cloud/aws/exam-questions/#question-37_1","title":"Question 37","text":"<p>An application uploads photos to an Amazon S3 bucket. Each photo that is uploaded to the S3 bucket must be resized to a thumbnail image by the application. Each thumbnail image is uploaded with a new name in the same S3 bucket. Which AWS service can a developer configure to directly process each single S3 event for each S3 object upload?</p> <p>D.\u00a0AWS Lambda</p>"},{"location":"cloud/aws/exam-questions/#question-38_1","title":"Question 38","text":"<p>A company is running a Docker application on Amazon ECS. The application must scale based on user load in the last 15 seconds. How should a Developer instrument the code so that the requirement can be met?</p> <p>B.\u00a0Create a high-resolution custom Amazon CloudWatch metric for user activity data, then publish data every 5 seconds</p>"},{"location":"cloud/aws/exam-questions/#question-39_1","title":"Question 39","text":"<p>Where should the appspec.yml file be placed in order for AWS CodeDeploy to work?</p> <p>A.\u00a0In the root of the application source code directory structure</p>"},{"location":"cloud/aws/exam-questions/#question-40-marked","title":"Question 40 (marked)","text":"<p>A Developer is working on an application that handles 10MB documents that contain highly-sensitive data. The application will use AWS KMS to perform client- side encryption. What steps must be followed?</p> <p>D.\u00a0Invoke the GenerateDataKey API to retrieve the plaintext version of the data encryption key to encrypt the data</p>"},{"location":"cloud/aws/exam-questions/#question-41_1","title":"Question 41","text":"<p>An application uses Amazon Kinesis Data Streams to ingest and process large streams of data records in real time. Amazon EC2 instances consume and process the data from the shards of the Kinesis data stream by using Amazon Kinesis Client Library (KCL). The application handles the failure scenarios and does not require standby workers. The application reports that a specific shard is receiving more data than expected. To adapt to the changes in the rate of data flow, the <code>hot</code> shard is resharded. Assuming that the initial number of shards in the Kinesis data stream is 4, and after resharding the number of shards increased to 6, what is the maximum number of EC2 instances that can be deployed to process data from all the shards?</p> <p>B.\u00a06</p>"},{"location":"cloud/aws/exam-questions/#question-42_1","title":"Question 42","text":"<p>A Company runs continuous integration/continuous delivery (CI/CD) pipelines for its application on AWS CodePipeline. A Developer must write unit tests and run them as part of the pipelines before staging the artifacts for testing. How should the Developer incorporate unit tests as part of CI/CD pipelines?</p> <p>B.\u00a0Update the AWS CodeBuild specification to include a phase for running unit tests</p>"},{"location":"cloud/aws/exam-questions/#question-43_1","title":"Question 43","text":"<p>A Developer has written an application that runs on Amazon EC2 instances and generates a value every minute. The Developer wants to monitor and graph the values generated over time without logging in to the instance each time. Which approach should the Developer use to achieve this goal?</p> <p>C.\u00a0Publish each generated value as a custom metric to Amazon CloudWatch using available AWS SDKs.</p>"},{"location":"cloud/aws/exam-questions/#question-44_1","title":"Question 44","text":"<p>A developer is trying to get data from an Amazon DynamoDB table called demoman-table. The developer configured the AWS CLI to use a specific IAM user's credentials and executed the following command: <code>aws dynamodb get-item --table-name demomam-table --key {\"id\": {\"N\": \"1993\"}}</code> The command returned errors and no rows were returned. What is the MOST likely cause of these issues?</p> <p>D.\u00a0The IAM user needs an associated policy with read access to demoman-table.</p>"},{"location":"cloud/aws/exam-questions/#question-45-marked","title":"Question 45 (marked)","text":"<p>A Development team is working on a case management solution that allows medical claims to be processed and reviewed. Users log in to provide information related to their medical and financial situations. As part of the application, sensitive documents such as medical records, medical imaging, bank statements, and receipts are uploaded to Amazon S3. All documents must be securely transmitted and stored. All access to the documents must be recorded for auditing. What is the MOST secure approach?</p> <p>D.\u00a0Use client-side encryption/decryption with Amazon S3 and AWS KMS.</p>"},{"location":"cloud/aws/exam-questions/#question-46_1","title":"Question 46","text":"<p>A developer is planning to use an Amazon API Gateway and AWS Lambda to provide a REST API. The developer will have three distinct environments to manage: development, test, and production. How should the application be deployed while minimizing the number of resources to manage?</p> <p>C.\u00a0Create one API Gateway with multiple stages with one Lambda function with multiple aliases.</p>"},{"location":"cloud/aws/exam-questions/#question-47_1","title":"Question 47","text":"<p>An application needs to use the IP address of the client in its processing. The application has been moved into AWS and has been placed behind an Application Load Balancer (ALB). However, all the client IP addresses now appear to be the same. The application must maintain the ability to scale horizontally. Based on this scenario, what is the MOST cost-effective solution to this problem?</p> <p>C.\u00a0Alter the application code to inspect the X-Forwarded-For header. Ensure that the code can work properly if a list of IP addresses is passed in the header.</p>"},{"location":"cloud/aws/exam-questions/#question-48_1","title":"Question 48","text":"<p>A developer tested an application locally and then deployed it to AWS Lambda. While testing the application remotely, the Lambda function fails with an access denied message. How can this issue be addressed?</p> <p>A.\u00a0Update the Lambda function's execution role to include the missing permissions.</p>"},{"location":"cloud/aws/exam-questions/#question-49_1","title":"Question 49","text":"<p>A Developer must analyze performance issues with production-distributed applications written as AWS Lambda functions. These distributed Lambda applications invoke other components that make up the applications. How should the Developer identify and troubleshoot the root cause of the performance issues in production?</p> <p>C.\u00a0Use AWS X-Ray, then examine the segments and errors.</p>"},{"location":"cloud/aws/exam-questions/#question-50_1","title":"Question 50","text":"<p>A company is building a compute-intensive application that will run on a fleet of Amazon EC2 instances. The application uses attached Amazon EBS disks for storing data. The application will process sensitive information and all the data must be encrypted. What should a Developer do to ensure the data is encrypted on disk without impacting performance?</p> <p>A.\u00a0Configure the Amazon EC2 instance fleet to use encrypted EBS volumes for storing data</p>"},{"location":"cloud/aws/exam-questions/#question-51_1","title":"Question 51","text":"<p>A Developer is working on a serverless project based in Java. Initial testing shows a cold start takes about 8 seconds on average for AWS Lambda functions. What should the Developer do to reduce the cold start time? (Choose two.)</p> <p>B.\u00a0Reduce the deployment package by including only needed modules from the AWS SDK for Java. C.\u00a0Increase the memory allocation setting for the Lambda function</p>"},{"location":"cloud/aws/exam-questions/#question-52_1","title":"Question 52","text":"<p>A company runs an e-commerce website that uses Amazon DynamoDB where pricing for items is dynamically updated in real time. At any given time, multiple updates may occur simultaneously for pricing information on a particular product. This is causing the original editor's changes to be overwritten without a proper review process. Which DynamoDB write option should be selected to prevent this overwriting?</p> <p>B.\u00a0Conditional writes</p>"},{"location":"cloud/aws/exam-questions/#question-53","title":"Question 53","text":"<p>A developer is storing JSON files in an Amazon S3 bucket. The developer wants to securely share an object with a specific group of people. How can the developer securely provide temporary access to the objects that are stored in the S3 bucket?</p> <p>B.\u00a0Use the AWS software development kit (SDK) to generate a presigned URL. Provide the presigned URL.</p>"},{"location":"cloud/aws/exam-questions/#question-54","title":"Question 54","text":"<p>A front-end web application is using Amazon Cognito user pools to handle the user authentication flow. A developer is integrating Amazon DynamoDB into the application using the AWS SDK for JavaScript. How would the developer securely call the API without exposing the access or secret keys?</p> <p>A.\u00a0Configure Amazon Cognito identity pools and exchange the JSON Web Token (JWT) for temporary credentials.</p>"},{"location":"cloud/aws/exam-questions/#question-55_1","title":"Question 55","text":"<p>A Developer must build an application that uses Amazon DynamoDB. The requirements state that the items being stored in the DynamoDB table will be 7KB in size and that reads must be strongly consistent. The maximum read rate is 3 items per second, and the maximum write rate is 10 items per second. How should the Developer size the DynamoDB table to meet these requirements?</p> <p>B.\u00a0Read: 6 read capacity units Write: 70 write capacity units</p>"},{"location":"cloud/aws/exam-questions/#question-56_1","title":"Question 56","text":"<p>A company needs to ingest terabytes of data each hour from thousands of sources that are delivered almost continually throughout the day. The volume of messages generated varies over the course of the day. Messages must be delivered in real time for fraud detection and live operational dashboards. Which approach will meet these requirements?</p> <p>D.\u00a0Use Amazon Kinesis Data Streams with Kinesis Client Library to ingest and deliver messages</p>"},{"location":"cloud/aws/exam-questions/#question-57_1","title":"Question 57","text":"<p>A developer is debugging an AWS Lambda function behind an Amazon API Gateway. Whenever the API Gateway endpoint is called, HTTP status code 200 is returned even though AWS Lambda is recording a 4xx error. What change needs to be made to return a proper error code through the API Gateway?</p> <p>B.\u00a0Use a Lambda proxy integration to return HTTP codes and headers</p>"},{"location":"cloud/aws/exam-questions/#question-58_1","title":"Question 58","text":"<p>For a deployment using AWS CodeDeploy, what is the run order of the hooks for in-place deployments?</p> <p>B.\u00a0Application Stop -&gt; Before Install -&gt; After Install -&gt; Application Start</p>"},{"location":"cloud/aws/exam-questions/#question-59","title":"Question 59","text":"<p>A developer is using Amazon S3 as the event source that invokes a Lambda function when new objects are created in the bucket. The event source mapping information is stored in the bucket notification configuration. The developer is working with different versions of the Lambda function, and has a constant need to update notification configuration so that Amazon S3 invokes the correct version. What is the MOST efficient and effective way to achieve mapping between the S3 event and Lambda?</p> <p>C.\u00a0Use a Lambda alias.</p>"},{"location":"cloud/aws/exam-questions/#question-60_1","title":"Question 60","text":"<p>A company has a multi-tier application that uses Amazon API Gateway, AWS Lambda, and Amazon RDS. The company wants to investigate a slow response time to calls that come from the API Gateway API. What is the MOST operationally efficient way for the company to determine which internal call is causing the slow response times?</p> <p>B.\u00a0Use AWS X-Ray.</p>"},{"location":"cloud/aws/exam-questions/#question-61_1","title":"Question 61","text":"<p>A developer is deploying an application that will store files in an Amazon S3 bucket. The files must be encrypted at rest. The developer wants to automatically replicate the files to an S3 bucket in a different AWS Region for disaster recovery. How can the developer accomplish this task with the LEAST amount of configuration?</p> <p>A.\u00a0Encrypt the files by using server-side encryption with S3 managed encryption keys (SSE-S3). Enable S3 bucket replication.</p>"},{"location":"cloud/aws/exam-questions/#question-62-marked","title":"Question 62 (marked)","text":"<p>A serverless application is using AWS Step Functions to process data and save it to a database. The application needs to validate some data with an external service before saving the data. The application will call the external service from an AWS Lambda function, and the external service will take a few hours to validate the data. The external service will respond to a webhook when the validation is complete. A developer needs to pause the Step Functions workflow and wait for the response from the external service. What should the developer do to meet this requirement?</p> <p>A.\u00a0Use the .wait ForTaskToken option in the Lambda function task state. Pass the token in the body.</p>"},{"location":"cloud/aws/exam-questions/#question-63","title":"Question 63","text":"<p>A developer must use AWS X-Ray to monitor an application that is running on an Amazon EC2 instance. The developer has prepared the application by using the X-Ray SDK. What should the developer do to perform the monitoring?</p> <p>B.\u00a0Install the X-Ray daemon. Assign an IAM role to the EC2 instance with a policy that allows writes to X-Ray.</p>"},{"location":"cloud/aws/exam-questions/#question-64_1","title":"Question 64","text":"<p>A developer is designing a full-stack serverless application. Files for the website are stored in an Amazon S3 bucket. AWS Lambda functions that use Amazon API Gateway endpoints return results from an Amazon DynamoDB table. The developer must create a solution that securely provides registration and authentication for the application while minimizing the amount of configuration. Which solution meets these requirements?</p> <p>A.\u00a0Create an Amazon Cognito user pool and an app client. Configure the app client to use the user pool and provide the hosted web UI provided for sign-up and sign-in.</p>"},{"location":"cloud/aws/exam-questions/#question-65-marked","title":"Question 65 (marked)","text":"<p>A company has an application that writes files to an Amazon S3 bucket. Whenever there is a new file, an S3 notification event invokes an AWS Lambda function to process the file. The Lambda function code works as expected. However, when a developer checks the Lambda function logs, the developer finds that multiple invocations occur for every file. What is causing the duplicate entries?</p> <p>C.\u00a0Amazon S3 is delivering the same event multiple times.</p>"},{"location":"cloud/aws/exam-questions/#question-66_1","title":"Question 66","text":"<p>A developer needs to use the AWS CLI on an on-premises development server temporarily to access AWS services while performing maintenance. The developer needs to authenticate to AWS with their identity for several hours. What is the MOST secure way to call AWS CLI commands with the developer's IAM identity?</p> <p>D.\u00a0Run the get-session-token CLI command with the developer's IAM user. Use the returned credentials to call the CLI</p>"},{"location":"cloud/aws/exam-questions/#question-67_1","title":"Question 67","text":"<p>An AWS Lambda function accesses two Amazon DynamoDB tables. A developer wants to improve the performance of the Lambda function by identifying bottlenecks in the function. How can the developer inspect the timing of the DynamoDB API calls?</p> <p>D.\u00a0Enable AWS X-Ray tracing for the function. View the traces from the X-Ray service.</p>"},{"location":"cloud/aws/exam-questions/#question-68_1","title":"Question 68","text":"<p>A developer deployed an application to an Amazon EC2 instance. The application needs to know the public IPv4 address of the instance. How can the application find this information?</p> <p>A.\u00a0Query the instance metadata from http://169.254.169.254/latest/meta-data/</p>"},{"location":"cloud/aws/exam-questions/#question-69_1","title":"Question 69","text":"<p>A developer is designing an AWS Lambda function to perform a maintenance activity. The developer will use Amazon EventBridge (Amazon CloudWatch Events) to invoke the function on an hourly schedule. The developer wants the function to log information at different levels of detail according to the value of a log level variable. The developer must design the function so that the log level can be set without requiring a change to the function code. Which solution will meet these requirements?</p> <p>B.\u00a0Set the log level in a Lambda environment variable</p>"},{"location":"cloud/aws/exam-questions/#question-70","title":"Question 70","text":"<p>A developer is creating a serverless application that uses an AWS Lambda function The developer will use AWS CloudFormation to deploy the application The application will write logs to Amazon CloudWatch Logs. The developer has created a log group in a CloudFormation template for the application to use. The developer needs to modify the CloudFormation template to make the name of the log group available to the application at runtime. Which solution will meet this requirement?</p> <p>D.\u00a0Pass the log group's Amazon Resource Name (ARN) as an environment variable to the Lambda function.</p>"},{"location":"cloud/aws/exam-questions/#question-71_1","title":"Question 71","text":"<p>A company is running an application on Amazon Elastic Container Service (Amazon ECS). When the company deploys a new version of the application, the company initially needs to expose 10% of live traffic to the new version. After a period of time, the company needs to immediately route all the remaining live traffic to the new version. Which ECS deployment should the company use to meet these requirements?</p> <p>B.\u00a0Blue/green with canary</p>"},{"location":"cloud/aws/exam-questions/#question-72","title":"Question 72","text":"<p>A microservices application is deployed across multiple containers in Amazon Elastic Container Service (Amazon ECS). To improve performance, a developer wants to capture trace information between the microservices and visualize the microservices architecture. Which solution will meet these requirements?</p> <p>A.\u00a0Build the container from the amazon/aws-xray-daemon base image. Use the AWS X-Ray SDK to instrument the application.</p>"},{"location":"cloud/aws/exam-questions/#question-73_1","title":"Question 73","text":"<p>A company is planning to use AWS CodeDeploy to deploy an application to Amazon Elastic Container Service (Amazon ECS). During the deployment of a new version of the application, the company initially must expose only 10% of live traffic to the new version of the deployed application. Then, after 15 minutes elapse, the company must route all the remaining live traffic to the new version of the deployed application. Which CodeDeploy predefined configuration will meet these requirements?</p> <p>A.\u00a0CodeDeployDefault.ECSCanary10Percent15Minutes</p>"},{"location":"cloud/aws/exam-questions/#question-74","title":"Question 74","text":"<p>A developer notices timeouts from the AWS CLI when the developer runs list commands. What should the developer do to avoid these timeouts?</p> <p>A.\u00a0Use the --page-size parameter to request a smaller number of items.</p>"},{"location":"cloud/aws/exam-questions/#question-75-marked_1","title":"Question 75 (marked)","text":"<p>A company has moved a legacy on-premises application to AWS by performing a lift and shift. The application exposes a REST API that can be used to retrieve billing information. The application is running on a single Amazon EC2 instance. The application code cannot support concurrent invocations. Many clients access the API, and the company adds new clients all the time. A developer is concerned that the application might become overwhelmed by too many requests. The developer needs to limit the number of requests to the API for all current and future clients. The developer must not change the API, the application, or the client code. What should the developer do to meet these requirements?</p> <p>A.\u00a0Place the API behind an Amazon API Gateway API. Set the server-side throttling limits.</p>"},{"location":"cloud/aws/exam-questions/#question-76-marked_1","title":"Question 76 (marked)","text":"<p>An ecommerce company wants to redirect users to a country-specific website when they enter the example.com website. For example, the company wants to redirect United States users to example.com/us/ and wants to redirect French users to example.com/fr/. The web application is using Amazon CloudFront and an Application Load Balancer with an Amazon Elastic Container Service (Amazon ECS) cluster. The application's domain name resolution is configured in an Amazon Route 53 public hosted zone. Which solution will meet these requirements with the LEAST operational effort?</p> <p>B.\u00a0Create a CloudFront function to inspect the CloudFront-Viewer-Country header and return redirect responses to different URLs based on user location.</p> <p>Note: Route53 cannot route by url</p>"},{"location":"cloud/aws/exam-questions/#question-77_1","title":"Question 77","text":"<p>A developer deploys an AWS Lambda function that runs each time a new Amazon S3 bucket is created. The Lambda function is supposed to attach an S3 Lifecycle policy to each new S3 bucket. The developer discovers that newly created S3 buckets have no S3 Lifecycle policy attached. Which AWS service should the developer use to find a possible error in the Lambda function?</p> <p>D.\u00a0Amazon CloudWatch</p>"},{"location":"cloud/aws/exam-questions/#question-78_1","title":"Question 78","text":"<p>A developer has created a web API that uses Amazon Elastic Container Service (Amazon ECS) and an Application Load Balancer (ALB). An Amazon CloudFront distribution uses the API as an origin for web clients. The application has received millions of requests with a JSON Web Token (JWT) that is not valid in the authorization header. The developer has scaled out the application to handle the unauthenticated requests. What should the developer do to reduce the number of unauthenticated requests to the API?</p> <p>C.\u00a0Create a CloudFront function for the distribution Use the crypto module in the function to validate the JWT.</p> <p>Note: Authorization header is not sufficient</p>"},{"location":"cloud/aws/exam-questions/#question-79_1","title":"Question 79","text":"<p>A developer is creating a mobile application that will not require users to log in. What is the MOST efficient method to grant users access to AWS resources?</p> <p>D.\u00a0Use Amazon Cognito to associate unauthenticated users with an IAM role that has limited access to resources.</p>"},{"location":"cloud/aws/exam-questions/#question-80_1","title":"Question 80","text":"<p>A developer has created on AWS Lambda function tool uses 15 MB of memory. When the developer runs the code natively on a laptop that has 4 cores, the function runs within 100 ms. When the developer deploys the code as a Lambda function with 128 MB of memory, the first run takes 3 seconds. Subsequent runs take more than 500 ms to finish. The developer needs to improve the performance of the Lambda function so that the function runs consistently in less than 100 ms, excluding the initial startup time. Which solution will meet this requirement?</p> <p>C.\u00a0Increase the memory of the Lambda function</p>"},{"location":"cloud/aws/exam-questions/#question-81","title":"Question 81","text":"<p>A company is planning to use AWS CodeDeploy to deploy an application to AWS Lambda. During the deployment of a new version of the application, the company initially must expose only 10% of live traffic to the new version of the deployed application. Then, every 10 minutes, the company must route another 10% of live traffic to the new version of the deployed application until all live traffic is routed to the new version. Which CodeDeploy predefined configuration will meet these requirements?</p> <p>C.\u00a0CodeDeployDefault.LambdaLinear10PercentEvery10Minutes</p>"},{"location":"cloud/aws/exam-questions/#question-82-marked","title":"Question 82 (marked)","text":"<p>A developer wants to use AWS Elastic Beanstalk to test a new version of on application in a test environment. Which deployment method offers the FASTEST deployment?</p> <p>D.\u00a0All at once</p>"},{"location":"cloud/aws/exam-questions/#question-83","title":"Question 83","text":"<p>A developer has built an application that inserts data into an Amazon DynamoDB table. The table is configured to use provisioned capacity. The application is deployed on a burstable nano Amazon EC2 Instance. The application logs show that the application has been failing because of a ProvisionedThroughputExceedException error. Which actions should the developer take to resolve this issue? (Choose two.)</p> <p>C.\u00a0Reduce the frequency of requests to DynamoDB by implement ng exponential backoff. E.\u00a0Change the capacity mode of the DynamoDB table from provisioned to on-demand.</p>"},{"location":"cloud/aws/exam-questions/#question-84-marked","title":"Question 84 (marked)","text":"<p>A developer is deploying on application on Amazon EC2 instances that run in Account A. In certain cases, this application needs to read data from a private Amazon S3 bucket in Account B. The developer must provide the application access to the S3 bucket without exposing the S3 bucket to anyone else. Which combination of actions should the developer take to meet these requirements? (Choose two.)</p> <p>B.\u00a0Update the instance profile IAM role in Account A with S3 read permissions. D.\u00a0Configure the bucket policy in Account B to grant permissions to the instance profile role.</p>"},{"location":"cloud/aws/exam-questions/#question-85","title":"Question 85","text":"<p>A developer at a company recently created a serverless application to process and show data from business reports. The application's user interface (UI) allows users to select and start processing the flies. The UI displays a message when the result is available to view. The application uses AWS Step Functions with AWS Lambda functions to process the files. The developer used Amazon API Gateway and Lambda functions to create an API to support the UI. The company's UI team reports that the request to process a file s often returning timeout errors because of the size or complexity of the files. The UI team wants the API to provide an immediate response so that the UI can display a message while the files are being processed. The backend process that is invoked by the API needs to send an email message when the report processing is complete. What should the developer do to configure the API to meet these requirements?</p> <p>A.\u00a0Change the API Gateway route to add an X-Amz-Invocation-Type header with a static value of 'Event' in the integration request. Deploy the API Gateway stage to apply the changes.</p>"},{"location":"cloud/aws/exam-questions/#question-86","title":"Question 86","text":"<p>An ecommerce application is running behind an Application Load Balancer. A developer observes some unexpected load on the application during non-peak hours. The developer wants to analyze patterns for the client IP addresses that use the application. Which HTTP header should the developer use for this analysis?</p> <p>C.\u00a0The X-Forwarded-For header</p>"},{"location":"cloud/aws/exam-questions/#question-87","title":"Question 87","text":"<p>A developer needs to create an application that supports Security Assertion Markup Language (SAML) and authentication with social media providers. It must also allow access to AWS services, such as Amazon DynamoDB. Which AWS service or feature will meet these requirements with the LEAST amount of additional coding?</p> <p>B.\u00a0Amazon Cognito identity pools</p>"},{"location":"cloud/aws/exam-questions/#question-88","title":"Question 88","text":"<p>A developer is designing a serverless application for an ecommerce website. An Amazon API Gateway API exposes AWS Lambda functions for billing, payment, and user operations. The website features shopping carts for the users. The shopping carts must be stored for extended periods of time and will be retrieved frequently by the front-end application. The load on the application will vary significantly based on the time of day and the promotional sales that are offered on the website. The application must be able to scale automatically to meet these changing demands. Which solution will meet these requirements?</p> <p>D.\u00a0Store the data objects in Amazon DynamoDB tables. Cache the data objects by using DynamoDB Accelerator (DAX).</p>"},{"location":"cloud/aws/exam-questions/#question-89","title":"Question 89","text":"<p>A company is migrating its on-premises database to Amazon RDS for MySQL. The company has read-heavy workloads, and wants to make sure it re-factors its code to achieve optimum read performance for its queries. How can this objective be met?</p> <p>C.\u00a0Add a connection string to use an RDS read replica for read queries.</p>"},{"location":"cloud/aws/exam-questions/#question-90","title":"Question 90","text":"<p>An application running on Amazon EC2 opens connections to an Amazon RDS SQL Server database. The developer does not want to store the user name and password for the database in the code. The developer would also like to automatically rotate the credentials. What is the MOST secure way to store and access the database credentials?</p> <p>B.\u00a0Use AWS Secrets Manager to store the credentials. Retrieve the credentials from Secrets Manager as needed.</p>"},{"location":"cloud/aws/services/001-asg/","title":"Auto Scaling Group (ASG)","text":""},{"location":"cloud/aws/services/001-asg/#overview","title":"Overview","text":"<p>Offers the ability for your application to scale based on load by creating and getting rid of servers very quickly.</p> <p>The goal of an Auto Scaling Group (ASG) is to: - Scale out (add EC2 Instances) to match an increased load - Scale in (remove EC2 Instances) to match a decreased load - Ensure we have a minimum and a maximum number of machines running - Automatically register new instances to a load balancer</p>"},{"location":"cloud/aws/services/001-asg/#key-concepts","title":"Key Concepts","text":"<p>Scalability = application can handle greater loads by adapting</p> <p>There are 2 types of scalability: - Vertical (increasing the size of the instance) - Horizontal (increasing the number of instances)</p> <p>High Availability = running your application in at least 2 Availability Zones</p> <p>Elasticity = scale per use (if low-use down-scale, if highly-used up-scale)</p>"},{"location":"cloud/aws/services/001-asg/#asg-attributes","title":"ASG Attributes","text":"<p>ASGs have the following attributes: - A launch configuration     - AMI + Instance Type     - EC2 User Data     - EBS Volumes     - Security Groups     - SSH Key Pair - Min / Max Size + Initial Capacity - Network + Subnets Information - Load Balancer Information - Scaling Policies</p>"},{"location":"cloud/aws/services/001-asg/#scaling-strategies","title":"Scaling Strategies","text":"<ol> <li>Manual Scaling: Update the size (minimum, maximum, desired) of an ASG manually</li> <li>Dynamic Scaling: Respond to changing demand<ul> <li>Simple / Step Scalling: based on threashold (CloudWatch CPU &gt; 70% or &lt; 30% =&gt; scale out / scale in)</li> <li>Target Tracking Scaling: E.g.: I want the average ASG CPU to stay around 40%</li> <li>Scheduled Scaling:  E.g.: increase minimum capacity to 10 at 5 pm</li> <li>Predictive Scaling: use ML to predict future traffic</li> </ul> </li> </ol>"},{"location":"cloud/aws/services/001-asg/#scaling-options","title":"Scaling Options","text":""},{"location":"cloud/aws/services/001-asg/#auto-scaling-alarms","title":"Auto Scaling Alarms","text":"<ul> <li>It is possible to scale an ASG Based on CloudWatch Alarms</li> <li>An alarms monitors a metric (such as Average CPU)</li> <li>Metrics are computed for the overall ASG instances</li> <li>Based on that alarm<ul> <li>We can create scale-out / scale-in policies</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/001-asg/#new-auto-scaling-rules","title":"New Auto Scaling Rules","text":"<ul> <li>It is now possible to define \"better\" auto-scaling rules that are directly managed by EC2<ul> <li>Target Average CPU Usage</li> <li>Number of Request on the ELB per instance</li> <li>Average Network In</li> <li>Average Network Out</li> <li>These rules are easier to set up and can make more sense</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/001-asg/#auto-scaling-custom-metric","title":"Auto Scaling Custom Metric","text":"<ul> <li>We can auto-scale based on a custom metric (ex: number of connected users)<ul> <li>Send custom metrics from an application on EC2 to CloudWatch (PutMetric API)</li> <li>Create CloudWatch Alarm to react to low/high values</li> <li>Use the CloudWatch alarm as the scaling policy for ASG</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/001-asg/#summary","title":"Summary","text":"<ul> <li>Scaling policies can be on CPU, Network\u2026 and can even be on custom metrics or based on a schedule (if you know your visitors patterns)</li> <li>ASGs use Launch configurations, and you update an ASG by providing a new launch configuration</li> <li>IAM roles attached to an ASG will get assigned to EC2 instances</li> <li>ASG are free. You pay for the underlying resources being launched</li> <li>Having instances under an ASG means that if they get terminated for whatever reason, the ASG will restart them. Extra safety</li> <li>ASG can terminate instances marked as unhealthy by an LB (and hence replace them)</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/","title":"Identity Access Management (IAM) &amp; Advanced Identity &amp; Organizations","text":""},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#overview","title":"Overview","text":"<p>IAM is a global AWS service that allows you to securely control access to AWS services and resources for your users. It enables you to create and manage AWS users and groups, and use permissions to allow and deny their access to AWS resources.</p>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#1-iam","title":"1. IAM","text":""},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#capabilities","title":"Capabilities","text":"<ul> <li>Create users and groups</li> <li>Assign policies to users and groups</li> <li>Policies define permissions</li> <li>Follow the least privilege principle</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#policies","title":"Policies","text":"<ul> <li>JSON documents defining permissions</li> <li>Can be assigned to users, groups, or roles</li> <li>Structure: Version, ID, Statement (Sid, Effect, Principal, Action, Resource, Condition)</li> <li>Policy variables allow for reusable policies</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#roles","title":"Roles","text":"<ul> <li>Allow AWS services to perform actions on your behalf</li> <li>Use trust policies to define which entities can assume the role</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#security-tools","title":"Security Tools","text":"<ol> <li>IAM Credentials Report: list all your account's users and the status of their various credentials</li> <li>IAM Access Analyzer: inspects unused access to guide you toward least privilege</li> </ol>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#best-practices","title":"Best Practices","text":"<ul> <li>Don't use root account except for setup</li> <li>One physical user = one AWS user</li> <li>Assign users to groups and assign permissions to groups</li> <li>Create a strong password policy</li> <li>Use and enforce MFA</li> <li>Create and use roles for giving permissions to AWS services</li> <li>User access keys for programmatic access (CLI/SDK)</li> <li>Never share IAM users or access keys</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#shared-responsibility-model-for-iam","title":"Shared Responsibility Model for IAM","text":"<ul> <li>AWS: Infrastructure, configuration, compliance</li> <li>You: Manage groups, roles, policies, users, MFA, key rotation, permissions</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#2-security-token-service-sts","title":"2. Security Token Service (STS)","text":"<ul> <li>Create temporary, limited-privileges credentials for AWS resources</li> <li>Use cases: EC2 roles, cross/same account access, identity federation</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#3-aws-directory-service","title":"3. AWS Directory Service","text":"<ul> <li>Connect to Microsoft Active Directory (AD)</li> <li>Options: AWS Managed Microsoft AD, AD Connector, Simple AD</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#4-aws-iam-identity-center-single-sign-on","title":"4. AWS IAM Identity Center (Single Sign-On)","text":"<ul> <li>Single login for AWS accounts and business cloud applications</li> <li>Supports SAML2.0-enabled applications</li> <li>User data can be stored in AWS or third-party providers</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#5-organizations","title":"5. Organizations","text":"<ul> <li>Manage multiple AWS accounts</li> <li>Master account for consolidated billing</li> <li>Benefits: single bill, volume discounts, reserved instance pooling, API automation, Service Control Policies (SCP)</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#multi-account-strategies","title":"Multi-Account Strategies","text":"<ul> <li>Create accounts per group, department, or environment</li> <li>Use tagging for billing</li> <li>Enable CloudTrail and CloudWatch Logs centrally</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#service-control-policies-scp","title":"Service Control Policies (SCP)","text":"<ul> <li>Whitelist/blacklist IAM actions at OU or account level</li> <li>Not applied to master account</li> <li>Must have explicit Allow</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#hierarchy-example","title":"Hierarchy Example","text":"<pre><code> Root OU\n     - Master Account\n        Prod OU\n            - Account A\n                HR OU\n                    - Account B\n                Finance OU\n                    - Account C\n</code></pre>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#access-control-list-acl","title":"Access Control List (ACL)","text":"<ul> <li>Control which principals in another account can access a resource</li> <li>Used by S3, WAF, VPC</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#permissions-boundary","title":"Permissions Boundary","text":"<ul> <li>Managed policy to set maximum permissions for IAM entities</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#consolidated-billing","title":"Consolidated Billing","text":"<ul> <li>Combine usage for volume pricing and discounts</li> <li>One bill for all accounts</li> </ul>"},{"location":"cloud/aws/services/001-aws-identity-access-and-organizations/#aws-control-tower","title":"AWS Control Tower","text":"<ul> <li>Set up and govern secure, compliant multi-account AWS environments</li> <li>Automate setup, policy management, and compliance monitoring</li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/","title":"Elastic Compute Cloud (EC2)","text":""},{"location":"cloud/aws/services/002-aws-ec2/#overview","title":"Overview","text":"<p>Amazon EC2 provides scalable computing capacity in the AWS cloud. It allows you to launch virtual servers (instances) with customizable OS, CPU, RAM, storage, and networking options.</p>"},{"location":"cloud/aws/services/002-aws-ec2/#instance-types","title":"Instance Types","text":"<ol> <li>General Purpose: great for a diversity of workloads such as web servers (has balance between compute, memory, networking)</li> <li>Compute Optimized: great for compute-intensive tasks that require high performance processors (batch processing workloads, media transcoding, high performance web servers, dedicated gaming servers)</li> <li>Memory Optimized: fast performance for workloads that process large data sets in memory (high performance relational/non-relation databases, distributed web scale cache stores, real-time processing of big unstructured data)</li> <li>Storage Optimized: great for storage intensive tasks that require high, sequential read and write access to large data sets on local storage (online transactions processing systems, relational &amp; nosql databases, data warehousing)</li> </ol>"},{"location":"cloud/aws/services/002-aws-ec2/#security-groups","title":"Security Groups","text":"<ul> <li>Are Stateful</li> <li>They control how traffic is allowed in/out of the EC2 instances, acting as a sort of \"firewall\"</li> <li>The security groups only contain ALLOW rules</li> <li>all inbound traffic is blocked by default</li> <li>all outbound traffic is authorized by default</li> <li>Security group rules can reference by IP or by security group.</li> <li>Can be attached to multiple instances</li> <li>Locked down to a region/VPC combination</li> <li>Lives \"outside\" of the EC2, if traffic is blocked =&gt; EC2 instance won't see it</li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/#classic-ports","title":"Classic Ports","text":"<ul> <li>22 = SSH (Secure Shell)</li> <li>21 = FTP (File Transfer Protocol)</li> <li>22 = SFTP (Secure File Transfer Protocol)</li> <li>80 = HTTP (access unsecured websites)</li> <li>443 = HTTPS (access secured websites)</li> <li>3389 = RDP (Remote Desktop Protocol) - log into a windows instance</li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/#instance-purchasing-options","title":"Instance Purchasing Options","text":"<ul> <li>On-Demand Instances - short workload, predictable pricing, pay by second</li> <li>Reserved (1 &amp; 3 years): reserve specific instance attributes (type, region, tenancy, os)</li> <li>Reserved Instances - long workloads</li> <li>Convertible Reserved Instance - long workloads with flexible instance</li> <li>Saving Plans (1 &amp; 3 years) - commitment to an amount of usage, long workload</li> <li>Spot Instances - short workloads, cheap, can lose instances (less reliable). You can \"lose\" at any point of time if your max price is less that the current spot price.</li> <li>Dedicated hosts - book an entire physical server, control instance placement</li> <li>Capacity Reservations - reserve capacity in a specific AZ for any duration</li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/#ec2-instance-storage","title":"EC2 Instance Storage","text":""},{"location":"cloud/aws/services/002-aws-ec2/#elastic-block-store-volume-ebs","title":"Elastic Block Store Volume (EBS)","text":"<ul> <li>Is a network drive you can attach to your instances while they run (it uses the network to communicate =&gt; some minor latency).</li> <li>It allows your instancecs to persist data, even after their termination</li> <li>They can only be mounted to one instance at a time (at the CCP level)</li> <li>They are bound to a specific availability zone</li> <li>They can detached and attached to another EC2 quickly</li> <li>Provisioned Capacity (size in GBs and IOPS)</li> <li>Have a <code>delete-on-termination</code> attribute that controls behaviour on EC2 termination</li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/#ebs-snapshots","title":"EBS Snapshots","text":"<ul> <li>Allows you to make a backup of your EBS volume at a point in time.</li> <li>Not necessary to detach the volume to do snapshot but it is recommended</li> <li>Can copy snapshots across AZ or Region</li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/#volume-types","title":"Volume Types","text":"<ul> <li>gp2/gp3 (SSD): general purpose SSD for good balance (e.g.: VM workloads)</li> <li>io1/io2 (SSD): high performance SSD for low-latency or high-throughput workloads (e.g.: database workloads)</li> <li>st1 (HDD): low cost HDD volume for frequently accesed, throughput-internsive workloads (e.g.: Big Data, Data Warehouse, Log Processing workloads)</li> <li>sc1 (HDD): lowest cost HDD volume designed for less frequently accessed workloads</li> </ul> <p>NOTES: Only gp2/gp3 and io1/io2 can be used as boot volumes</p>"},{"location":"cloud/aws/services/002-aws-ec2/#ebs-snapshots-features","title":"EBS Snapshots Features","text":"<ul> <li>EBS Snapshot Archive = allows to move a snapshot to an <code>archive tier</code> (75% cheaper but takes between 24/72 hours to restore)</li> <li>Recycle BIN for EBS Snapshots = allows to setup rules to retain deleted snapshot (in case of accidental deletion), you can specify retention (1 day to 1 year)</li> <li>Fast Snapshot Restore (FSR) = force full initialization of snaphost to <code>no latency</code> on first use (is costly)</li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/#ebs-multi-attach-only-for-io1io2-family","title":"EBS Multi-Attach - only for io1/io2 family","text":"<ul> <li>Allows to attach the same EBS volume to multiple EC2 in the same AZ (each instance gaining full read/write permissions)</li> <li>Used for higher application availability in clustered linux applications or for application that must manager concurent write operations</li> <li>Limitation of up to 16 EC2 instance at a time and must use a file system that is cluster-aware (not xfs, EXT4, etc)</li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/#amazon-machine-image-ami","title":"Amazon Machine Image (AMI)","text":"<ul> <li>represent a customization of an EC2 instance (with software pre-packaged =&gt; faster boot time)</li> <li>they are built for a specific region (can be copied across regions)</li> <li>You can launch them from</li> <li>A Public AMI (provided by AWS)</li> <li>Your own AMI (make and maintain yourself)</li> <li>AWS Marketplace AMI (somebody else made and sells)</li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/#construction-of-an-ami","title":"Construction of an AMI","text":"<ul> <li>Start EC2 =&gt; customize it =&gt; stop instance =&gt; build an AMI (will create EBS snapshots) =&gt; launch instance using the AMI</li> <li>Use EC2 Image Builder (free of service / you only pay for underlying resources) =&gt; automate creation/maintain/validate/test of AMI and can be run on a schedule</li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/#ec2-instance-store","title":"EC2 Instance Store","text":"<p>Represent a high-performance hardware disk which has the following properties: - Better I/0 performance - Lose storage if stopped (ephemeral) - Good for buffer / cache / scratch data / temporary content - Risk of data if hardware fails - Backup &amp; Replication are your responability</p>"},{"location":"cloud/aws/services/002-aws-ec2/#elastic-file-system-efs","title":"Elastic File System (EFS)","text":"<ul> <li>Is a managed NFS (network file system) which can be mounted on 100s of EC2.</li> <li>Works with only Linux EC2 instances in multi-AZ, scale automatically and pay for use</li> <li>Highly available, scalable, expensive, pay per use, no capacity planning</li> <li>Use cases: content management, web serving, data sharing, wordpress</li> <li>Uses NFSv4.1 protocol and you control access through a security group</li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/#types","title":"Types","text":"<p>Performance Mode (set at EFS creation time) - General Purpose (default) - Max I/O Througput Mode - Bursting = 1 TB = 50MIB/S + burst of up to 100 MIB/s - Provisioned = set your throughput regardless of storage size (1GIB/s for 1 TB storage) - Elastic = automatically scales (good for unpredicable workloads) Availability and durability - Regional (Standard): multi-az - One-Zone: one az, great for dev, backup</p>"},{"location":"cloud/aws/services/002-aws-ec2/#efs-infrequent-access-efs-ia","title":"EFS Infrequent Access (EFS-IA)","text":"<ul> <li>Storage class that is cost-optimized for files not accessed every days</li> <li>EFS will automatically move your files to EFS-IA based on the last time they were accessed</li> <li>Enable EFS-IA with a Lifecycle Policy </li> </ul>"},{"location":"cloud/aws/services/002-aws-ec2/#amazon-fsx","title":"Amazon FSx","text":"<p>A fully-managed, high-performance file system on AWS.</p> <p>For Windows File Serve - Windows native shared file system - Built on Windows File Server - Supports SMB protocol &amp; Windows NTFS - Integrated with Microsoft Active Directoy - Can be accessed from AWS or your on-premise infrastructure For Lustre (derived from 'Linux' and 'cluster') - used for Linux File System - used for High Performance Computing (HPC) - Scales up to 100s GB/s, million IOPS</p>"},{"location":"cloud/aws/services/002-compute-storage/","title":"Compute &amp; Storage","text":""},{"location":"cloud/aws/services/002-compute-storage/#overview","title":"Overview","text":"<p>Amazon EC2 provides scalable computing capacity in the AWS cloud. EBS, Instance Store, and EFS are the main storage options for EC2 instances. This document covers EBS Volumes, EC2 Instance Store, Elastic File System (EFS), and Amazon FSx.</p>"},{"location":"cloud/aws/services/002-compute-storage/#ebs-volume","title":"EBS Volume","text":"<p>Amazon Elastic Block Storage (EBS) allows you to create storage volumes and attach them to EC2 instances. Once attached, you can create a file system on top of these volumes, run a database, or use them in any other way you would use a block device. Amazon EBS volumes are placed in a specific Availability Zone, where they are automatically replicated to protect you from failure of a single component (i.e. they exist across multiple physical drives). Think of EBS as a disk in the cloud that you attach to your EC2 instance.</p> <ul> <li>An EC2 machine loses its root volume (main drive) when it is manually terminated.</li> <li>Unexpected terminations might happen from time to time (AWS would email you)</li> <li>Sometimes, you need a way to store your instance data somewhere.</li> <li>An EBS (Elastic Block Store) Volume is a network drive you can attach to your instances while they run</li> <li>It allows your instances to persist data</li> </ul>"},{"location":"cloud/aws/services/002-compute-storage/#ebs-volume-details","title":"EBS Volume Details","text":"<ul> <li>It\u2019s a network drive (Not a physical drive)<ul> <li>It uses the network to communicate the instance, which means there might be a bit of latency</li> <li>It can be detached from an EC2 instance and attached to another one quickly</li> </ul> </li> <li>It\u2019s locked to an Availability Zone (AZ)<ul> <li>An EBS Volume in us-east-1a cannot be attached to us-east-1b</li> <li>To move a volume across, you first need to snapshot it</li> </ul> </li> <li>Have a provisioned capacity (size in GBs and IOPs)<ul> <li>You get billed for all the provisioned capacity</li> <li>You can increase the capacity of the drive over time</li> </ul> </li> <li>Have a <code>delete-on-termination</code> attribute that controls behavior on EC2 termination</li> </ul>"},{"location":"cloud/aws/services/002-compute-storage/#volumes-types","title":"Volumes Types","text":"<p>EBS Volumes come in 4 types: - gp2/gp3 (SSD): general purpose SSD for good balance (e.g.: most workloads, VM workloads, System boot volumes, low-latency interactive apps, development and test environments) - io1/io2 (SSD): high performance SSD for low-latency or high-throughput workloads (e.g.: database workloads, critical business applications that require sustained IOPS, or more than 16000 IOPS per volume (gp2 limit)) - st1 (HDD): low cost HDD volume for frequently accessed, throughput-intensive workloads (e.g.: Big Data, Data Warehouse, Log Processing workloads, Apache Kafka) - sc1 (HDD): lowest cost HDD volume designed for less frequently accessed workloads</p> <p>Notes: - Only GP2 and IO1 can be used as boot volumes - GP2 limit is 16000 - EBS Volumes are characterized in Size | Throughput | IOPS</p>"},{"location":"cloud/aws/services/002-compute-storage/#ebs-volume-resizing","title":"EBS Volume Resizing","text":"<ul> <li>Feb 2017: You can resize your EBS Volumes</li> <li>After resizing an EBS volume, you need to repartition your drive</li> </ul>"},{"location":"cloud/aws/services/002-compute-storage/#ebs-snapshots","title":"EBS Snapshots","text":"<ul> <li>EBS Volumes can be backed up using \u201csnapshots\u201d</li> <li>Snapshots only take the actual space of the blocks on the volume</li> <li>If you take a snapshot of a 100GB drive that only has 5 GB of data, then your EBS snapshot will only be 5 GB</li> <li>Snapshots are used for:<ul> <li>Backups: ensuring you can save your data in case of catastrophe</li> <li>Volume migration<ul> <li>Resizing a volume down</li> <li>Changing the volume type</li> <li>Encrypt a volume</li> </ul> </li> </ul> </li> <li>Recycle BIN for EBS Snapshots = allows to setup rules to retain deleted snapshot (in case of accidental deletion), you can specify retention (1 day to 1 year)</li> <li>Fast Snapshot Restore (FSR) = force full initialization of snapshot to <code>no latency</code> on first use (is costly)</li> </ul>"},{"location":"cloud/aws/services/002-compute-storage/#ebs-encryption","title":"EBS Encryption","text":"<ul> <li>When you create an encrypted EBS volume, you get the following:<ul> <li>Data at rest is encrypted inside the volume</li> <li>All the data in flight moving between the instance and the volume is encrypted</li> <li>All snapshots are encrypted</li> <li>All volumes created from the snapshots are encrypted</li> </ul> </li> <li>Encryption and decryption are handled transparently (you have nothing to do)</li> <li>Encryption has a minimal impact on latency</li> <li>EBS Encryption leverages keys from KMS (AES-256)</li> <li>Copying an unencrypted snapshot allows encryption</li> </ul>"},{"location":"cloud/aws/services/002-compute-storage/#ec2-instance-store","title":"EC2 Instance Store","text":"<p>Represent a high-performance hardware disk which has the following properties: - Better I/0 performance - Lose storage if stopped (ephemeral) - Good for buffer / cache / scratch data / temporary content - Risk of data if hardware fails - Backup &amp; Replication are your reasonability</p>"},{"location":"cloud/aws/services/002-compute-storage/#elastic-file-system-efs","title":"Elastic File System (EFS)","text":"<ul> <li>Is a managed NFS (network file system) which can be mounted on 100s of EC2.</li> <li>Works with only Linux EC2 instances in multi-AZ, scale automatically and pay for use</li> <li>Highly available, scalable, expensive, pay per use, no capacity planning</li> <li>Use cases: content management, web serving, data sharing, WordPress</li> <li>Uses NFSv4.1 protocol and you control access through a security group</li> </ul>"},{"location":"cloud/aws/services/002-compute-storage/#efs-infrequent-access-efs-ia","title":"EFS Infrequent Access (EFS-IA)","text":"<ul> <li>Storage class that is cost-optimized for files not accessed every days</li> <li>EFS will automatically move your files to EFS-IA based on the last time they were accessed</li> <li>Enable EFS-IA with a Lifecycle Policy </li> </ul>"},{"location":"cloud/aws/services/002-compute-storage/#amazon-fsx","title":"Amazon FSx","text":"<p>A fully-managed, high-performance file system on AWS.</p> <p>For Windows File Serve - Windows native shared file system - Built on Windows File Server - Supports SMB protocol &amp; Windows NTFS - Integrated with Microsoft Active Directoy - Can be accessed from AWS or your on-premise infrastructure For Lustre (derived from 'Linux' and 'cluster') - used for Linux File System - used for High Performance Computing (HPC) - Scales up to 100s GB/s, million IOPS</p>"},{"location":"cloud/aws/services/002-compute-storage/#ebs-vs-instance-store","title":"EBS vs. Instance Store","text":"<ul> <li>Some instance do not come with Root EBS volumes</li> <li>Instead, they come with \u201cinstance Store\u201d</li> <li>Instance store is physically attached to the machine</li> <li>Pros:<ul> <li>Better I/O performance</li> </ul> </li> <li>Cons:<ul> <li>On termination, the instance store is lost</li> <li>You can\u2019t resize the instance store</li> <li>Backups must be operated by the user</li> </ul> </li> <li>Overall, EBS-backed instances should fit most applications workloads</li> </ul>"},{"location":"cloud/aws/services/002-compute-storage/#summary","title":"Summary","text":"<ul> <li>EBS can be attached to only one instance at a time</li> <li>EBS are locked at the AZ level</li> <li>Migrating an EBS volume across AZ means first backing it up (snapshot), then recreating it in the other AZ</li> <li>EBS backups use IO and you shouldn\u2019t run them while your application is handling a lot of traffic</li> <li>Root EBS Volumes of instances get terminated by default if the EC2 instance gets terminated. (You can disable that)</li> <li>In some cases, it's better to externalize your RDS database so that it won't get deleted when you delete your elastic beanstalk environment</li> <li>Elastic Beanstalk relies on CloudFormation</li> </ul>"},{"location":"cloud/aws/services/002-compute-storage/#use-cases-summary","title":"Use Cases Summary","text":"<ul> <li>Big Data / Data Warehouses / Log Processing : ST1 (HDD)</li> <li>Lowest storage cost : SC1 (HDD)</li> <li>NoSQL such as MongoDB, Cassandra or MSQL : IO1 (SSD)</li> <li>Low latency applications : GP2 (SSD)</li> </ul>"},{"location":"cloud/aws/services/003-aws-elb-asg/","title":"Elastic Load Balancer (ELB) &amp; Auto-Scaling Groups (ASG)","text":""},{"location":"cloud/aws/services/003-aws-elb-asg/#overview","title":"Overview","text":"<p>Elastic Load Balancer (ELB) and Auto-Scaling Groups (ASG) are core AWS services for building scalable, highly available, and resilient applications.</p>"},{"location":"cloud/aws/services/003-aws-elb-asg/#key-concepts","title":"Key Concepts","text":""},{"location":"cloud/aws/services/003-aws-elb-asg/#scalability","title":"Scalability","text":"<ul> <li>Application can handle greater loads by adapting</li> <li>Vertical: increasing the size of the instance</li> <li>Horizontal: increasing the number of instances</li> </ul>"},{"location":"cloud/aws/services/003-aws-elb-asg/#high-availability","title":"High Availability","text":"<ul> <li>Running your application in at least 2 Availability Zones</li> </ul>"},{"location":"cloud/aws/services/003-aws-elb-asg/#elasticity","title":"Elasticity","text":"<ul> <li>Scale per use (if low-use down-scale, if highly-used up-scale)</li> </ul>"},{"location":"cloud/aws/services/003-aws-elb-asg/#load-balancers","title":"Load Balancers","text":"<p>Servers that forward internet traffic to multiple servers downstream. They are used for: - Spreading load across multiple instances - Exposes a single-point of access (DNS) to your application - Seamlessly handle failure of downstream instances - Do regular healthchecks - Provide SSL - High Availability</p>"},{"location":"cloud/aws/services/003-aws-elb-asg/#types-of-elb","title":"Types of ELB","text":"<ul> <li>Application Load Balancer (ALB) (HTTP(s)) - works on layer 7 (OSI model)</li> <li>Network Load Balancer (NLB) (ultra-high performance, allows for TCP) - works on layer 4</li> <li>Classic Load Balancer (slowly retiring) - works on layer 7 and 4</li> </ul>"},{"location":"cloud/aws/services/003-aws-elb-asg/#auto-scaling-group-asg","title":"Auto-Scaling Group (ASG)","text":"<p>Allows you to: - Scale out (add EC2 instances) to match an increased load - Scale in (remove EC2 instance) to match a decreased load - Ensure minimum and maximum number of instances - Automatically register new instances to a load balancer - Replace unhealthy instances - Cost savings (only run at optimal capacity)</p>"},{"location":"cloud/aws/services/003-aws-elb-asg/#scaling-strategies","title":"Scaling Strategies","text":"<ol> <li>Manual Scaling: Update the size (minimum, maximum, desired) of an ASG manually</li> <li>Dynamic Scaling: Respond to changing demand<ul> <li>Simple / Step Scaling: based on threshold (CloudWatch CPU &gt; 70% or &lt; 30% =&gt; scale out / scale in)</li> <li>Target Tracking Scaling: E.g.: I want the average ASG CPU to stay around 40%</li> <li>Scheduled Scaling:  E.g.: increase minimum capacity to 10 at 5 pm</li> <li>Predictive Scaling: use ML to predict future traffic</li> </ul> </li> </ol>"},{"location":"cloud/aws/services/004-aws-s3/","title":"Amazon S3","text":""},{"location":"cloud/aws/services/004-aws-s3/#overview","title":"Overview","text":"<p>Amazon S3 (Simple Storage Service) is an object storage service that offers industry-leading scalability, data availability, security, and performance. It allows you to store and retrieve any amount of data at any time from anywhere on the web.</p>"},{"location":"cloud/aws/services/004-aws-s3/#bucket","title":"Bucket","text":"<p>This allows for object (files) storage in a \"bucket\" (directory).</p> <ul> <li>Buckets must have a globally unique name (across all regions and all accounts)</li> <li>Buckets are defined at the region level</li> <li>Buckets are created in a region (not global)</li> <li>Naming Convention (no uppercase, no underscore, 3-63 characters long, must start with lowercase, must not start with prefix \"xn-\" or suffix \"-s3alias\")</li> </ul>"},{"location":"cloud/aws/services/004-aws-s3/#objects","title":"Objects","text":"<p>Objects are files which have a key, which represents the full path (e.g.: \"s3://my-bucket/my_folder1/another_folder/my_file.txt\"), and is composed of a prefix (e.g.: \"my_folder1/another_folder\") and the object name (e.g.: \"my_file.txt\").</p> <p>Note: There is no concept of \"directories\" within buckets.</p> <ul> <li>Max object size is 5TB (5000GB)</li> <li>If uploading more than &gt; 5GB =&gt; you must use \"multi-part upload\"</li> </ul> <p>Objects are comprised of: - Value which is the content of the body - Metadata (list of text key / value pairs - system or user metadata) - Tags (Unicode key / value pair up to 10) - Version ID (if versioning enabled)</p>"},{"location":"cloud/aws/services/004-aws-s3/#versioning","title":"Versioning","text":"<p>You can version if it enabled at bucket level which will result in the same key overwrite to just change the version (any versioned prior to enable versioning will have version \"null\")</p>"},{"location":"cloud/aws/services/004-aws-s3/#security","title":"Security","text":"<ol> <li>User-Based</li> <li>IAM Policies - which API calls should be allowed for a specific user from IAM</li> <li>Resource-Based</li> <li>Bucket Policies (bucket wide rules from the S3 console - allows cross account)</li> <li>Object Access Control List (ACL) - finer grain (can be disabled)</li> <li>Bucket Access Control List (ACL) - less common (can be disabled)</li> </ol> <p>Note: An IAM principal can access an S3 object if: - The user IAM permissions ALLOWS it or the resource policy ALLOWS it - AND there's no explicit DENY</p>"},{"location":"cloud/aws/services/004-aws-s3/#s3-bucket-policies","title":"S3 Bucket Policies","text":"<p>JSON based policies - Resources: bucket and objects - Effect: Allow/Deny - Actions: Set of API to Allow or Deny - Principal: the account or user to apply the policy to</p> <p>Use it for: - Grant public access to the bucket - Force objects to be encrypted at upload - Grant access to another account (Cross Account)</p>"},{"location":"cloud/aws/services/004-aws-s3/#replication-crr-srr","title":"Replication (CRR &amp; SRR)","text":"<p>It requires versioning to be enabled in source and destination buckets. It is of 2 types: - Cross-Region Replication (CRR) (e.g.: used in compliance, lower latency access, replication across accounts) - Same-Region Replication (SRR) (e.g.: log aggregation, live replication between production and test accounts)</p> <p>Note that copying is asynchronous and you must give proper IAM permissions to S3.</p>"},{"location":"cloud/aws/services/004-aws-s3/#storage-classes","title":"Storage Classes","text":"<p>Durability = how long objects stored are expected to incur losses on average (e.g.: High Durability: 99.999999999% =&gt; 10,000,000 objects you can expect 1 single object loss every 10,000 years). For S3 is the same for all storage classes. Availability = measures how readily available a service is, varies depending on storage class</p>"},{"location":"cloud/aws/services/004-aws-s3/#standard-class","title":"Standard Class","text":"<ul> <li>S3 Standard - General Purpose </li> <li>99.99% Availability</li> <li>Used for frequently accessed data</li> <li>Low Latency and High Throughput</li> <li>Sustain 2 concurrent facility failures</li> <li>Use Cases: Big Data analytics, mobile &amp; gaming applications, content distribution</li> </ul>"},{"location":"cloud/aws/services/004-aws-s3/#infrequent-access-class","title":"Infrequent Access Class","text":"<p>For data that is less frequently accessed but requires rapid access when needed.</p> <ul> <li>S3 Standard-Infrequent Access (IA)</li> <li>99.9 availability</li> <li>Use Cases: Disaster recovery, backups</li> <li>Lower Cost than General purpose</li> <li>S3 One Zone-Infrequent Access</li> <li>High durability (99.999999999%) in a single AZ, data lost when AZ is destroyed</li> <li>99.5% Availability</li> <li>Use Cases: Storing secondary backup copies of on-premise data or data you can recreate</li> <li>Lower Cost than Standard-Infrequent Access</li> </ul>"},{"location":"cloud/aws/services/004-aws-s3/#glacier-storage-class","title":"Glacier Storage Class","text":"<p>Low-cost object storage meant for archiving /backup. The pricing is based on price for storage + object retrieval cost.</p> <ul> <li>S3 Glacier Instant Retrieval</li> <li>millisecond retrieval, great for data accessed once a quarter</li> <li>Minimum storage duration of 90 days</li> <li>Lower Cost than One Zone-Infrequent Access</li> <li>S3 Glacier Flexible Retrieval</li> <li>Expedited (1 to 5 minutes), Standard (3 to 5 hours), Bulk (5 to 12 hours) - free</li> <li>Minimum storage duration of 90 days</li> <li>Lower Cost than S3 Glacier Instant Retrieval</li> <li>S3 Glacier Deep Archive</li> <li>Standard (12 hours), Bulk (48 hours)</li> <li>Minimum storage duration of 180 days</li> <li>Lower Cost than S3 Glacier Flexible Retrieval</li> </ul>"},{"location":"cloud/aws/services/004-aws-s3/#intelligent-class","title":"Intelligent Class","text":"<ul> <li>S3 Intelligent Tiering</li> <li>Small monthly monitoring and auto-tiering fee</li> <li>Move access between access tiers based on usage</li> <li>No retrieval charges</li> </ul>"},{"location":"cloud/aws/services/004-aws-s3/#shared-responsibility-model-for-s3","title":"Shared Responsibility Model for S3","text":"AWS You (client) Infrastructure S3 versioning Configuration and vulnerability analysis S3 Bucket Policies Compliance Validation S3 Replication Setup Logging and Monitoring S3 Storage Classes Data encryption at rest and in transit"},{"location":"cloud/aws/services/004-aws-s3/#snow-family","title":"Snow Family","text":"<p>Highly-secure, portable devices to collect and process data at the edge (limited / no internet access or computing power) and migrate data into and out of AWS. Note if it takes more than a week to transfer over the network =&gt; use Snowball devices. All of them can run EC2 Instances &amp; AWS lambda functions (using IoT Greengrass)</p> Data Migration Edge Computing Snowcone Snowcone Snowball Edge Snowball Edge Snowmobile <ol> <li>Snowball Edge</li> <li>Physical data transport solution</li> <li>Pay per data transfer job</li> <li>Provide block storage and Amazon S3-compatible object storage</li> <li>It can Storage Optimized (80TB HDD, 40vCPU, 80GiB RAM) or Compute Optimized (42TB HDD, 52vCPU, 208 GiB Ram)</li> <li>Snowcone</li> <li>Portable computing</li> <li>8 TB of usable storage</li> <li>Smaller device (use Snowcone where Snowball does not fit)</li> <li>Can also be synced using AWS DataSync over the internet (alternative to offline option)</li> <li>Snowmobile</li> <li>A very large truck to transfer exabytes of data</li> <li>High security, temperature controlled</li> <li>Use if you transfer more than 10 PB</li> </ol>"},{"location":"cloud/aws/services/004-aws-s3/#aws-opshub-used-to-manage-snow-family-devices-transferring-files-configuring-devices-launchingmanaging-instance-s-running-on-devices","title":"Aws OpsHub = used to manage Snow Family Devices (transferring files, configuring devices, launching/managing instance s running on devices)","text":""},{"location":"cloud/aws/services/004-aws-s3/#aws-storage-gateway","title":"AWS Storage Gateway","text":"<ul> <li>Bridge between on-premise data and cloud data in S3, Hybrid storage service to allow on-premises to seamlessly use the AWS cloud.</li> <li>Use Cases: disaster recovery, backup &amp; restore, tiered storage</li> <li>Has 3 Types:</li> <li>Tape Gateway</li> <li>File Gateway</li> <li>Volume Gateway</li> </ul>"},{"location":"cloud/aws/services/005-aws-databases/","title":"AWS Databases","text":""},{"location":"cloud/aws/services/005-aws-databases/#overview","title":"Overview","text":"<p>AWS offers a wide range of managed database services to support various use cases, including relational, NoSQL, in-memory, graph, time series, and ledger databases.</p>"},{"location":"cloud/aws/services/005-aws-databases/#relational-databases","title":"Relational Databases","text":""},{"location":"cloud/aws/services/005-aws-databases/#amazon-rds-relational-database-service","title":"Amazon RDS (Relational Database Service)","text":"<ul> <li>Supports multiple engines: MySQL, PostgreSQL, MariaDB, Oracle, SQL Server, and Amazon Aurora</li> <li>Automated backups, patching, and failover</li> <li>Multi-AZ deployments for high availability</li> <li>Read replicas for scaling read workloads</li> </ul>"},{"location":"cloud/aws/services/005-aws-databases/#amazon-aurora","title":"Amazon Aurora","text":"<ul> <li>MySQL and PostgreSQL compatible</li> <li>Up to 5x performance of standard MySQL and 3x of PostgreSQL</li> <li>Replicated 6 ways across 3 AZs</li> <li>Automated failover, backup, and replication</li> </ul>"},{"location":"cloud/aws/services/005-aws-databases/#nosql-databases","title":"NoSQL Databases","text":""},{"location":"cloud/aws/services/005-aws-databases/#amazon-dynamodb","title":"Amazon DynamoDB","text":"<ul> <li>Fully managed NoSQL database</li> <li>Single-digit millisecond latency</li> <li>Supports key-value and document data models</li> <li>Built-in security, backup, and restore</li> <li>Global tables for multi-region, multi-master replication</li> </ul>"},{"location":"cloud/aws/services/005-aws-databases/#amazon-documentdb","title":"Amazon DocumentDB","text":"<ul> <li>MongoDB-compatible document database</li> <li>Fully managed, scalable, and highly available</li> </ul>"},{"location":"cloud/aws/services/005-aws-databases/#in-memory-databases","title":"In-Memory Databases","text":""},{"location":"cloud/aws/services/005-aws-databases/#amazon-elasticache","title":"Amazon ElastiCache","text":"<ul> <li>Supports Redis and Memcached</li> <li>In-memory caching for high performance</li> <li>Use cases: caching, session stores, real-time analytics</li> </ul>"},{"location":"cloud/aws/services/005-aws-databases/#graph-databases","title":"Graph Databases","text":""},{"location":"cloud/aws/services/005-aws-databases/#amazon-neptune","title":"Amazon Neptune","text":"<ul> <li>Fully managed graph database</li> <li>Supports property graph and RDF graph models</li> <li>Use cases: social networking, fraud detection, knowledge graphs</li> </ul>"},{"location":"cloud/aws/services/005-aws-databases/#time-series-databases","title":"Time Series Databases","text":""},{"location":"cloud/aws/services/005-aws-databases/#amazon-timestream","title":"Amazon Timestream","text":"<ul> <li>Fully managed time series database</li> <li>Optimized for IoT and operational applications</li> <li>Fast ingestion and querying of time series data</li> </ul>"},{"location":"cloud/aws/services/005-aws-databases/#ledger-databases","title":"Ledger Databases","text":""},{"location":"cloud/aws/services/005-aws-databases/#amazon-qldb-quantum-ledger-database","title":"Amazon QLDB (Quantum Ledger Database)","text":"<ul> <li>Fully managed ledger database</li> <li>Immutable and cryptographically verifiable transaction log</li> <li>Use cases: supply chain, registrations, banking transactions</li> </ul>"},{"location":"cloud/aws/services/005-aws-databases/#migration-services","title":"Migration Services","text":""},{"location":"cloud/aws/services/005-aws-databases/#aws-database-migration-service-dms","title":"AWS Database Migration Service (DMS)","text":"<ul> <li>Migrate databases to AWS easily and securely</li> <li>Supports homogeneous and heterogeneous migrations</li> <li>Minimal downtime during migration</li> </ul>"},{"location":"cloud/aws/services/005-aws-databases/#best-practices","title":"Best Practices","text":"<ul> <li>Choose the right database for your workload</li> <li>Use managed services for scalability and reliability</li> <li>Enable automated backups and multi-AZ deployments</li> <li>Monitor performance and set up alerts</li> <li>Secure databases with IAM, encryption, and network controls</li> </ul>"},{"location":"cloud/aws/services/006-aws-compute/","title":"AWS Compute Services","text":""},{"location":"cloud/aws/services/006-aws-compute/#overview","title":"Overview","text":"<p>AWS provides a variety of compute services to support different workloads, including virtual machines, containers, serverless, and edge computing.</p>"},{"location":"cloud/aws/services/006-aws-compute/#ec2-elastic-compute-cloud","title":"EC2 (Elastic Compute Cloud)","text":"<ul> <li>Virtual servers in the cloud</li> <li>Wide selection of instance types</li> <li>Full control over OS and software</li> <li>Supports auto scaling and load balancing</li> </ul>"},{"location":"cloud/aws/services/006-aws-compute/#lambda","title":"Lambda","text":"<ul> <li>Serverless compute service</li> <li>Runs code in response to events</li> <li>Automatic scaling and resource management</li> <li>Pay only for compute time consumed</li> </ul>"},{"location":"cloud/aws/services/006-aws-compute/#elastic-beanstalk","title":"Elastic Beanstalk","text":"<ul> <li>Platform as a Service (PaaS)</li> <li>Deploy and manage applications easily</li> <li>Supports multiple languages and platforms</li> <li>Handles provisioning, load balancing, scaling, and monitoring</li> </ul>"},{"location":"cloud/aws/services/006-aws-compute/#ecs-elastic-container-service","title":"ECS (Elastic Container Service)","text":"<ul> <li>Highly scalable container orchestration service</li> <li>Supports Docker containers</li> <li>Integrates with EC2 and Fargate</li> </ul>"},{"location":"cloud/aws/services/006-aws-compute/#eks-elastic-kubernetes-service","title":"EKS (Elastic Kubernetes Service)","text":"<ul> <li>Managed Kubernetes service</li> <li>Run Kubernetes clusters on AWS</li> <li>Handles control plane management and scaling</li> </ul>"},{"location":"cloud/aws/services/006-aws-compute/#aws-fargate","title":"AWS Fargate","text":"<ul> <li>Serverless compute engine for containers</li> <li>Works with ECS and EKS</li> <li>No need to manage servers or clusters</li> </ul>"},{"location":"cloud/aws/services/006-aws-compute/#lightsail","title":"Lightsail","text":"<ul> <li>Simplified cloud platform</li> <li>Easy-to-use virtual private servers</li> <li>Bundled resources (compute, storage, networking)</li> <li>Ideal for simple web apps, blogs, and dev/test environments</li> </ul>"},{"location":"cloud/aws/services/006-aws-compute/#outposts","title":"Outposts","text":"<ul> <li>Run AWS infrastructure and services on-premises</li> <li>Hybrid cloud solution</li> <li>Consistent APIs and tools across cloud and on-premises</li> </ul>"},{"location":"cloud/aws/services/006-aws-compute/#batch","title":"Batch","text":"<ul> <li>Run batch computing workloads</li> <li>Dynamically provisions compute resources</li> <li>Supports job queues and dependencies</li> </ul>"},{"location":"cloud/aws/services/006-aws-compute/#edge-computing","title":"Edge Computing","text":"<ul> <li>AWS Wavelength: Brings AWS services to the edge of 5G networks</li> <li>AWS Snow Family: Edge computing and data transfer devices</li> <li>AWS Greengrass: Local compute, messaging, data caching, sync, and ML inference</li> </ul>"},{"location":"cloud/aws/services/006-aws-compute/#best-practices","title":"Best Practices","text":"<ul> <li>Choose the right compute service for your workload</li> <li>Use auto scaling for elasticity</li> <li>Monitor and optimize resource usage</li> <li>Secure compute resources with IAM and network controls</li> <li>Automate deployments and management with infrastructure as code</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/","title":"AWS Infrastructure Management","text":""},{"location":"cloud/aws/services/007-aws-infrastructure-management/#overview","title":"Overview","text":"<p>AWS provides a suite of tools and services to help you manage, monitor, and automate your cloud infrastructure efficiently and securely.</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#infrastructure-as-code-iac","title":"Infrastructure as Code (IaC)","text":""},{"location":"cloud/aws/services/007-aws-infrastructure-management/#aws-cloudformation","title":"AWS CloudFormation","text":"<ul> <li>Declarative templates for provisioning AWS resources</li> <li>Supports version control and automation</li> <li>Enables repeatable infrastructure deployments</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#aws-cdk-cloud-development-kit","title":"AWS CDK (Cloud Development Kit)","text":"<ul> <li>Define cloud infrastructure using familiar programming languages</li> <li>High-level abstractions and constructs</li> <li>Synthesizes to CloudFormation templates</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#aws-opsworks","title":"AWS OpsWorks","text":"<ul> <li>Configuration management using Chef and Puppet</li> <li>Automates server configuration, deployment, and management</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#monitoring-management","title":"Monitoring &amp; Management","text":""},{"location":"cloud/aws/services/007-aws-infrastructure-management/#aws-cloudwatch","title":"AWS CloudWatch","text":"<ul> <li>Monitoring for AWS resources and applications</li> <li>Collects and tracks metrics, logs, and events</li> <li>Set alarms and automate actions</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#aws-cloudtrail","title":"AWS CloudTrail","text":"<ul> <li>Records AWS API calls for your account</li> <li>Provides event history for auditing and compliance</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#aws-config","title":"AWS Config","text":"<ul> <li>Tracks resource configurations and changes</li> <li>Enables compliance auditing and security analysis</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#aws-systems-manager","title":"AWS Systems Manager","text":"<ul> <li>Unified interface for managing AWS resources</li> <li>Automation, patching, inventory, and parameter store</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#automation-orchestration","title":"Automation &amp; Orchestration","text":""},{"location":"cloud/aws/services/007-aws-infrastructure-management/#aws-elastic-beanstalk","title":"AWS Elastic Beanstalk","text":"<ul> <li>Platform as a Service for deploying applications</li> <li>Handles provisioning, load balancing, scaling, and monitoring</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#aws-codedeploy","title":"AWS CodeDeploy","text":"<ul> <li>Automates code deployments to EC2, Lambda, and on-premises</li> <li>Supports blue/green and rolling deployments</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#aws-codepipeline","title":"AWS CodePipeline","text":"<ul> <li>Continuous integration and delivery service</li> <li>Automates build, test, and deploy phases</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#best-practices","title":"Best Practices","text":"<ul> <li>Use infrastructure as code for repeatability and automation</li> <li>Monitor resources and set up alerts</li> <li>Track changes and maintain audit trails</li> <li>Automate deployments and management tasks</li> <li>Enforce compliance and security policies</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#summary","title":"Summary","text":""},{"location":"cloud/aws/services/007-aws-infrastructure-management/#deployment-services","title":"Deployment Services","text":"<ul> <li>CloudFormation: (AWS only)</li> <li>Infrastructure as Code, works with almost all of AWS resources</li> <li>Repeat across Regions &amp; Accounts</li> <li>Beanstalk: (AWS only)</li> <li>Platform as a Service (PaaS), limited to certain programming languages or Docker</li> <li>Deploy code consistently with a known architecture: ex, ALB + EC2 + RDS</li> <li>CodeDeploy (hybrid): deploy &amp; upgrade any application onto servers</li> <li>Systems Manager (hybrid): patch, configure and run commands at scale</li> <li>OpsWorks (hybrid): managed Chef and Puppet in AWS</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#developer-services","title":"Developer Services","text":"<ul> <li>CodeCommit: Store code in private git repository (version controlled)</li> <li>CodeBuild: Build &amp; test code in AWS</li> <li>CodeDeploy: Deploy code onto servers</li> <li>CodePipeline: Orchestration of pipeline (from code to build to deploy)</li> <li>CodeArtifact: Store software packages / dependencies on AWS</li> <li>CodeStar: Unified view for allowing developers to do CICD and code</li> <li>Cloud9: Cloud IDE (Integrated Development Environment) with collab</li> <li>AWS CDK: Define your cloud infrastructure using a programming language</li> </ul>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#cloudformation","title":"CloudFormation","text":"<p>Represents a declarative way of outlining your AWS Infrastructure for any resources thus allowing you to create in the right order the exact configuration you specify. This is Infrastructure as Code allowing you: - greater degree of control - you can estimate costs of your resources using CloudFormation Template or through using tags or saving strategies (delete resource at 5pm) - you are more productive being able to destroy and re-create your infrastructure on the fly - you can leverage already exiting templates</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#cdk-cloud-development-kit","title":"CDK (Cloud Development Kit)","text":"<p>This is a set o libraries allowing you to define your cloud infrastructure using a programming language (python, typescript, java, .net) and compiling into CloudFormation template (json/yaml)</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#elastic-beanstalk","title":"Elastic Beanstalk","text":"<p>Is a developer centric view of deploying an application on AWS (using AWS components like EC2, ASG, ELB, RDS, etc..) with full control over the configuration. A managed service where just the application code is responsabile of the developer the rest is handled by Beanstalk: - Instance configuration / OS is handled by Beanstalk - Deployment strategy is configurable but performed by Elastic Beanstalk - Capacity Provision - Load balancing &amp; auto-scaling - Application healh-monitoring &amp; responsiveness</p> <p>Beanstalk = Platform as a Service (Paas).</p> <p>Beanstalk is free but you pay for the underlying instances and you have three architecture models: - Single Instance deployment (good for dev) - LB + ASG: great for production or pre-prod web app - ASG only: great for non-web apps in prod</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#code-services","title":"Code* Services","text":""},{"location":"cloud/aws/services/007-aws-infrastructure-management/#codedeploy","title":"CodeDeploy","text":"<p>Help with the deplyoment of an application, working in a hybrid manner both with EC2 instances and On-premises servers (provisioned and configured ahead of time with CodeDeploy Agent).</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#codecommit","title":"CodeCommit","text":"<p>An AWS Github alternative for storing code in a repository using Git.</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#codebuild","title":"CodeBuild","text":"<p>Code building service which helps compile source code, run tests and produces packages ready for deployment. Pay-as-you-go pricing and fully managed serverless.</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#codepipeline","title":"CodePipeline","text":"<p>Helps orchestrate different stepts to have the code automatically pushed to production. It's compatible with the Code* Services (CodeCommit, CodeBuild, CodeDeploy, CloudFormation and ElastiBeanstalk) and with other 3<sup>rd</sup>-party services (e.g.: Github).</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#codeartifact","title":"CodeArtifact","text":"<p>Its an artifact management system by AWS allowing for dependencies (npm, gradle, maven, yarn, twine, etc.).</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#codestar","title":"CodeStar","text":"<p>An unified UI services to manage software developement activites in one place and allow quick-way start for setup of all Code* services.</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#cloud9","title":"Cloud9","text":"<p>A cloud-based IDE offered by AWS with real-time code collaboartion feature.</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#ssm-systems-manager","title":"SSM (Systems Manager)","text":"<p>A hybrid aws services which helps you manage EC2 and On-premises instance through it. It need to install SSM agent on the machine and will allow you to run commands safely through it (no ssh access, bastion hosts or port 22 needed for access).</p>"},{"location":"cloud/aws/services/007-aws-infrastructure-management/#opswork","title":"OpsWork","text":"<p>It's a servrices which allow you to manage Chef &amp; Puppet infrastructure services on EC2 and On-premises VM (as an alternative to AWS SSM).</p>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/","title":"AWS Global Infrastructure","text":""},{"location":"cloud/aws/services/008-aws-global-infrastructure/#overview","title":"Overview","text":"<p>AWS provides a global infrastructure to deliver cloud services with high availability, scalability, and reliability. The infrastructure is designed to support workloads worldwide and meet compliance requirements.</p>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#key-components","title":"Key Components","text":""},{"location":"cloud/aws/services/008-aws-global-infrastructure/#regions","title":"Regions","text":"<ul> <li>Geographically isolated areas</li> <li>Each region consists of multiple, isolated, and physically separate Availability Zones</li> <li>Customers choose regions to optimize latency, minimize costs, or address regulatory requirements</li> </ul>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#availability-zones-azs","title":"Availability Zones (AZs)","text":"<ul> <li>One or more discrete data centers with redundant power, networking, and connectivity</li> <li>Each AZ is physically separated by a meaningful distance from other AZs in the same region</li> <li>Designed for high availability and fault tolerance</li> </ul>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#edge-locations","title":"Edge Locations","text":"<ul> <li>Used by AWS CloudFront and other services to cache content closer to users</li> <li>Improve latency and performance for end users</li> </ul>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#local-zones","title":"Local Zones","text":"<ul> <li>Extend AWS infrastructure to locations closer to large population, industry, and IT centers</li> <li>Run latency-sensitive applications closer to end users</li> </ul>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#wavelength-zones","title":"Wavelength Zones","text":"<ul> <li>Bring AWS services to the edge of 5G networks</li> <li>Minimize latency to mobile and connected devices</li> </ul>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#networking","title":"Networking","text":""},{"location":"cloud/aws/services/008-aws-global-infrastructure/#global-accelerator","title":"Global Accelerator","text":"<ul> <li>Improves availability and performance of applications with global users</li> <li>Uses the AWS global network to route traffic to optimal endpoints</li> </ul>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#direct-connect","title":"Direct Connect","text":"<ul> <li>Dedicated network connection from on-premises to AWS</li> <li>Provides consistent, low-latency performance</li> </ul>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#security-compliance","title":"Security &amp; Compliance","text":"<ul> <li>Data centers are built to meet rigorous security standards</li> <li>Compliance certifications for global and industry-specific requirements</li> <li>Customers retain control and ownership of their data</li> </ul>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#best-practices","title":"Best Practices","text":"<ul> <li>Choose regions and AZs based on latency, compliance, and cost</li> <li>Use multiple AZs for high availability</li> <li>Leverage edge locations for content delivery</li> <li>Monitor and plan for service limits in each region</li> </ul>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#summary","title":"Summary","text":""},{"location":"cloud/aws/services/008-aws-global-infrastructure/#global-applications-in-aws-summary","title":"Global Applications in AWS - Summary","text":"<ul> <li>Global DNS: Route 53</li> <li>Great to route users to the closest deployment with least latency</li> <li>Great for disaster recovery strategies</li> <li>Global Content Delivery Network (CDN): CloudFront</li> <li>Replicate part of your application to AWS Edge Locations \u2013 decrease latency</li> <li>Cache common requests \u2013 improved user experience and decreased latency</li> <li>S3 Transfer Acceleration</li> <li>Accelerate global uploads &amp; downloads into Amazon S3</li> <li>AWS Global Accelerator</li> <li>Improve global application availability and performance using the AWS global network</li> <li>AWS Outposts</li> <li>Deploy Outposts Racks in your own Data Centers to extend AWS services</li> <li>AWS WaveLength</li> <li>Brings AWS services to the edge of the 5G networks</li> <li>Ultra-low latency applications</li> <li>AWS Local Zones</li> <li>Bring AWS resources (compute, database, storage, \u2026) closer to your users</li> <li>Good for latency-sensitive applications</li> </ul>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#global-application-in-aws","title":"Global Application in AWS","text":""},{"location":"cloud/aws/services/008-aws-global-infrastructure/#global-dns-route-53","title":"Global DNS: Route 53","text":"<p>A managed DNS (Domain Name System = a collection of rules and records which help clients understand how to reach a server through URLs) offered by AWS. There are several Routing Policies offered: - Simple Routing Policy (no health checks) - Weighted Routing Policy (route based on a weight on how much traffic should go somewhere) - Latency Routing Policy (based on user location) - Failover Routing Policy (with a healthcheck)</p>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#global-content-delivery-network-cdn-cloudfront","title":"Global Content Delivery Network (CDN): CloudFront","text":"<p>A content delivery network (CDN) offered by AWS which will offer an increased read performance with content cached at the edge. It has included a DDOS protection due to its integration with Shield and AWS Web Application Firewall. Used in corellation with S3 for distributing files (or static websites) and can be used as an ingress (for uploading files).</p>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#cloudfront-vs-s3-cross-region-replication","title":"Cloudfront vs S3 Cross Region Replication","text":"<p>Basically Cloudfront is great for static content with limited setup vs Cross Region replication which is great for dynamic content and which requires some setup.</p>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#s3-transfer-acceleration","title":"S3 Transfer Acceleration","text":"<p>A service to increase transfer speed of file upload by transfering to an AWS edge location which will later forward it to a S3 bucket in the target region.</p>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#aws-global-accelerator","title":"AWS Global Accelerator","text":"<p>It helps improve global application availability and performance using the AWS global network. Basically it uses aws internal network to optimize the route to your application: - 2 anycast IP are created for you application and traffic is sent through edge locations</p> <p>As a comparison against CloudFront the AWS Global Accelerator is just proxying packets and improves performance for TCP or UDP (good for HTTP use cases that requried static IP addresses or deterministic fast regional failover)</p>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#aws-outposts","title":"AWS Outposts","text":"<p>Its intended for the Hybrid Cloud business (cloud + on premise infrastructure) by providing \"server racks\" that offers the same AWS functionality as cloud-based services. This is done by having AWS setup and manage \"Outposts racks\" withing your on-premise infrastructure (you will be responsabile for physical security). It offer low-latency, local data processing, data residency and a fully managed service with wide variety of AWS services working on it (EC2, EBS, S3, EKS, ECS, RDS, EMR).</p>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#aws-wavelength","title":"AWS WaveLength","text":"<p>Wavelength Zones represent Infrastructure depyloment integrate with telecommunication providers datacenter at the edge of the 5G networks. Used for ultra-low latency application through 5G networks (traffic doesn't leave Communication Service Provider's (CSP) network).</p>"},{"location":"cloud/aws/services/008-aws-global-infrastructure/#aws-local-zones","title":"AWS Local Zones","text":"<p>Placecs AWS compute, storage, databse and other selected AWS services closer to end users to run latency-sensistive application. Basically extends your VPC to more locations and is compatible with EC2, RDS, ECS, EBS, ElastiCache, etc.</p>"},{"location":"cloud/aws/services/009-aws-cloud-integration/","title":"AWS Cloud Integration","text":""},{"location":"cloud/aws/services/009-aws-cloud-integration/#overview","title":"Overview","text":"<p>AWS provides a variety of services and tools to integrate applications, data, and workflows across cloud and on-premises environments. These services enable seamless communication, data transfer, and event-driven architectures.</p>"},{"location":"cloud/aws/services/009-aws-cloud-integration/#messaging-queuing","title":"Messaging &amp; Queuing","text":""},{"location":"cloud/aws/services/009-aws-cloud-integration/#amazon-sqs-simple-queue-service","title":"Amazon SQS (Simple Queue Service)","text":"<ul> <li>Fully managed message queuing service</li> <li>Decouples and scales microservices, distributed systems, and serverless applications</li> <li>Supports standard and FIFO queues</li> </ul>"},{"location":"cloud/aws/services/009-aws-cloud-integration/#amazon-sns-simple-notification-service","title":"Amazon SNS (Simple Notification Service)","text":"<ul> <li>Fully managed pub/sub messaging service</li> <li>Supports application-to-application and application-to-person notifications</li> <li>Integrates with Lambda, SQS, HTTP/S endpoints, email, SMS, and mobile push</li> </ul>"},{"location":"cloud/aws/services/009-aws-cloud-integration/#amazon-mq","title":"Amazon MQ","text":"<ul> <li>Managed message broker service for Apache ActiveMQ and RabbitMQ</li> <li>Supports industry-standard APIs and protocols</li> </ul>"},{"location":"cloud/aws/services/009-aws-cloud-integration/#event-driven-integration","title":"Event-Driven Integration","text":""},{"location":"cloud/aws/services/009-aws-cloud-integration/#amazon-eventbridge-formerly-cloudwatch-events","title":"Amazon EventBridge (formerly CloudWatch Events)","text":"<ul> <li>Serverless event bus for application integration</li> <li>Ingests, filters, and routes events from AWS services, SaaS apps, and custom sources</li> <li>Enables event-driven architectures</li> </ul>"},{"location":"cloud/aws/services/009-aws-cloud-integration/#data-integration","title":"Data Integration","text":""},{"location":"cloud/aws/services/009-aws-cloud-integration/#aws-datasync","title":"AWS DataSync","text":"<ul> <li>Automates and accelerates data transfer between on-premises storage and AWS</li> <li>Supports NFS, SMB, Amazon S3, Amazon EFS, and Amazon FSx</li> </ul>"},{"location":"cloud/aws/services/009-aws-cloud-integration/#aws-glue","title":"AWS Glue","text":"<ul> <li>Serverless data integration service</li> <li>Prepares and transforms data for analytics and machine learning</li> <li>Supports ETL (extract, transform, load) workflows</li> </ul>"},{"location":"cloud/aws/services/009-aws-cloud-integration/#aws-transfer-family","title":"AWS Transfer Family","text":"<ul> <li>Managed file transfer service for SFTP, FTPS, and FTP</li> <li>Integrates with Amazon S3 and EFS</li> </ul>"},{"location":"cloud/aws/services/009-aws-cloud-integration/#api-integration","title":"API Integration","text":""},{"location":"cloud/aws/services/009-aws-cloud-integration/#amazon-api-gateway","title":"Amazon API Gateway","text":"<ul> <li>Fully managed service for creating, publishing, maintaining, monitoring, and securing APIs</li> <li>Supports RESTful and WebSocket APIs</li> <li>Integrates with Lambda, EC2, and other AWS services</li> </ul>"},{"location":"cloud/aws/services/009-aws-cloud-integration/#hybrid-integration","title":"Hybrid Integration","text":""},{"location":"cloud/aws/services/009-aws-cloud-integration/#aws-direct-connect","title":"AWS Direct Connect","text":"<ul> <li>Dedicated network connection from on-premises to AWS</li> <li>Provides consistent, low-latency performance</li> </ul>"},{"location":"cloud/aws/services/009-aws-cloud-integration/#aws-vpn","title":"AWS VPN","text":"<ul> <li>Securely connects on-premises networks to AWS VPCs</li> <li>Supports site-to-site and client VPN connections</li> </ul>"},{"location":"cloud/aws/services/009-aws-cloud-integration/#best-practices","title":"Best Practices","text":"<ul> <li>Use managed services for scalability and reliability</li> <li>Decouple components with messaging and event-driven patterns</li> <li>Secure integrations with IAM, encryption, and network controls</li> <li>Monitor and audit integration points</li> </ul>"},{"location":"cloud/aws/services/010-aws-cloud-monitoring/","title":"AWS Cloud Monitoring","text":""},{"location":"cloud/aws/services/010-aws-cloud-monitoring/#overview","title":"Overview","text":"<p>AWS provides a comprehensive set of monitoring and observability services to help you track the health, performance, and security of your cloud resources and applications.</p>"},{"location":"cloud/aws/services/010-aws-cloud-monitoring/#monitoring-services","title":"Monitoring Services","text":""},{"location":"cloud/aws/services/010-aws-cloud-monitoring/#amazon-cloudwatch","title":"Amazon CloudWatch","text":"<ul> <li>Collects and tracks metrics, logs, and events</li> <li>Set alarms and automate actions</li> <li>Visualize data with dashboards</li> <li>Integrates with most AWS services</li> </ul>"},{"location":"cloud/aws/services/010-aws-cloud-monitoring/#aws-cloudtrail","title":"AWS CloudTrail","text":"<ul> <li>Records AWS API calls for your account</li> <li>Provides event history for auditing and compliance</li> <li>Detects unusual activity in your AWS account</li> </ul>"},{"location":"cloud/aws/services/010-aws-cloud-monitoring/#aws-config","title":"AWS Config","text":"<ul> <li>Tracks resource configurations and changes</li> <li>Enables compliance auditing and security analysis</li> <li>Provides configuration history and snapshots</li> </ul>"},{"location":"cloud/aws/services/010-aws-cloud-monitoring/#aws-x-ray","title":"AWS X-Ray","text":"<ul> <li>Distributed tracing for applications</li> <li>Analyzes and debugs production and distributed applications</li> <li>Visualizes service maps and traces</li> </ul>"},{"location":"cloud/aws/services/010-aws-cloud-monitoring/#aws-trusted-advisor","title":"AWS Trusted Advisor","text":"<ul> <li>Provides real-time guidance to help provision resources following AWS best practices</li> <li>Checks for cost optimization, performance, security, fault tolerance, and service limits</li> </ul>"},{"location":"cloud/aws/services/010-aws-cloud-monitoring/#logging-auditing","title":"Logging &amp; Auditing","text":"<ul> <li>Enable logging for all AWS services where possible</li> <li>Store logs securely in Amazon S3 or CloudWatch Logs</li> <li>Use CloudTrail for API activity auditing</li> <li>Set up log retention and archival policies</li> </ul>"},{"location":"cloud/aws/services/010-aws-cloud-monitoring/#alarms-notifications","title":"Alarms &amp; Notifications","text":"<ul> <li>Use CloudWatch Alarms to monitor metrics and trigger actions</li> <li>Integrate with SNS for notifications</li> <li>Automate remediation with Lambda or Systems Manager Automation</li> </ul>"},{"location":"cloud/aws/services/010-aws-cloud-monitoring/#best-practices","title":"Best Practices","text":"<ul> <li>Centralize monitoring and logging</li> <li>Set up alerts for critical metrics and events</li> <li>Regularly review logs and audit trails</li> <li>Use dashboards for real-time visibility</li> <li>Automate responses to common issues</li> </ul>"},{"location":"cloud/aws/services/011-aws-vpc/","title":"Amazon VPC (Virtual Private Cloud)","text":""},{"location":"cloud/aws/services/011-aws-vpc/#overview","title":"Overview","text":"<p>Amazon VPC lets you provision a logically isolated section of the AWS Cloud where you can launch AWS resources in a virtual network that you define. You have complete control over your virtual networking environment.</p>"},{"location":"cloud/aws/services/011-aws-vpc/#key-concepts","title":"Key Concepts","text":""},{"location":"cloud/aws/services/011-aws-vpc/#vpc","title":"VPC","text":"<ul> <li>A virtual network dedicated to your AWS account</li> <li>Spans a single region</li> <li>Can have multiple subnets (each in a single AZ)</li> </ul>"},{"location":"cloud/aws/services/011-aws-vpc/#subnets","title":"Subnets","text":"<ul> <li>Subdivide your VPC's IP address range</li> <li>Public subnets: direct access to the internet</li> <li>Private subnets: no direct internet access</li> </ul>"},{"location":"cloud/aws/services/011-aws-vpc/#route-tables","title":"Route Tables","text":"<ul> <li>Control traffic routing within your VPC</li> <li>Each subnet must be associated with a route table</li> </ul>"},{"location":"cloud/aws/services/011-aws-vpc/#internet-gateway-igw","title":"Internet Gateway (IGW)","text":"<ul> <li>Allows communication between instances in your VPC and the internet</li> <li>Attach one IGW per VPC</li> </ul>"},{"location":"cloud/aws/services/011-aws-vpc/#nat-gateway-nat-instance","title":"NAT Gateway / NAT Instance","text":"<ul> <li>Allow instances in a private subnet to connect to the internet, but prevent the internet from initiating connections with those instances</li> </ul>"},{"location":"cloud/aws/services/011-aws-vpc/#vpc-peering","title":"VPC Peering","text":"<ul> <li>Connects two VPCs privately using AWS network</li> <li>Can be within or across regions</li> <li>No transitive peering</li> </ul>"},{"location":"cloud/aws/services/011-aws-vpc/#vpc-endpoints","title":"VPC Endpoints","text":"<ul> <li>Privately connect your VPC to supported AWS services and VPC endpoint services</li> <li>Two types: Interface endpoints (powered by PrivateLink) and Gateway endpoints (for S3 and DynamoDB)</li> </ul>"},{"location":"cloud/aws/services/011-aws-vpc/#security-groups-nacls","title":"Security Groups &amp; NACLs","text":"<ul> <li>Security Groups: virtual firewalls for instances (stateful)</li> <li>Network ACLs: control traffic at the subnet level (stateless)</li> </ul>"},{"location":"cloud/aws/services/011-aws-vpc/#best-practices","title":"Best Practices","text":"<ul> <li>Use multiple AZs for high availability</li> <li>Separate public and private subnets</li> <li>Use security groups and NACLs for layered security</li> <li>Monitor VPC flow logs for network traffic analysis</li> <li>Use VPC endpoints for private connectivity to AWS services</li> </ul>"},{"location":"cloud/aws/services/011-aws-vpc/#vpc-flow-logs","title":"VPC Flow Logs","text":"<p>Used to capture information about IP traffic going into your interfaces and which can go into S3 / CloudWatch Logs: - VPC Flow Logs - Subnet Flow Logs - Elastic Network Interface Flow Logs</p>"},{"location":"cloud/aws/services/011-aws-vpc/#privatelink","title":"PrivateLink","text":"<p>Most secure * scalable way to expose a service to 1000s of VPCs without requiring VPC peering, internet gateway, NAT, route tables. It requires a network load balance (Service VPC) and ENI (Customer VPC)</p>"},{"location":"cloud/aws/services/011-aws-vpc/#site-to-site-vpn-direct-connect","title":"Site to Site VPN &amp; Direct Connect","text":"<p>Site to Site VPN = Connects on-premises VPN to AWS with the connection being automatically encrypted going over the public internet - On-premises must use a Customer Gateway (CGW) - AWS must use a Virtual Private Gateway (VGW)</p> <p>Direct Connect = Establish an actual physical connection between on-premises and AWS, private and secure going over a private network</p>"},{"location":"cloud/aws/services/011-aws-vpc/#aws-client-vpn","title":"AWS Client VPN","text":"<p>Connect from your computer using OpenVPN to your private network in AWS and on-premises, allowing you to connect to your EC2 instances over a private IP with the traffic going over the public internet.</p>"},{"location":"cloud/aws/services/011-aws-vpc/#transit-gateway","title":"Transit Gateway","text":"<p>Used for having transitive peering between thousands of VPC and on-premises, hub-and-spoke (star) connection by providing a single gateway.</p>"},{"location":"cloud/aws/services/012-aws-security/","title":"AWS Security","text":""},{"location":"cloud/aws/services/012-aws-security/#overview","title":"Overview","text":"<p>AWS provides a comprehensive set of security services and features to help you protect your data, accounts, and workloads from unauthorized access and threats.</p>"},{"location":"cloud/aws/services/012-aws-security/#shared-responsibility-model","title":"Shared Responsibility Model","text":"<ul> <li>AWS is responsible for security of the cloud (hardware, software, networking, and facilities)</li> <li>You are responsible for security in the cloud (data, identity, applications, OS, network &amp; firewall configuration)</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#identity-access-management","title":"Identity &amp; Access Management","text":""},{"location":"cloud/aws/services/012-aws-security/#aws-iam","title":"AWS IAM","text":"<ul> <li>Manage users, groups, roles, and permissions</li> <li>Enforce least privilege access</li> <li>Use IAM policies for fine-grained control</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#aws-organizations-scps","title":"AWS Organizations &amp; SCPs","text":"<ul> <li>Manage multiple AWS accounts</li> <li>Apply Service Control Policies (SCPs) for account-level restrictions</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#aws-sso-single-sign-on","title":"AWS SSO (Single Sign-On)","text":"<ul> <li>Centralized access to multiple AWS accounts and business applications</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#data-protection","title":"Data Protection","text":""},{"location":"cloud/aws/services/012-aws-security/#encryption","title":"Encryption","text":"<ul> <li>Encrypt data at rest (S3, EBS, RDS, DynamoDB, etc.)</li> <li>Encrypt data in transit (SSL/TLS)</li> <li>Use AWS KMS (Key Management Service) for key management</li> <li>Use CloudHSM for dedicated hardware security modules</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#backup-recovery","title":"Backup &amp; Recovery","text":"<ul> <li>Use AWS Backup for centralized backup management</li> <li>Enable automated backups for databases and storage</li> <li>Implement disaster recovery strategies</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#network-security","title":"Network Security","text":""},{"location":"cloud/aws/services/012-aws-security/#security-groups-nacls","title":"Security Groups &amp; NACLs","text":"<ul> <li>Security Groups: virtual firewalls for instances (stateful)</li> <li>Network ACLs: control traffic at the subnet level (stateless)</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#vpc-endpoints-privatelink","title":"VPC Endpoints &amp; PrivateLink","text":"<ul> <li>Private connectivity to AWS services</li> <li>Reduce exposure to the public internet</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#ddos-protection","title":"DDoS Protection","text":"<ul> <li>AWS Shield: managed DDoS protection</li> <li>AWS WAF: web application firewall for HTTP/HTTPS</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#monitoring-compliance","title":"Monitoring &amp; Compliance","text":""},{"location":"cloud/aws/services/012-aws-security/#aws-cloudtrail","title":"AWS CloudTrail","text":"<ul> <li>Records API calls for auditing</li> <li>Detects unusual activity</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#aws-config","title":"AWS Config","text":"<ul> <li>Tracks resource configurations and changes</li> <li>Enables compliance auditing</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#aws-security-hub","title":"AWS Security Hub","text":"<ul> <li>Centralized security and compliance management</li> <li>Aggregates findings from multiple AWS services</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#amazon-guardduty","title":"Amazon GuardDuty","text":"<ul> <li>Threat detection and continuous security monitoring</li> <li>Uses machine learning, anomaly detection, and integrated threat intelligence</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#aws-inspector","title":"AWS Inspector","text":"<ul> <li>Automated security assessment service</li> <li>Helps improve security and compliance of applications</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#best-practices","title":"Best Practices","text":"<ul> <li>Enable MFA for all users</li> <li>Use IAM roles instead of root credentials</li> <li>Regularly rotate credentials and keys</li> <li>Encrypt sensitive data at rest and in transit</li> <li>Monitor and audit account activity</li> <li>Apply least privilege principle</li> <li>Use security automation and alerts</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#summary","title":"Summary","text":"<ul> <li>Shared Responsibility on AWS</li> <li>Shield: Automatic DDoS Protection + 24/7 support for advanced</li> <li>WAF: Firewall to filter incoming requests based on rules</li> <li>KMS: Encryption keys managed by AWS</li> <li>CloudHSM: Hardware encryption, we manage encryption keys</li> <li>AWS Certificate Manager: provision, manage, and deploy SSL/TLS Certificates</li> <li>Artifact: Get access to compliance reports such as PCI, ISO, etc\u2026</li> <li>GuardDuty: Find malicious behavior with VPC, DNS &amp; CloudTrail Logs</li> <li>Inspector: For EC2 only, install agent and find vulnerabilities</li> <li>Config: Track config changes and compliance against rules</li> <li>Macie: Find sensitive data (ex: PII data) in Amazon S3 buckets</li> <li>CloudTrail: Track API calls made by users within account</li> <li>AWS Security Hub: gather security findings from multiple AWS accounts</li> <li>Amazon Detective: find the root cause of security issues or suspicious activities</li> <li>AWS Abuse: Report AWS resources used for abusive or illegal purposes</li> <li>Root user privileges:</li> <li>Change account settings</li> <li>Close your AWS account</li> <li>Change or cancel your AWS Support plan</li> <li>Register as a seller in the Reserved Instance Marketplace</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#ddos-protection-on-aws","title":"DDOS Protection on AWS","text":"<ul> <li>AWS Shield Standard = protects against DDOS attack for your website and applications for all customers at no additonal costs</li> <li>AWS Shield Advanced = 24/7 premium DDOS protection</li> <li>AWS WAF = filter specific request based on rules</li> <li>CloudFront and Route53 = availability protection using global edge network, and combined with AWS Shield provides attack mitigation at the edge</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#aws-shield","title":"AWS Shield","text":"<p>Represent a protection from various attack such as SYN/UDP Floods, Reflection Attacks and other layer \u00be attacks. It is of 2 types: - Standard = available for all customers for free - Advance = optional ddos mitigation service (3000$ per month per organization), protect against more sophisticated attack on various services, 24/7 response team, protect against higher fees during usage spike due to DDOS</p>"},{"location":"cloud/aws/services/012-aws-security/#aws-waf-web-application-firewall","title":"AWS WAF (Web Application Firewall)","text":"<p>Protects your web application from common web exploits (layer 7 (HTTP)) being deployed to Application Load Balancer, API Gateway, CloudFront. This is done by defining Web ACL (Web Access Control List): - Rules can include IP addresses, HTTP Headers, HTTP body or URI strings - Protects from common attacks: SQL injection and Cross-Site Scripting - Size constraints, geo-match (block countries) - Rate-based rules (to count occurences of events) - DDOS protection</p>"},{"location":"cloud/aws/services/012-aws-security/#pentration-testing","title":"Pentration Testing","text":"<p>Note: AWS customer customer can carry out penetration testing without prior approval for 8 services: - EC2, NAT Gateways and ELB - RDS - CloudFront - Aurora - API Gateways - Lambda and Lambda Edge - Lightsail resources - Elastic Beanstalk Environments</p> <p>But there are prohibited activites: - DNS zone walking via Amazon Route 53 Hosted Zones - Denial of Service - Port flooding, protocol flooding, request flooding</p>"},{"location":"cloud/aws/services/012-aws-security/#key-management-service-kms","title":"Key Management Service (KMS)","text":"<p>A service which manages encryption keys.</p> <p>Opt-In Services: - EBS volumes: encrypt volumes - S3 Buckets: server-side encryption of objects - Redshift Database: encrypt data - RDS database: encrypt data - EFS drives: encrypt data</p> <p>Automatically Enabled Services: - CloudTrail Logs - S3 Glacier - Storage Gateway</p>"},{"location":"cloud/aws/services/012-aws-security/#cloudhsm","title":"CloudHSM","text":"<p>Provision encryption hardware through a dedicated HSM (Hardware Security Module) allowing you to manage your own encryption keys entirely.</p>"},{"location":"cloud/aws/services/012-aws-security/#customer-master-keys-cmk","title":"Customer Master Keys (CMK)","text":"<ul> <li>Customer Managed CMK</li> <li>Create, manage and used by the customer (can enable or disable)</li> <li>Possibility of rotation policy</li> <li>Possibility of bring-you-own-key</li> <li>AWS managed CMK</li> <li>Created, managed and used on the customers behalf by AWS</li> <li>Used by AWS services (s3,ebs,redshift)</li> <li>AWS owned CMK</li> <li>Collection of CMK that an AWS service owns and manages to use in multiple accounts</li> <li>Used to protect resources in you account</li> <li>You can't view the keys</li> <li>CloudHSM Keys (custom keystore)</li> <li>Key generated from you own CloudHSM hardware device</li> <li>Cryptographic operation are perfomed within the CloudHSM cluster</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#aws-certificate-manager-acm","title":"AWS Certificate Manager (ACM)","text":"<p>Let's you provision, manage and deploy SSL/TLS certificates (public and private) in order to provide HTTPS with automatic TLS certificate renewal on ELB, CloudFront, API gateway.</p>"},{"location":"cloud/aws/services/012-aws-security/#aws-secrets-manager","title":"AWS Secrets Manager","text":"<p>Meant for storing secrets with capability to force rotation of secrets (which are encrypted using KMS).</p>"},{"location":"cloud/aws/services/012-aws-security/#aws-artifact","title":"AWS Artifact","text":"<p>Not a service, but a portal that provides customer with on-demand access to AWS compliance documentation and AWS agreements</p> <ul> <li>Artifacts Reports: AWS ISO certifications, Payment Card Industry (PCI), and System and Organization Control (SOC) reports</li> <li>Artifact Agreements: Business Associate Addendum (BAA) or the Health Insurance Portability and Accountability Act (HIPAA)</li> </ul>"},{"location":"cloud/aws/services/012-aws-security/#guardduty","title":"GuardDuty","text":"<p>Inteligent Threat Discovery to protect your AWS account that uses ML algorithms, anomaly detection and 3<sup>rd</sup> party data. Based on input data (cloudtrail event logs, vpc flow logs, dns logs) you can setup Event Bridge rules to be notified in case of findings</p>"},{"location":"cloud/aws/services/012-aws-security/#amazon-inspector","title":"Amazon Inspector","text":"<p>Automated Security Assessments for: - EC2 Instances: leverages SSM to analyze uninteded network accessibility and the running OS agains known vulnerabilities - Container Images pushed to ECR - Lambda Functions: identifies software vulnerability (code + package dependencies)</p> <p>Reporting &amp; Integration with AWS Security Gub and can send finding to Event Bridge.</p>"},{"location":"cloud/aws/services/012-aws-security/#aws-config_1","title":"AWS Config","text":"<p>Helps with auditing and recording compliance of your AWS resources by recording configuration and changes over time with the possibility of receiving alerts for any changes.</p> <p>Questions that can be solved by AWS Config: - Is there unrestricted SSH access to my security groups? - Do my buckets have any public access? - How has my ALB configuration changed over time?</p>"},{"location":"cloud/aws/services/012-aws-security/#aws-macie","title":"AWS Macie","text":"<p>Fully managed data security and privacy service that uses machine learning and pattern matching to discover and protect sensitive data in AWS (such as PII).</p>"},{"location":"cloud/aws/services/012-aws-security/#security-hub","title":"Security Hub","text":"<p>Central Security Tool to manage security across several AWS accounts and automate security checks. It has the following: - Integrated dashboards showing current security and compliance status - Automatically aggregates alerts in predifned or personal findings format from various services (GuardDuty, Inspector, Macie, IAM access analyzer) - Must be enabled in the AWS Config Service</p>"},{"location":"cloud/aws/services/012-aws-security/#amazon-detective","title":"Amazon Detective","text":"<p>Analyzes, investigates and quickly identifies the root cause of security issues or suspicious activites (using ML and graphs) by automatically collecting and processing events from VPC FLow Logs, CloudTrail, GuardDuty and creating a unified view. Used when you need to quickly identify a security risk.</p>"},{"location":"cloud/aws/services/012-aws-security/#aws-abuse","title":"AWS Abuse","text":"<p>USed to report suspected AWS resources for abusive or illegal purposes (spam, port scanning, DoS or DDos, intrusion attempts, hosting objectional content, malware)</p>"},{"location":"cloud/aws/services/013-aws-machine-learning/","title":"Machine Learning","text":"<p>AWS provides different services for various uses cases using machine learning:</p> <ol> <li>Rekognition does image and video analysis to identify, label, compare and content moderate elements.</li> <li>Transcribe does speech to text translation, with the addition of hiding Personal Identifable Information (PII).</li> <li>Polly does text to speech translation with options to configure languages and speakers.</li> <li>Translate performs machine translation between different languages.</li> <li>Amazon Lex allows to build chatbots or call center bots with functionality including Automatic Speech Recognition (ASR) and Natural Language Understanding to recognize intent.</li> <li>Amazon Connect allows to create a cloud-based contact center to receiver, create contact flows. Is integrable with other Customer Relationship Management (CRM) systems or AWS.</li> <li>Comprehend used for NLP to find insights and relationships in text (language of the text, sentiment analysis, topic organization of files, key phrases, places, people, etc.), fully-managed and serverless.</li> <li>SageMaker fully-managed service for developers/data scientist to build ML models.</li> <li>Forecast uses ML to deliver highly accurate forecasts based on provided historical time-series data. Use cases: Resource Planning, Financial Planning, etc.</li> <li>Kendra fully managed document search service using ML, extract answers from within provided documents, learns from user interaction/feedback to promote prefered results.</li> <li>Personalize fully managed service to provide real-time personalized recommendations using ML. Same techonlogy used at www.amazon.com</li> <li>Textract used to extract text, handwriting and data from any scanned document using ML.</li> <li>Macie a data security service that uses machine learning (ML) and pattern matching to discover and help protect your sensitive data</li> </ol>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/","title":"AWS Pricing and Billing","text":""},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#overview","title":"Overview","text":"<p>AWS offers a flexible, pay-as-you-go pricing model for its cloud services. Understanding pricing, billing, and cost management tools is essential for optimizing your AWS usage and controlling costs.</p>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#pricing-models","title":"Pricing Models","text":""},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#on-demand","title":"On-Demand","text":"<ul> <li>Pay for compute or storage by the hour or second with no long-term commitments</li> <li>Ideal for short-term, unpredictable workloads</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#reserved","title":"Reserved","text":"<ul> <li>Reserve capacity for 1 or 3 years</li> <li>Significant discount compared to on-demand pricing</li> <li>Best for steady-state or predictable usage</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#savings-plans","title":"Savings Plans","text":"<ul> <li>Flexible pricing model for compute usage</li> <li>Commit to a consistent amount of usage (measured in $/hour) for 1 or 3 years</li> <li>Applies to EC2, Fargate, and Lambda</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#spot-instances","title":"Spot Instances","text":"<ul> <li>Purchase unused EC2 capacity at a discount</li> <li>Prices fluctuate based on supply and demand</li> <li>Suitable for fault-tolerant, flexible applications</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#free-tier","title":"Free Tier","text":"<ul> <li>Limited free usage of certain AWS services for 12 months after sign-up</li> <li>Always Free offers for select services</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#cost-management-tools","title":"Cost Management Tools","text":""},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#aws-cost-explorer","title":"AWS Cost Explorer","text":"<ul> <li>Visualize, understand, and manage AWS costs and usage</li> <li>Create custom reports and forecasts</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#aws-budgets","title":"AWS Budgets","text":"<ul> <li>Set custom cost and usage budgets</li> <li>Receive alerts when thresholds are exceeded</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#aws-pricing-calculator","title":"AWS Pricing Calculator","text":"<ul> <li>Estimate monthly costs for AWS services</li> <li>Model solutions before deployment</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#consolidated-billing","title":"Consolidated Billing","text":"<ul> <li>Combine usage across multiple AWS accounts</li> <li>Take advantage of volume discounts</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#billing-and-invoicing","title":"Billing and Invoicing","text":"<ul> <li>Monthly billing cycles</li> <li>Detailed billing reports available in the AWS Billing Console</li> <li>Payment methods: credit card, ACH, wire transfer</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#best-practices","title":"Best Practices","text":"<ul> <li>Monitor usage and set up budgets</li> <li>Use tagging for cost allocation</li> <li>Review and optimize reserved and spot instance usage</li> <li>Take advantage of the free tier and volume discounts</li> <li>Regularly review billing and usage reports</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#pricing-models-in-the-cloud","title":"Pricing Models in the Cloud","text":"<ul> <li>Pay as you go: pay for what you use, remain agile, responsive, meet scale demands.</li> <li>Save when you reserve: minimize risks, predictably manage budgets, comply with long-term requirements.</li> <li>Reservations are available for EC2 Reserverd Instance, DynamoDB Reserved Capacity, ElastiCache Reserverd Nodes, etc.</li> <li>Pay less by using more: volume-based discounts.</li> <li>Pay less as AWS grows: cost-reductions as aws data-centers are created, they are known to do cost-reduction yearly.</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#free-services-free-tier-in-aws","title":"Free services &amp; Free tier in AWS","text":"<ul> <li>IAM</li> <li>VPC</li> <li>Consolidated Billing</li> <li>Elastic Beanstalk         ---- you pay for the resources created</li> <li>CloudFormation            ---- you pay for the resources created</li> <li>Auto Scaling Groups       ---- you pay for the resources created</li> <li>Free Tier</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#credits","title":"Credits","text":"<p>Credits are applied in the following order: 1. Soonest expiring 2. Least number of applicable products 3.Oldest credit</p>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#pricing-per-services-networking","title":"Pricing per services &amp; networking","text":""},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#ec2","title":"EC2","text":"<ul> <li>Charged for what you use</li> <li>Number of instances</li> <li>Instance configuration (phyical capacity, region, os and sotftware, instance type, instance size)</li> <li>ELB running time and amount of data processed</li> <li>Detailed monitoring (enable if you want cloudwatch metrics every minute, but it costs)</li> </ul> <p>Pricing Models: - On-demand instances:   - Minimum of 60 second, you pay per second (Linux/Windows) or per hour - Reserverd instances   - Up to 75% discount compared to On-demand on hourly rate   - 1-3 year commitmennt   - All upfront, partial upfront, no upfront payment (less discount later you pay) - Spot Instances   - Up to 90% discount compared to On-demand on hourly rate   - Bid for unused capacity (you can lose if someone wants to outbid you for the spot instances) - Dedicated Host   - On-demand   - Reservation for 1-3 years commitment - Saving Plans as an alternative to save on sustained usage</p>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#lambda","title":"Lambda","text":"<ul> <li>pay per call</li> <li>pay per duration</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#ecs","title":"ECS","text":"<ul> <li>EC2 Lanuch Type Model: no additional fees, you pay for the aws resources stored and created in your application</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#fargate","title":"Fargate","text":"<ul> <li>Fargate Launch Type Model: Pay for vCPU and memory resources allocated to your applications in your containers</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#s3","title":"S3","text":"<ul> <li>Storage Class: S3 Standard, S3 Infrequent Access, S3 One-Zona IA, S3 Intelligent Tiering, S3 Glacier and S3 Glacier Deep Archive</li> <li>Number and size of objects (price can be tiered based on volume)</li> <li>Number and type of requests</li> <li>Data transfer out of the S3 region</li> <li>S3 Transfer Acceleration</li> <li>Lifecycle transitinos</li> </ul> <p>Note: Similar Service Elastic File System (EFS) (pay per use, has infrequent access &amp; lifecycle rules)</p>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#ebs","title":"EBS","text":"<ul> <li>Volume Type (based on performance)</li> <li>Storage volume in GB per month provisioned</li> <li>Input/Output operations per second (IOPS):</li> <li>General Purpose SSD (included in the price)</li> <li>Provisioned IOPS SSD - pay per provisioned amount in IOPS</li> <li>Magnetic: Number of requests</li> <li>Snapshots (Added data cost per GB per month)</li> <li>Data Transfer (outbound data transfer are tiered for volume discounts, inbound is free)</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#rds","title":"RDS","text":"<ul> <li>Per hour billing</li> <li>Database characteristics:</li> <li>Engine</li> <li>Size</li> <li>Memory Class</li> <li>Purchase Type</li> <li>On-demand</li> <li>Reserved instance (1 or 3 years) with required up-front</li> <li>Backup Storage (Usually there is no additional charge for backup storage up to 100% of your total database storage for a region)</li> <li>Additiona Storage (per GB per month)</li> <li>Number of I/O request per month</li> <li>Deplyoment Type (Single AZ/Multiple AZ)</li> <li>Data Transfer (outbound date transfer are tiered for volume discounts, inbound is free)</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#cloudfront","title":"Cloudfront","text":"<ul> <li>Pricing different across geographic regions</li> <li>Aggregated for each edge location, then applied to your bill </li> <li>Data Transfer Out (volume discount)</li> <li>Number of HTTP(s) requests</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#networking-costs-in-aws-per-gb","title":"Networking Costs in AWS per GB","text":"<ul> <li>Inbound trafic from outside aws is free</li> <li>Trafic between services in the same AZ are free</li> <li>Trafic between availability zones (using private IP) costs ($0.01)</li> <li>Trafic between availabity zones (using public ip/elastic ip) costs ($0.02)</li> <li>Trafic between regions costs ($0.02)</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#saving-plans","title":"Saving Plans","text":"<p>You have different type of plans where you commit a certain amount of dollars per hour for 1 or 3 years - EC2 Saving Plans (commit to usage of individual instance families in a region) - Compute Saving plans (for EC2, Fargate, Lambda), very flexible, it just requires a $ commitment, up to 66% reduction for a 1 or 3 years commitment - Machine Learning Saving Plans for services like SageMaker</p>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#costs-tools","title":"Costs Tools","text":""},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#services-for-cost-optimization","title":"Services for cost optimization","text":"<ul> <li>Compute Optimizer: reduce costs and improve performance by recommending optimal aws for your workloads using ML. Also helps you choose optimal configurations and right-size your workloads (over/under provisioned). Supports: EC2, ASG, EBS, Lambda</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#estimating-costs","title":"Estimating Costs","text":"<ul> <li>Pricing Calculator: estimate the cost for your solution architecture</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#tracking-costs","title":"Tracking Costs","text":"<ul> <li>Billing Dashboard: shows an overview of the costs incured</li> <li>also has a free tier dashboard to monitor free tier usage</li> <li>Cost Allocation Tags: allows to track costs on a detalied level. You also have Tag Editor to find and edit tags for your resources and group them in resources groups</li> <li>Cost and Usage Reports: a comprehensive &amp; granular set of aws costs and data available, including additonal metadata about services, pricing and reservations. Can be integrated and analysed using Athena, Redshift and QuickSight.</li> <li>Cost Explorer: visualize, understand and manage your aws costs and usage over time. Create custom reports to analyze costs and usage at various degree of granularity (monthly, hourly, resource-level). Moreover, you can forecast usage up to 12 months based on previous usage and helps you choose an optimal saving plans</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#monitoring-against-costs","title":"Monitoring against costs","text":"<ul> <li>Billing Alarms: you can create them with the use of the data from Cloud-Watch (region specific), it is used for actual costs not for projected costs.</li> <li>Budgets: create budget and send alarms when costs (or forecasts) exceed the budget</li> <li>3 types of budgest: Usage, Cost, Reservation</li> <li>for Reserverd Instances (RI) it can track utilization</li> <li>Supports up to 5 SNS (Simple Notification Service) notifications per budget</li> <li>Can filter by service, linked account, tag, purchase option, instance type, region, etc.</li> <li>Same options as Cost Explorer</li> <li>2 budgets are free, then they cost ($0.02/day/budget)</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#trusted-advisor","title":"Trusted Advisor","text":"<ul> <li>It comes out of the box (no need to install anything)</li> <li>It represent a tool which makes a high level aws account assesment and offer recommendations.</li> <li>Analyzes your aws accounts and provides recommendation on 5 categories (required by exam):</li> <li>Cost Optimization</li> <li>Performance</li> <li>Security</li> <li>Fault Tolerance</li> <li>Service Limits</li> <li>It offer some check based on support plans (required by exam)</li> <li>For Basic &amp; Developer Support Plan you have 7 Core Checks<ul> <li>S3 Bucket Permissions</li> <li>Security Groups - Specific Ports Unrestricted</li> <li>IAM Use</li> <li>MFA on Root Account</li> <li>EBS Public Snaphsots</li> <li>RDS Public Snapshots</li> <li>Service Limits</li> </ul> </li> <li>For Business &amp; Enterprise Support Plan you have Full Checks and you get extra:<ul> <li>Full Checks available on the 5 categories (Cost optimization, perforamnce, fault tolerance, security, service limits)</li> <li>Ability to set CloudWatch alarms when reaching limits</li> <li>Programatic Access using AWS Support API</li> </ul> </li> </ul> <p>## Support Plans Pricing for AWS </p> <p>(required by exam)</p> <ul> <li>Basic Support (free) and you get:</li> <li>Customer Service &amp; Communities - 24x7 access to customer service, documentation, whitepapers and support forums</li> <li>For Trusted Advisor we only get access to 7 core checks and guidance to provision your resources following best practices</li> <li>Personal Health Dashboard</li> <li>Developer Support</li> <li>get everything from the Basic Support Plan</li> <li>Business hours email access to Cloud Support Associates</li> <li>Unlimited cases/ 1 primary contact</li> <li>Response times based on case severity (general guidance &lt; 24 business hours, system impaired &lt; 12 business hours)</li> <li>Business Support</li> <li>intended to be used if you have production workloads</li> <li>Trusted Advisor: full set of checks + api access</li> <li>24x7 phone, email and chat access to Cloud Support Engineers</li> <li>Unlimited cases/ Unlimited contacts</li> <li>Access to Infrastructure Event Management for additional fee</li> <li>Response times based on case severity (general guidance &lt; 24 business hours, system impaired &lt; 12 business hours, production system impaired &lt; 4 hours, production system down &lt; 1 hour)</li> <li>Enterprise On-Ramp Support </li> <li>intended to be used if you have production or business crtical workloads</li> <li>All of Business Suppoort Plan features</li> <li>Access to a pool of technical account managers (TAM)</li> <li>Concierge Support Team (for billing and account best practices)</li> <li>Infrastucture Event Management, Well-Architected &amp; Operations Reviews</li> <li>Response times based on case severity (...same as Business Support, Business critical system down &lt; 30 minutes)</li> <li>Enterprise Support </li> <li>intended to be used if you have mission critical workloads</li> <li>All of Businsess Support Plan</li> <li>Access to a designated Technical Account Manager (TAM)</li> <li>...same things as on Enterprise On-Ramp</li> <li>Response times based on case severity (...same as Business Support, Business critical system down &lt; 15 minutes)</li> </ul>"},{"location":"cloud/aws/services/014-aws-pricing-and-billing/#exam-tips","title":"Exam Tips","text":"<ul> <li>It comes out of the box (no need to install anything)</li> <li>It represent a tool which makes a high level aws account assesment and offer recommendations.</li> <li>Analyzes your aws accounts and provides recommendation on 5 categories (required by exam):</li> <li>Cost Optimization</li> <li>Performance</li> <li>Security</li> <li>Fault Tolerance</li> <li>Service Limits</li> <li>It offer some check based on support plans (required by exam)</li> <li>For Basic &amp; Developer Support Plan you have 7 Core Checks<ul> <li>S3 Bucket Permissions</li> <li>Security Groups - Specific Ports Unrestricted</li> <li>IAM Use</li> <li>MFA on Root Account</li> <li>EBS Public Snaphsots</li> <li>RDS Public Snapshots</li> <li>Service Limits</li> </ul> </li> <li>For Business &amp; Enterprise Support Plan you have Full Checks and you get extra:<ul> <li>Full Checks available on the 5 categories (Cost optimization, perforamnce, fault tolerance, security, service limits)</li> <li>Programatic Access using AWS Support API</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/015-aws-cognito/","title":"AWS Cognito","text":"<p>Provides identity for your application users (web application, mobile application, etc.). </p> <p>Note: This is provided as the solution for not creating IAM users which should be used only by your organization/company and need to use AWS directly.</p>"},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/","title":"Architecting and Ecosystem","text":""},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/#guiding-principes","title":"Guiding Principes","text":"<ul> <li>Stop guessing your capacity needs</li> <li>Test systems at production scale</li> <li>Automate to make architectural experimentation easier</li> <li>Allow for evolutionary architectures (design based on changing requirements)</li> <li>Drive architecture using data</li> <li>Improve through game days (simulate application for flash sale days)</li> </ul>"},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/#aws-cloud-best-practices-design-principles","title":"AWS Cloud Best Practices - Design Principles","text":"<p>Scalability: vertical &amp; horizontal</p> <p>Disposable Resources: servers should be disposable &amp; easily configured</p> <p>Automation: Serverless, IaaS, Auto Scalling...</p> <p>Loose Coupling</p> <p>Services not Servers</p>"},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/#well-architected-framework-6-pillars","title":"Well Architected Framework 6 Pillars","text":"<p>Note: The'ye a synergy (not to balance or trade-offs)</p>"},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/#operational-excellence","title":"Operational Excellence","text":"<p>Includes ability to run and monitor systems to deliver business value and continually improve supporting processes and procedures. </p> <p>Design principles: - Perform operations as code: IaaS - Annotate documentation: automate creation of annotated documentation after each build - Make frequent, small, reversible changes - Refine operation procedures frequently - Anticipate failure - Learn from all operational failures</p> Prepare Operate Evolve Cloud Formation Cloud Formation Cloud Formation Config Config Code Build CloudTrail Code Commit CloudWatch CodeDeploy AWS X-Ray CodePipeline"},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/#security","title":"Security","text":"<p>Include the ability to protect information, systems and assets while delivering business value through risk assesments and mitigation strategies.</p> <p>Design principles: - Implement a strong identity foundation: centralize privilege management and reduce reliance on long-term credentials (least privilige principle) - Enable tracebility - Apply security at all layers - Automate security best practices - Protect data in transit and at rest - Keep people away from data - Prepare for security events - Shared responsability model</p>"},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/#reliability","title":"Reliability","text":"<p>Ability of a system to recover from infrastructure or service disruptions, dynamically acquire computing resources to meet demand and mitigate disruptions such misconfigurations or transient network issues.</p> <p>Design principles: - Test recovery procedures: simulate different failure to recreate scenarios - Automatically recover from failure: anticipate and remediate failure before they occur - Scale horizontally to increase aggregate system availability - Stop guessing capacity - Manage change in automation</p>"},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/#performance-efficiency","title":"Performance Efficiency","text":"<p>Includes the ability to use computing resources efficiently to meet system requirements and to maintain efficiency as demand and technologies changes.</p> <p>Design principles: - Democratize advanced technologies - Go global in minutes: easy deployment in multiple regions - Use serverless architectures - Experiment more often - Mechanical Sympathy: be aware of all AWS services</p>"},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/#cost-optimization","title":"Cost Optimization","text":"<p>Includes the ability to run systems to deliver business value at the lowest price point.</p> <p>Design principles: - Adopt a consumption mode: pay only for what you use - Measure overall efficiency: Use CloudWatch - Stop spending money on data center operations - Analyze and attribute expenditure - Use managed and appliaction level services to reduce cost of ownership</p>"},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/#sustainability","title":"Sustainability","text":"<p>Focuses on minimzing the environmental impacts of running cloud workloads</p> <p>Design principles: - Understand your impact - Establish sustainability goals - Maximize utilization - Anticipate and adopt new more efficient hardware and software offerings - Use managed services - Reduce downstream impact of you cloud workloads: reduce amount of energy or resources required to use you services</p>"},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/#aws-professional-services-partener-network","title":"AWS Professional Services &amp; Partener Network","text":"<p>APN = AWS Partener Network</p> <ul> <li> <p>APN Technology Parteners: provide hardware, connectivity and software</p> </li> <li> <p>APN Consulting Parteners: professional services firm to help build on AWS</p> </li> <li> <p>APN Training Parteners: find who can help you learn AWS</p> </li> </ul> <p>Programs</p> <ul> <li> <p>AWS Competency Program = AWS Competencies are granted to APN Parteners who have demostrated technical proficiency and proven customer success</p> </li> <li> <p>AWS Navigate Program = help parteners become better parteners</p> </li> </ul>"},{"location":"cloud/aws/services/016-aws-architecting-and-ecosystem/#other-ecosystem-services","title":"Other Ecosystem Services","text":"<ul> <li> <p>AWS Knowledge Cener = container most frequent &amp; common questions and requests</p> </li> <li> <p>AWS IQ = quickly find professional help for your AWS projects</p> </li> <li> <p>AWS re:Post: offering crowd-sourced expert-reviewed answers to your technical questions (part of free tier)</p> </li> </ul>"},{"location":"cloud/aws/services/017-aws-route-53/","title":"Route 53","text":"<ul> <li>A highly available, scalable, fully managed and Authoritative DNS <ul> <li>Authoritative = the customer (you) can update the DNS records </li> </ul> </li> <li>Route 53 is also a Domain Registrar </li> <li>Ability to check the health of your resources </li> <li>The only AWS service which provides 100% availability SLA</li> </ul>"},{"location":"cloud/aws/services/017-aws-route-53/#dns","title":"DNS","text":"<ul> <li>Domain Name System which translates the human friendly hostnames into the machine IP addresses</li> <li>www.google.com =&gt; 172.217.18.36</li> <li>DNS uses hierarchical naming structure<ul> <li>.com</li> <li>example.com</li> <li>www.example.com</li> <li>api.example.com</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/017-aws-route-53/#dns-terminologies","title":"DNS Terminologies","text":"<ul> <li>Domain Registrar: Amazon Route 53, GoDaddy, \u2026</li> <li>DNS Records: A, AAAA, CNAME, NS, \u2026</li> <li>Zone File: contains DNS records</li> <li>Name Server: resolves DNS queries (Authoritative or Non-Authoritative)</li> <li>Top Level Domain (TLD): .com, .us, .in, .gov, .org, \u2026</li> <li>Second Level Domain (SLD): amazon.com, google.com, \u2026</li> </ul>"},{"location":"cloud/aws/services/017-aws-route-53/#records","title":"Records","text":"<ul> <li>How you want to route traffic for a domain</li> <li>Each record contains:<ul> <li>Domain/subdomain Name \u2013 e.g., example.com</li> <li>Record Type \u2013 e.g., A or AAAA</li> <li>Value \u2013 e.g., 12.34.56.78</li> <li>Routing Policy \u2013 how Route 53 responds to queries</li> <li>TTL \u2013 amount of time the record cached at DNS Resolvers<ul> <li>High TTL - e.g. 24hr =&gt; possibly outdated records</li> <li>Low TTL - e.g. 60 sec =&gt; more traffic on route 53 (expensive), less chance for outdated records, easy to change records</li> <li>Mandatory for each DNS records except Alias</li> </ul> </li> </ul> </li> <li>Route 53 supports the following DNS record types:<ul> <li>(must know) A / AAAA / CNAME / NS</li> <li>(advanced) CAA / DS / MX / NAPTR / PTR / SOA / TXT / SPF / SRV</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/017-aws-route-53/#record-types","title":"Record Types","text":"<ul> <li>A \u2013 maps a hostname to IPv4</li> <li>AAAA \u2013 maps a hostname to IPv6</li> <li>CNAME \u2013 maps a hostname to another hostname<ul> <li>The target is a domain name which must have an A or AAAA record</li> <li>ONLY FOR NON ROOT DOMAIN (aka. something.mydomain.com)</li> <li>Can\u2019t create a CNAME record for the top node of a DNS namespace (Zone Apex)<ul> <li>Example: you can\u2019t create for example.com, but you can create for www.example.com</li> </ul> </li> </ul> </li> <li>NS \u2013 Name Servers for the Hosted Zone<ul> <li>Control how traffic is routed for a domain</li> </ul> </li> <li>Alias - (Route 53 AWS specific)<ul> <li>Points a hostname to an AWS Resource (app.mydomain.com =&gt; blabla.amazonaws.com)</li> <li>An extension to DNS functionality</li> <li>Works for ROOT DOMAIN and NON ROOT DOMAIN (aka mydomain.com)</li> <li>Alias Record is always of type A/AAAA for AWS resources (IPv4 / IPv6)</li> <li>You can\u2019t set the TTL</li> <li>Free of charge</li> <li>Native health check</li> <li>Target can be: ELB, Cloudfront Distributions, Api Gateway, Elastic Beanstalk Environments, S3 Websites, VPC Interface Endpoints, Global Accelerator accelarator, Route 53 record in same hosted zone<ul> <li>You cannot set an alias recrod for an ec2 DNS name</li> </ul> </li> </ul> </li> </ul>"},{"location":"cloud/aws/services/017-aws-route-53/#hosted-zones","title":"Hosted Zones","text":"<p>A container for records that define how to route traffic to a domain and its subdomains</p> <ul> <li>Public Hosted Zones \u2013 contains records that specify how to route traffic on the Internet (public domain names) application1.mypublicdomain.com</li> <li>Private Hosted Zones \u2013 contain records that specify how you route traffic within one or more VPCs (private domain names) application1.company.internal</li> <li>You pay $0.50 per month per hosted zone</li> </ul>"},{"location":"cloud/aws/services/017-aws-route-53/#routing-policies","title":"Routing Policies","text":"<p>Define how Route 53 responds to DNS queries Route 53 Supports the following Routing Policies: - Simple (route to single resources, if multiple target one is chosen random by client, can't be associated with health checks) - Weighted (assign weight to redirect % traffic per target, can be associated with health checks) - Failover  - Latency based (Redirect to the resource that has the least latency close to us, Latency is based on traffic between users and AWS Regions) - Geolocation (\u2022 This routing is based on user location) - Multi-Value Answer  - Geoproximity (using Route 53 Traffic Flow feature)</p>"},{"location":"cloud/aws/services/017-aws-route-53/#exam-tips","title":"Exam Tips","text":"<ul> <li>The failure threshold is specified by the AWS customer. A failure is when the endpoint does not respond to a request.</li> <li>What will ACM do prior to expiration<ul> <li>If the certificate is being used by an AWS service and ACM-provided CNAME records are accessible via the public DNS, ACM will consider the domain name validated and auto renew the certificate.</li> <li>If the domain is not validated, it will send Health events or EventBridge events to notify the domain owner prior to expiration.</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/","title":"AWS Lambda","text":""},{"location":"cloud/aws/services/018-aws-lambda/#overview","title":"Overview","text":"<p>AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources. You can use Lambda to extend other AWS services with custom logic or create your own backend services.</p>"},{"location":"cloud/aws/services/018-aws-lambda/#key-features","title":"Key Features","text":"<ul> <li>Serverless compute service</li> <li>Automatic scaling and resource management</li> <li>Pay-per-use pricing model</li> <li>Support for multiple programming languages</li> <li>Event-driven architecture</li> <li>Integration with AWS services</li> <li>Custom runtime support</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#supported-languages","title":"Supported Languages","text":"<ul> <li>Node.js (JavaScript)</li> <li>Python</li> <li>Java (Java 8 compatible)</li> <li>C# (.NET Core)</li> <li>Ruby</li> <li>Go</li> <li>PowerShell</li> <li>Custom Runtime API support</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#configuration","title":"Configuration","text":""},{"location":"cloud/aws/services/018-aws-lambda/#basic-settings","title":"Basic Settings","text":"<ul> <li>Memory: 128MB to 3008MB (64MB increments)</li> <li>Timeout: Default 3 seconds, maximum 15 minutes</li> <li>Environment variables</li> <li>VPC configuration</li> <li>IAM execution role</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#runtime-environment","title":"Runtime Environment","text":"<ul> <li>Temporary runtime initialization for external dependencies</li> <li>/tmp directory with 512MB storage</li> <li>Stateless execution</li> <li>Reusable container optimization</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#invocation-types","title":"Invocation Types","text":""},{"location":"cloud/aws/services/018-aws-lambda/#synchronous-invocation","title":"Synchronous Invocation","text":"<ul> <li>Direct invocation with immediate response</li> <li>Used by:</li> <li>Application Load Balancer</li> <li>API Gateway</li> <li>CloudFront (Lambda@Edge)</li> <li>S3 Batch</li> <li>Cognito</li> <li>Step Functions</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#asynchronous-invocation","title":"Asynchronous Invocation","text":"<ul> <li>Event-based invocation with queued processing</li> <li>Automatic retries (3 times)</li> <li>Dead Letter Queue support</li> <li>Used by:</li> <li>S3</li> <li>SNS</li> <li>CloudWatch Events/EventBridge</li> <li>CodeCommit</li> <li>CodePipeline</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#event-source-mapping","title":"Event Source Mapping","text":"<ul> <li>For stream-based invocation (Kinesis, DynamoDB Streams)</li> <li>For queue-based invocation (SQS, SQS FIFO)</li> <li>Processes records in order for streams</li> <li>Configurable batch size and window</li> <li>Error handling with split-batch capability</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#networking","title":"Networking","text":"<ul> <li>VPC Access capabilities</li> <li>ENI (Elastic Network Interface) creation</li> <li>Private subnet deployment</li> <li>NAT Gateway requirement for internet access</li> <li>VPC Endpoint support for AWS services</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#scaling-and-performance","title":"Scaling and Performance","text":""},{"location":"cloud/aws/services/018-aws-lambda/#concurrency","title":"Concurrency","text":"<ul> <li>Reserved concurrency limits</li> <li>Provisioned concurrency for cold start management</li> <li>Account limits and quotas</li> <li>Regional limits (1000 concurrent executions default)</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#cold-starts","title":"Cold Starts","text":"<ul> <li>Initial container startup latency</li> <li>Optimization strategies:</li> <li>Provisioned concurrency</li> <li>Keep warm strategies</li> <li>Code optimization</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#cost-optimization","title":"Cost Optimization","text":"<ul> <li>Pay for compute time in 100ms increments</li> <li>Pay for the number of requests</li> <li>Free tier: 1M requests and 400,000 GB-seconds</li> <li>Cost factors:</li> <li>Memory allocation</li> <li>Execution duration</li> <li>Request count</li> <li>Data transfer</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#best-practices","title":"Best Practices","text":"<ol> <li>Function Design</li> <li>Single responsibility principle</li> <li>Optimize function size</li> <li>Reuse execution context</li> <li> <p>Manage dependencies efficiently</p> </li> <li> <p>Error Handling</p> </li> <li>Implement proper error handling</li> <li>Use Dead Letter Queues</li> <li>Configure retry policies</li> <li> <p>Monitor function health</p> </li> <li> <p>Security</p> </li> <li>Use IAM roles with least privilege</li> <li>Encrypt environment variables</li> <li>Implement VPC security groups</li> <li> <p>Regular security audits</p> </li> <li> <p>Monitoring</p> </li> <li>Use CloudWatch metrics</li> <li>Implement custom metrics</li> <li>Set up alerts</li> <li>Use X-Ray for tracing</li> </ol>"},{"location":"cloud/aws/services/018-aws-lambda/#versions-and-aliases","title":"Versions and Aliases","text":"<ul> <li>Version Management</li> <li>Immutable versions</li> <li>$LATEST version</li> <li>Version numbering</li> <li> <p>Version metadata</p> </li> <li> <p>Alias Features</p> </li> <li>Mutable pointers to versions</li> <li>Traffic shifting capability</li> <li>Environment management</li> <li>Blue-green deployment support</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#lambdaedge","title":"Lambda@Edge","text":"<ul> <li>CloudFront integration</li> <li>Global function deployment</li> <li>Request/Response manipulation</li> <li>Edge location execution</li> <li>Use cases:</li> <li>A/B testing</li> <li>User authentication</li> <li>Content customization</li> <li>Bot protection</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#limits-and-quotas","title":"Limits and Quotas","text":""},{"location":"cloud/aws/services/018-aws-lambda/#execution-limits","title":"Execution Limits","text":"<ul> <li>Memory: 128MB - 3008MB</li> <li>Timeout: 900 seconds (15 minutes)</li> <li>Environment variables: 4KB</li> <li>Disk space (/tmp): 512MB</li> <li>Concurrent executions: 1000 per account</li> </ul>"},{"location":"cloud/aws/services/018-aws-lambda/#deployment-limits","title":"Deployment Limits","text":"<ul> <li>Deployment package:</li> <li>50MB (compressed)</li> <li>250MB (uncompressed)</li> <li>Stack depth for synchronous calls: 1000</li> <li>Async event queue: 6 hours</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/","title":"Amazon API Gateway","text":""},{"location":"cloud/aws/services/019-apigateway/#overview","title":"Overview","text":"<p>Amazon API Gateway is a fully managed service that makes it easy for developers to create, publish, maintain, monitor, and secure APIs at any scale. It supports RESTful APIs and WebSocket APIs for real-time two-way communication applications.</p>"},{"location":"cloud/aws/services/019-apigateway/#key-features","title":"Key Features","text":"<ul> <li>Create RESTful and WebSocket APIs</li> <li>Fully managed, scalable, and highly available</li> <li>Supports custom domain names and SSL certificates</li> <li>Request/response transformation and validation</li> <li>Built-in authorization and throttling</li> <li>Integration with AWS Lambda, EC2, and other AWS services</li> <li>Monitoring and logging with CloudWatch</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#api-types","title":"API Types","text":"<ul> <li>REST APIs: HTTP-based, stateless APIs</li> <li>WebSocket APIs: Real-time, two-way communication</li> <li>HTTP APIs: Lightweight, low-latency alternative to REST APIs</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#security","title":"Security","text":"<ul> <li>IAM-based authorization</li> <li>Lambda authorizers (custom authentication)</li> <li>Amazon Cognito user pools</li> <li>API keys and usage plans</li> <li>Resource policies for access control</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#monitoring-logging","title":"Monitoring &amp; Logging","text":"<ul> <li>CloudWatch metrics and logging</li> <li>Detailed execution logs and tracing</li> <li>Request/response data capture</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#throttling-quotas","title":"Throttling &amp; Quotas","text":"<ul> <li>Protects backend services from traffic spikes</li> <li>Set request rate limits and burst limits</li> <li>Usage plans for API keys</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#deployment-versioning","title":"Deployment &amp; Versioning","text":"<ul> <li>Deploy APIs to stages (dev, test, prod)</li> <li>Stage variables for configuration</li> <li>Canary releases for gradual rollouts</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#best-practices","title":"Best Practices","text":"<ul> <li>Use usage plans and API keys for rate limiting</li> <li>Secure APIs with IAM, Cognito, or Lambda authorizers</li> <li>Monitor API performance and errors with CloudWatch</li> <li>Use request/response validation and transformation</li> <li>Version APIs for backward compatibility</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#integrates-with","title":"Integrates with","text":"<ul> <li>Lambda Functions</li> <li>HTTP: expose HTTP end-points from the back-end</li> <li>Other AWS services, examples:<ul> <li>AWS Step Function workflow</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#api-gateway-endpoint-types","title":"API Gateway Endpoint Types","text":"<ul> <li>Edge-Optimized (default): for global clients<ul> <li>Requests will be routed through the CloudFront Edge locations</li> <li>API Gateway will still live in one region where it was created</li> </ul> </li> <li>Regional: for clients within the same region. Can be combined with CloudFront for control over caching strategies and distribution</li> <li>Private: can only be access within the VPC using VPC endpoint (ENI)</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#deployment-stages","title":"Deployment Stages","text":"<ul> <li>Changes made in API Gateway are not in effect as long as they are not part of a deployment</li> <li>Changes are deployed to stages</li> <li>Recommended naming for stages: dev, test, prod, v1, v2, etc..</li> <li>Each stage can get its own configuration parameters, they can be rolled back</li> <li>Common use case for stages: migrate from previous version to the next version (example from v1 to v2)</li> <li>Stage variables:<ul> <li>Env. variables for API Gateway stages</li> <li>Use case: configure HTTP end-point to which the stage talks to; pass configuration parameters to Lambda functions</li> <li>Stage variables are passed to the \"context\" object in AWS Lambda</li> </ul> </li> <li>Common pattern for the API Gateway and stage variables:<ul> <li>We create stage variables to indicate the corresponding Lambda alias</li> <li>In stage resource configuration we can reference the Lambda function and the stage variables as follows:\u00a0<code>lambda-function-name:${stageVariable.lambdaAlias}</code></li> </ul> </li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#canary-deployments","title":"Canary Deployments","text":"<ul> <li>Possible to be enabled for every stage (usually used for prod)</li> <li>We can choose the % of the traffic the canary channel receives</li> <li>This will allow to test the API Gateway new version</li> <li>Metrics and logs are separated for original stage and canary stage</li> <li>Possibility to override any variable for canary</li> <li>Equivalent of Blue/Green deployments</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#api-gateway-integration-types","title":"API Gateway Integration Types","text":"<ul> <li>MOCK: API Gateway responds without sending the request to the back-end</li> <li>HTTP / AWS (Lambda and other services): forwards the request, but we can modify it<ul> <li>We must configure both the integration request and the integration response</li> <li>Setup data mapping using\u00a0mapping templates\u00a0for request and response</li> </ul> </li> <li>AWS_PROXY (Lambda Proxy): the request is passed to the Lambda without being modified<ul> <li>No mapping templates, headers and query strings can be modified. They are passed as arguments to the function</li> </ul> </li> <li>HTTP_PROXY: same as AWS_PROXY, used for other back-end services</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#mapping-templates","title":"Mapping Templates","text":"<ul> <li>They are only usable for integration with AWS services</li> <li>They can be used for modify requests and responses</li> <li>Uses Velocity Template Language (VTL)</li> <li>We can filter output results</li> <li>Concrete example: integrate JSON to XML with SOAP<ul> <li>SOAP is XML based, REST is JSON based</li> <li>Client interacts with API Gateway using JSON, API Gateway interacts with the SOAP endpoint using XML</li> <li>API Gateway extracts the data from JSON, builds the SOAP request, calls the SOAP API, transforms the SOAP response to JSON</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#aws-api-gateway-swaggeropenapi-spec","title":"AWS API Gateway Swagger/OpenAPI Spec","text":"<ul> <li>Common way to define REST APIs using API definition as code</li> <li>Existing Swagger/OpenAPI 3.0 specs can be imported into API Gateway<ul> <li>Method</li> <li>Method Request</li> <li>Integration Request</li> <li>Method Response</li> <li>AWS extensions for API Gateway every single setup</li> </ul> </li> <li>APIs can be exported as Swagger/OpenAPI spec</li> <li>Swagger can be written in YAML/JSON</li> <li>Other application can generate code from the exported APIs</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#caching-in-api-gateway","title":"Caching in API Gateway","text":"<ul> <li>Caching can reduce the number of calls made to the back-end</li> <li>Default TTL is 300 seconds (min: 0, max: 3600s)</li> <li>Caching is defined per stage (one cache per stage)</li> <li>Possible to override cache setting per method</li> <li>Cache can be encrypted</li> <li>Cache capacity can be between 0.5GB up to 237GB</li> <li>Cache is expensive, use it only in production</li> <li>Cache can be invalidated by:<ul> <li>Flush the entire cache immediately</li> <li>Clients can invalidate cache with the header\u00a0<code>Cache-Control: max-age=0</code>\u00a0(needs IAM auth)</li> <li>In case of lack of\u00a0InvalidateCache\u00a0policy, any client can invalidate the cache</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#api-gateway-usage-plans-api-keys","title":"API Gateway Usage Plans &amp; API Keys","text":"<ul> <li>If we want to make an API available as an offering ($) to customers</li> <li>Usage plans:<ul> <li>Who can access one or more API stages</li> <li>How many request can they perform in a given period of time</li> <li>API key can be used to identify clients and meter their access</li> </ul> </li> <li>API keys:<ul> <li>Alphanumeric strings</li> <li>Clients can securely use the API, and we can authenticate requests</li> <li>We can control access</li> <li>Quota limits is the overall number of requests</li> </ul> </li> <li>Order:<ol> <li>Create one or more APIs and deploy them into stages</li> <li>Generate/import API keys which can be distributed to application developers/customers</li> <li>Create usage plan with desired throttle and quota limits</li> <li>Associate API stages and API keys with the usage plan</li> </ol> </li> <li>Callers must supply an API key using the\u00a0x-api-key\u00a0header</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#monitoring-loggingtracing","title":"Monitoring, Logging/Tracing","text":"<ul> <li>CloudWatch Logs:<ul> <li>Can be enabled at stage level</li> <li>Can override settings on a per-API basis</li> <li>Log contains information about the request/response body</li> </ul> </li> <li>X-Ray:<ul> <li>Enable tracing to get extra information</li> <li>X-Ray + API Gateway + AWS Lambda gives full picture about the workings of an serverless application</li> </ul> </li> <li>CloudWatch Metrics:<ul> <li>Metrics are per stage with the possibility to enable detailed metrics</li> <li>Useful metrics:<ul> <li>CacheHitCount\u00a0and\u00a0CacheMissCount\u00a0give information about the efficiency of the cache</li> <li>Count\u00a0- the total number of API requests</li> <li>IntegrationLatency\u00a0- the time between the request are relayed to the back-end and response is received by the API Gateway</li> <li>Latency\u00a0- total time between request and response. Max amount of time a request can perform is\u00a029 seconds</li> <li>4XXError\u00a0- client side errors</li> <li>5XXError\u00a0- server side errors</li> </ul> </li> </ul> </li> <li>Throttling<ul> <li>Global account limit by default is 10K request per second across all APIs</li> <li>Soft limit, can be increased upon request</li> <li>In case of throttling =&gt; 429 Too Many Requests</li> <li>We can set stage limit &amp; method limit to not use every request in case of a single API</li> <li>We can create usage plans to throttle customer</li> </ul> </li> <li>Errors:<ul> <li>4xx client errors<ul> <li>400: Bad Request</li> <li>403: Access Denied, WAF filtered</li> <li>429: Quota exceeded, Too Many Requests -5xx server errors:</li> <li>502: Bad Gateway - incompatible output from the back-end or out-of-order invocation due to heavy loads</li> <li>503: Service Unavailable</li> <li>504: Integration Failure - Back-end request timeout exceeded</li> </ul> </li> </ul> </li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#cors","title":"CORS","text":"<ul> <li>Must be enabled to support requests from other domains</li> <li>The OPTIONS preflight request must contain the following headers:<ul> <li>Access-Control-Allow-Methods</li> <li>Access-Control-Allow-Headers</li> <li>Access-Control-Allow-Origin</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#security-and-iam-permissions","title":"Security and IAM Permissions","text":"<ul> <li>IAM Permissions: </li> <li>We should create an IAM policy if other AWS services access the API Gateway from the same account </li> <li>We can leverage \"Sig v4\" capability where IAM credentials are in headers </li> <li>Authentication = IAM | Authorization = IAM Policy - Resource policies: - Set policy on the API Gateway and set who can access it </li> <li>Allows for cross account access (combined with IAM Security) - Allow for specific IP source</li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#client-authentication","title":"Client Authentication","text":"<ul> <li>Cognito User Pools:<ul> <li>Cognito fully manages user lifecycle, token will expire automatically</li> <li>API Gateway verifies the identity automatically from Cognito</li> <li>No custom implementation required</li> <li>Authentication = Cognito User Pools | Authorization = API Gateway Methods</li> </ul> </li> <li>Lambda Authorizer (Custom Authorizer):<ul> <li>Token-based authorizer (bearer token)</li> <li>A request parameter-based Lambda authorizer</li> <li>Lambda must return an IAM policy for the user, result policy is cached</li> <li>Authentication = External | Authorization = Lambda function</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#http-api-vs-rest-api","title":"HTTP API vs REST API","text":"<ul> <li>HTTP APIs:<ul> <li>Low latency, cost-effective AWS lambda proxy, HTTP proxy and private integration (no data mapping)</li> <li>Supported authorization: OIDC, OAuth2 CORS</li> <li>No usage plans and API keys</li> </ul> </li> <li>REST APIs:<ul> <li>No native OpenID Connect / OAuth 2.0 support</li> </ul> </li> <li>WebSocket APIs:<ul> <li>Two-way interactive communication between the user and the server</li> <li>Server can push information to the client (Stateful application)</li> <li>Used for real-time applications such as chat, collaboration platforms, multiplayer games, trading platforms</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/019-apigateway/#exam-tips","title":"Exam Tips","text":"<ul> <li>There are two types of API logging in CloudWatch: execution logging and access logging. In execution logging, API Gateway manages the CloudWatch Logs. The process includes creating log groups and log streams, and reporting to the log streams any caller's requests and responses. The logged data includes errors or execution traces (such as request or response parameter values or payloads), data used by Lambda authorizers, whether API keys are required, whether usage plans are enabled, and so on. In access logging, you, as an API Developer, want to log who has accessed your API and how the caller accessed the API. You can create your own log group or choose an existing log group that could be managed by API Gateway.</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/","title":"Amazon DynamoDB","text":""},{"location":"cloud/aws/services/020-dynamodb/#overview","title":"Overview","text":"<p>Amazon DynamoDB is a fully managed NoSQL database service providing fast, predictable performance with seamless scalability. It offers flexible schema, automatic scaling, and serverless operation.</p>"},{"location":"cloud/aws/services/020-dynamodb/#key-features","title":"Key Features","text":"<ul> <li>Fully managed NoSQL database</li> <li>Consistent single-digit millisecond latency</li> <li>Built-in security and backup</li> <li>Automatic scaling</li> <li>Point-in-time recovery</li> <li>Global tables for multi-region deployment</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#core-concepts","title":"Core Concepts","text":""},{"location":"cloud/aws/services/020-dynamodb/#tables-items-and-attributes","title":"Tables, Items, and Attributes","text":"<ul> <li>Tables: Collection of data</li> <li>Items: Group of attributes (similar to rows)</li> <li>Attributes: Fundamental data elements</li> <li>Flexible schema design</li> <li>Support for nested attributes</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#primary-keys","title":"Primary Keys","text":"<ul> <li>Partition Key (HASH)</li> <li>Must be unique for each item</li> <li>Used for data distribution</li> <li>Sort Key (RANGE) - Optional</li> <li>Creates composite keys</li> <li>Enables complex queries</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#capacity-management","title":"Capacity Management","text":""},{"location":"cloud/aws/services/020-dynamodb/#read-capacity-units-rcu","title":"Read Capacity Units (RCU)","text":"<ul> <li>Provisioned throughput for reads</li> <li>1 RCU = 1 strongly consistent read/second (4KB)</li> <li>1 RCU = 2 eventually consistent reads/second (4KB)</li> <li>Auto-scaling support</li> <li>Burst capacity with credit system</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#write-capacity-units-wcu","title":"Write Capacity Units (WCU)","text":"<ul> <li>Provisioned throughput for writes</li> <li>1 WCU = 1 write/second (1KB)</li> <li>Auto-scaling capabilities</li> <li>Burst credits available</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#on-demand-capacity","title":"On-Demand Capacity","text":"<ul> <li>Pay-per-request pricing</li> <li>No capacity planning required</li> <li>Automatic scaling</li> <li>Best for unpredictable workloads</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#data-operations","title":"Data Operations","text":""},{"location":"cloud/aws/services/020-dynamodb/#writing-data","title":"Writing Data","text":"<ul> <li>PutItem: Create/Replace items</li> <li>UpdateItem: Modify attributes</li> <li>BatchWriteItem: Multiple writes</li> <li>Conditional writes</li> <li>Atomic counters</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#reading-data","title":"Reading Data","text":"<ul> <li>GetItem: Single item retrieval</li> <li>BatchGetItem: Multiple items</li> <li>Query: Efficient key-based search</li> <li>Scan: Full table search</li> <li>ProjectionExpression support</li> <li>Filtering capabilities</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#consistency-models","title":"Consistency Models","text":"<ul> <li>Eventually Consistent Reads</li> <li>Lower cost</li> <li>Higher availability</li> <li>Possible stale data</li> <li>Strongly Consistent Reads</li> <li>Latest data guarantee</li> <li>Higher cost</li> <li>Potential higher latency</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#advanced-features","title":"Advanced Features","text":""},{"location":"cloud/aws/services/020-dynamodb/#dynamodb-accelerator-dax","title":"DynamoDB Accelerator (DAX)","text":"<ul> <li>In-memory caching</li> <li>Microsecond latency</li> <li>Write-through caching</li> <li>No application code changes</li> <li>Ideal for read-heavy workloads</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#global-tables","title":"Global Tables","text":"<ul> <li>Multi-region replication</li> <li>Active-active configuration</li> <li>Eventually consistent</li> <li>Automatic conflict resolution</li> <li>Cross-region redundancy</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#streams","title":"Streams","text":"<ul> <li>Change data capture</li> <li>Event-driven architectures</li> <li>Lambda integration</li> <li>24-hour retention</li> <li>Ordered record delivery</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#time-to-live-ttl","title":"Time To Live (TTL)","text":"<ul> <li>Automatic item deletion</li> <li>Based on timestamp attribute</li> <li>No extra cost</li> <li>Background processing</li> <li>Streams integration</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#security","title":"Security","text":""},{"location":"cloud/aws/services/020-dynamodb/#authentication","title":"Authentication","text":"<ul> <li>IAM integration</li> <li>Fine-grained access control</li> <li>Role-based access</li> <li>Temporary credentials</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#encryption","title":"Encryption","text":"<ul> <li>Encryption at rest</li> <li>SSL/TLS for transit</li> <li>KMS integration</li> <li>Customer managed keys</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#backup-and-recovery","title":"Backup and Recovery","text":"<ul> <li>On-demand backups</li> <li>Point-in-time recovery</li> <li>Zero performance impact</li> <li>Cross-region copying</li> <li>Restore to new table</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#performance-optimization","title":"Performance Optimization","text":""},{"location":"cloud/aws/services/020-dynamodb/#partition-management","title":"Partition Management","text":"<ul> <li>Even key distribution</li> <li>Avoid hot partitions</li> <li>Monitor metrics</li> <li>Adaptive capacity</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#best-practices","title":"Best Practices","text":"<ol> <li>Key Design</li> <li>Distribute load evenly</li> <li>Avoid hot keys</li> <li>Use composite keys effectively</li> <li>Query Optimization</li> <li>Use Query over Scan</li> <li>Project needed attributes</li> <li>Implement pagination</li> <li>Use indexes effectively</li> <li>Capacity Management</li> <li>Monitor utilization</li> <li>Implement auto-scaling</li> <li>Use burst capacity wisely</li> <li>Consider on-demand mode</li> </ol>"},{"location":"cloud/aws/services/020-dynamodb/#cost-optimization","title":"Cost Optimization","text":"<ul> <li>Choose appropriate capacity mode</li> <li>Use auto-scaling</li> <li>Implement TTL for cleanup</li> <li>Monitor and optimize indexes</li> <li>Use appropriate consistency model</li> </ul>"},{"location":"cloud/aws/services/020-dynamodb/#limits-and-quotas","title":"Limits and Quotas","text":"<ul> <li>Item size: 400KB</li> <li>Table size: Unlimited</li> <li>Partition key length: 2048 bytes</li> <li>Sort key length: 1024 bytes</li> <li>Secondary indexes per table: 20</li> <li>Concurrent table operations: 50</li> <li>API rate limits vary by operation</li> </ul>"},{"location":"cloud/aws/services/021-sam/","title":"AWS Serverless Application Model (SAM)","text":""},{"location":"cloud/aws/services/021-sam/#overview","title":"Overview","text":"<p>AWS SAM is an open-source framework for building serverless applications on AWS. It provides shorthand syntax to define functions, APIs, databases, and event source mappings in a single template.</p>"},{"location":"cloud/aws/services/021-sam/#key-features","title":"Key Features","text":"<ul> <li>Simplifies serverless application development</li> <li>Uses AWS CloudFormation as the underlying deployment engine</li> <li>Supports local development and testing</li> <li>Integrates with CI/CD pipelines</li> <li>Built-in best practices for security and monitoring</li> </ul>"},{"location":"cloud/aws/services/021-sam/#components","title":"Components","text":"<ul> <li>AWS::Serverless::Function: Defines a Lambda function</li> <li>AWS::Serverless::Api: Defines an API Gateway</li> <li>AWS::Serverless::SimpleTable: Defines a DynamoDB table</li> <li>AWS::Serverless::LayerVersion: Defines a Lambda layer</li> </ul>"},{"location":"cloud/aws/services/021-sam/#development-workflow","title":"Development Workflow","text":"<ol> <li>Write your application code</li> <li>Define resources in the SAM template (template.yaml)</li> <li>Build and test locally using the SAM CLI</li> <li>Deploy to AWS using the SAM CLI or CI/CD pipeline</li> </ol>"},{"location":"cloud/aws/services/021-sam/#local-development","title":"Local Development","text":"<ul> <li>Use <code>sam local invoke</code> to run Lambda functions locally</li> <li>Use <code>sam local start-api</code> to test API Gateway locally</li> <li>Supports Docker for emulating Lambda runtime</li> </ul>"},{"location":"cloud/aws/services/021-sam/#deployment","title":"Deployment","text":"<ul> <li>Use <code>sam deploy</code> to deploy serverless applications</li> <li>Supports change sets and rollback</li> <li>Integrates with AWS CodePipeline and CodeDeploy</li> </ul>"},{"location":"cloud/aws/services/021-sam/#best-practices","title":"Best Practices","text":"<ul> <li>Use environment variables for configuration</li> <li>Separate dev, test, and prod environments</li> <li>Monitor functions with CloudWatch</li> <li>Use IAM roles with least privilege</li> <li>Test locally before deploying to production</li> </ul>"},{"location":"cloud/aws/services/022-step-functions/","title":"Step Functions","text":"<ul> <li>Step Functions allow to build visual workflows which are used to orchestrate Lambda Functions</li> <li>Workflow is represented as a JSON state machine</li> <li>Features:<ul> <li>Sequence</li> <li>Parallel execution</li> <li>Conditions</li> <li>Timeouts</li> <li>Error handling</li> </ul> </li> <li>Can also integrate with EC2, ECS, on premise servers, API Gateway</li> <li>Maximum execution time is 1 year</li> <li>Possibility to implement human approval feature</li> <li>Use cases:<ul> <li>Order fulfillment</li> <li>Data processing</li> <li>Web applications</li> <li>Any workflow</li> </ul> </li> <li>When designing a Step Function we get an aspect of visualization (flow diagram)</li> <li>The execution can be visually represented on this diagram</li> <li>Any state can encounter errors:<ul> <li>State machine definition issues (example. no matching rules in choice state)</li> <li>Task failures (example: an exception in a Lambda function)</li> <li>Transient failures (example: network partition events)</li> </ul> </li> <li>By default: when a state reports an error, the execution of the Step Functions fails entirely</li> <li>Failures can be retried:<ul> <li>Exponential backoff:\u00a0IntervalSeconds,\u00a0MaxAttempts,\u00a0BackoffRate</li> <li>Move on - Catch:\u00a0ErrorEquals,\u00a0Next</li> </ul> </li> <li>Best practice: include data in the error message</li> </ul>"},{"location":"cloud/aws/services/022-step-functions/#states","title":"States","text":"<p>The following types of states exist: - Pass (<code>\"Type\": \"Pass\"</code>) passes its input to its output, without performing work.\u00a0<code>Pass</code>\u00a0states are useful when constructing and debugging state machines.) - Task ((<code>\"Type\": \"Task\"</code>) represents a single unit of work performed by a state machine. A task performs work by using an activity or an AWS Lambda function, by integrating with other\u00a0supported AWS services, or by invoking a third-party API, such as Stripe.) - Choice ((<code>\"Type\": \"Choice\"</code>) adds conditional logic to a state machine) - Wait ((<code>\"Type\": \"Wait\"</code>) delays the state machine from continuing for a specified time) - Succeed (\u00a0(<code>\"Type\": \"Succeed\"</code>) stops an execution successfully) - Fail ((<code>\"Type\": \"Fail\"</code>) stops the execution of the state machine and marks it as a failure, unless it is caught by a\u00a0<code>Catch</code>\u00a0block.) - Parallel ((<code>\"Type\": \"Parallel\"</code>) can be used to add separate branches of execution in your state machine.) - Map (state to run a set of workflow steps for each item in a dataset. The\u00a0<code>Map</code>\u00a0state's iterations run in parallel, which makes it possible to process a dataset quickly)</p>"},{"location":"cloud/aws/services/022-step-functions/#amazon-state-languages","title":"Amazon State Languages","text":"<p>A Step Functions execution receives a JSON text as input and passes that input to the first state in the workflow. Individual states receive JSON as input and usually pass JSON as output to the next state. In the Amazon States Language, these fields filter and control the flow of JSON from state to state: - InputPath - Parameters - ResultSelector - ResultPath (can be used to also add information regarding original state input) - OutputPath (enables you to select a portion of the state output to pass to the next state, if you don't specifiy it defaults to $)</p> <p>AWS Step Functions applies the\u00a0<code>InputPath</code>\u00a0field first, and then the\u00a0<code>Parameters</code>\u00a0field. You can first filter your raw input to a selection you want using\u00a0<code>InputPath</code>, and then apply\u00a0<code>Parameters</code>\u00a0to manipulate that input further, or add new values. You can then use the\u00a0<code>ResultSelector</code>\u00a0field to manipulate the state's output before\u00a0<code>ResultPath</code>\u00a0is applied. Use\u00a0<code>ResultPath</code>\u00a0to combine a task result with task input, or to select one of these. The path you provide to\u00a0<code>ResultPath</code>\u00a0controls what information passes to the output.</p> <p>Use ResultPath to: - Replace Input with Result - Discard Result and Keep Input - Include Result with Input - Update a Node in Input with Result - Include Error and Input in a Catch</p>"},{"location":"cloud/aws/services/022-step-functions/#standard-vs-express-step-functions","title":"Standard vs Express Step Functions","text":"<ul> <li>Standard Function<ul> <li>Maximum duration: 1 year</li> <li>Exactly-one workflow execution</li> <li>Execution start rate: 2000 per second</li> <li>Price per state transition: more expensive in general</li> </ul> </li> <li>Express Function<ul> <li>Maximum duration: 5 minutes</li> <li>At-least-once workflow execution</li> <li>Execution start rate: 100_000 per second</li> <li>Price per number of execution: much cheaper in general</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/023-cognito/","title":"Cognito","text":"<ul> <li>Used to give access for users/clients to be able to interact with our applications.</li> <li>Cognito User Pools:<ul> <li>Sign in functionality</li> <li>Integrates with API Gateway and Application Load Balancer</li> </ul> </li> <li>Cognito Identity Pools (Federated Identity):<ul> <li>Provides AWS credentials to users to access AWS resources directly</li> <li>Integrates with Cognito User Pools as an identity provider</li> </ul> </li> <li>Cognito Sync:<ul> <li>Synchronize data from devices to Cognito</li> <li>Deprecated: use AppSync</li> </ul> </li> <li>Cognito vs IAM: external user vs internal users</li> </ul>"},{"location":"cloud/aws/services/023-cognito/#cognito-user-pools-cup","title":"Cognito User Pools (CUP)","text":"<ul> <li>Serverless database for web and mobile applications</li> <li>Users can do:<ul> <li>Simple login: username/password combination</li> <li>Password reset</li> <li>Email/Phone verification</li> <li>Multi-factor auth (MFA)</li> <li>Federated Identities: users can log in with Facebook, Google, SAML</li> </ul> </li> <li>User can be blocked if their credential is compromised elsewhere (in case of Federated Identities)</li> <li>Login uses JSON Web Token (JWT)</li> <li>CUP integrates with API Gateway and ALB</li> </ul>"},{"location":"cloud/aws/services/023-cognito/#cognito-user-pools-lambda-triggers","title":"Cognito User Pools - Lambda Triggers","text":"<ul> <li>CUP can invoke Lambda functions synchronously on these triggers:<ul> <li>Authentication events:<ul> <li>pre auth</li> <li>post auth</li> <li>pre token generation</li> </ul> </li> <li>Sign-up<ul> <li>pre sign-up</li> <li>post confirmation</li> <li>migrate user</li> </ul> </li> <li>Message<ul> <li>custom message</li> </ul> </li> <li>Token creation<ul> <li>pre token generation</li> </ul> </li> </ul> </li> </ul>"},{"location":"cloud/aws/services/023-cognito/#cognito-user-pools-hosted-authentication-ui","title":"Cognito User Pools - Hosted Authentication UI","text":"<ul> <li>Cognito has a hosted auth UI which can be added to an application to handle sing-up and sign-in workflows</li> <li>Using the hosted UI, we can have a foundation for integration with social logins, OIDC or SAML</li> <li>We can customize the logo and the CSS of this page</li> </ul>"},{"location":"cloud/aws/services/023-cognito/#cognito-identity-pools-federated-identities","title":"Cognito Identity Pools (Federated Identities)","text":"<ul> <li>Get identities for users to obtain temporary AWS credentials</li> <li>The identity pool can include:<ul> <li>Public providers (Login with Amazon, Facebook, Google, Apple)</li> <li>Users is an Amazon Cognito pool</li> <li>OpenID Connect Providers and SAML Identity providers</li> <li>Developer authenticated identities (custom login server)</li> <li>Cognito Identity Pools allow for unauthenticated (guest) access</li> </ul> </li> <li>Users can then access AWS services directly or through API Gateway<ul> <li>The IAM policies applied to the credentials are defined in Cognito</li> <li>They can be customized based on the user_id for fine-grained control</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/023-cognito/#cognito-identity-pools-iam-roles","title":"Cognito Identity Pools - IAM Roles","text":"<ul> <li>We can define default IAM roles for authenticated and guest users</li> <li>We can define rules to choose the role for each user based on the user_id</li> <li>We can partition user access using policy variables</li> <li>IAM credentials are obtained by Cognito Identity Pools through STS</li> <li>Roles must have a \"trust\" policy of Cognito Identity Pools</li> </ul>"},{"location":"cloud/aws/services/023-cognito/#cognito-user-pools-vs-identity-pools","title":"Cognito User Pools vs Identity Pools","text":"User Pools Identity Pools Database of users for a web/mobile application Obtains AWS credentials for the users Allows to federate logins (Public Social, SAML, etc) Users can login through Public Social, SAML, CUP Customize the UI used for auth User can be guest uses (unauthenticated) Has triggers for AWS Lambda during auth flow Users are mapped to IAM roles/policies Manage username/password Give access to AWS services"},{"location":"cloud/aws/services/023-cognito/#cognito-sync","title":"Cognito Sync","text":"<ul> <li>Deprecated - use AppSync instead</li> <li>Used to store preferences, configuration, state of app</li> <li>Cross device synchronization (any platform - IOS, Android, etc.)</li> <li>Offline capability (synchronize when back online)</li> <li>Store data in datasets (up to 1MB), up to 20 datasets</li> <li>Push Sync: silently notify across all devices when identity data changes</li> <li>Cognito Stream: stream data from Cognito into Kinesis</li> <li>Cognito Events: execute Lambda function in response to events</li> </ul>"},{"location":"cloud/aws/services/023-cognito/#exam-tips","title":"Exam Tips","text":"<ul> <li>With adaptive authentication, you can configure your user pool to block suspicious sign-ins or add second factor authentication in response to an increased risk level. For each sign-in attempt, Amazon Cognito generates a risk score for how likely the sign-in request is to be from a compromised source. This risk score is based on many factors, including whether it detects a new device, user location, or IP address.</li> </ul>"},{"location":"cloud/aws/services/024-app-sync/","title":"AWS AppSync","text":""},{"location":"cloud/aws/services/024-app-sync/#overview","title":"Overview","text":"<p>AWS AppSync is a fully managed service that makes it easy to develop GraphQL APIs by handling the heavy lifting of securely connecting to data sources like AWS DynamoDB, Lambda, and more.</p>"},{"location":"cloud/aws/services/024-app-sync/#key-features","title":"Key Features","text":"<ul> <li>Managed GraphQL API service</li> <li>Real-time data synchronization and offline support</li> <li>Integrates with DynamoDB, Lambda, Elasticsearch, HTTP, and RDS</li> <li>Built-in security with API keys, IAM, Cognito, and OIDC</li> <li>Fine-grained access control with GraphQL schema</li> <li>Supports subscriptions for real-time updates</li> </ul>"},{"location":"cloud/aws/services/024-app-sync/#architecture","title":"Architecture","text":"<ul> <li>Schema-driven development</li> <li>Connects to multiple data sources</li> <li>Resolvers map GraphQL operations to data sources</li> <li>Pipeline resolvers for complex business logic</li> </ul>"},{"location":"cloud/aws/services/024-app-sync/#security","title":"Security","text":"<ul> <li>API key, IAM, Amazon Cognito, and OIDC authentication</li> <li>Field-level authorization</li> <li>Encryption in transit and at rest</li> </ul>"},{"location":"cloud/aws/services/024-app-sync/#monitoring-logging","title":"Monitoring &amp; Logging","text":"<ul> <li>Integrated with CloudWatch for metrics and logging</li> <li>Tracing with AWS X-Ray</li> </ul>"},{"location":"cloud/aws/services/024-app-sync/#best-practices","title":"Best Practices","text":"<ul> <li>Use fine-grained access control in your schema</li> <li>Monitor API usage and set up alerts</li> <li>Use subscriptions for real-time updates</li> <li>Secure APIs with appropriate authentication methods</li> <li>Optimize resolvers for performance</li> </ul>"},{"location":"cloud/aws/services/024-app-sync/#caching","title":"Caching","text":"<p>AWS AppSync\u2019s API Cache settings provides three options:  - None - Full request caching - Per-resolver caching.</p>"},{"location":"cloud/aws/services/025-sqs/","title":"Amazon Simple Queue Service (SQS)","text":""},{"location":"cloud/aws/services/025-sqs/#overview","title":"Overview","text":"<p>Amazon SQS is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications.</p>"},{"location":"cloud/aws/services/025-sqs/#key-features","title":"Key Features","text":"<ul> <li>Fully managed message queues</li> <li>Supports Standard and FIFO queues</li> <li>Scalable and highly available</li> <li>Secure with encryption and access controls</li> <li>Dead-letter queues for handling message failures</li> <li>Message retention and visibility timeout controls</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#queue-types","title":"Queue Types","text":"<ul> <li>Standard Queues: Unlimited throughput, at-least-once delivery, best-effort ordering</li> <li>FIFO Queues: Exactly-once processing, first-in-first-out delivery, limited throughput</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#security","title":"Security","text":"<ul> <li>Server-side encryption (SSE) with AWS KMS</li> <li>Access control with IAM policies</li> <li>VPC endpoints for private connectivity</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#monitoring-logging","title":"Monitoring &amp; Logging","text":"<ul> <li>CloudWatch metrics for queue depth, message age, and more</li> <li>CloudTrail for API call auditing</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#best-practices","title":"Best Practices","text":"<ul> <li>Use dead-letter queues for error handling</li> <li>Set appropriate visibility timeouts</li> <li>Monitor queue metrics and set up alerts</li> <li>Secure queues with IAM and encryption</li> <li>Use batching for high-throughput scenarios</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#standard-queue","title":"Standard Queue","text":"<ul> <li>Oldest offering from AWS (over 10 years old)</li> <li>Fully managed service</li> <li>Scales from 1 message per second to 10,000 per second</li> <li>Default retention of messages: 4 days<ul> <li>A maximum of 14 days</li> </ul> </li> <li>There is no limit to how many messages can be in the queue</li> <li>Low latency (10 ms on publish and receive)</li> <li>Horizontal scaling in terms of number of consumers</li> <li>Can have duplicate messages</li> <li>Can have messages out of order (best effort ordering)</li> <li>Limitation of 256kb per message sent</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#delay-queue","title":"Delay Queue","text":"<ul> <li>Delay a message so a consumer doesn't see it immediately<ul> <li>up to 15-minute delay</li> </ul> </li> <li>Default is 0 seconds making messages available right away</li> <li>You can set a default at queue level</li> <li>You can override the default using the\u00a0DelaySeconds\u00a0parameter</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#producing-messages","title":"Producing Messages","text":"<ul> <li>Define the body</li> <li>Add message attributes (metadata - optional)</li> <li>Optionally can provide Delay Delivery</li> <li>You receive back:<ul> <li>Message identifier</li> <li>MD5 hash of the body</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/025-sqs/#consuming-messages","title":"Consuming Messages","text":"<ul> <li>Poll SQS for messages<ul> <li>receive up to 10 messages at a time</li> </ul> </li> <li>Next step is to process the message within the visibility timeout</li> <li>Finally, delete the message using the message ID &amp; receipt handle</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#visibility-timeout","title":"Visibility timeout","text":"<ul> <li>When a consumer polls a message from a queue, the message is\u00a0invisible\u00a0to the other consumers for a defined period called\u00a0Visibility Timeout<ul> <li>Can be set between 0 seconds to 12 hours</li> <li>Default 30 seconds</li> <li>If it takes 15 minutes or greater and consumer fails to process the message, you must wait before processing the message again</li> <li>IF set to 30 seconds or lower and consumer needs time to process the message, another consumer will receive the message and will be processed more than once</li> </ul> </li> <li>ChangeMessageVisibility<ul> <li>An API to change the visibility while processing a message</li> </ul> </li> <li>DeleteMessage<ul> <li>An API to tell SQS the message was successfully processed</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/025-sqs/#dead-letter-queue","title":"Dead Letter Queue","text":"<ul> <li>If a consumer fails to consume a message within the visibility timeout, the message goes back to the queue. We can put a threshold of how many times a message can be put back to the queue</li> <li>After\u00a0MaximumReceives\u00a0times the threshold is exceeded and the message goes into dead letter queue (DLQ)<ul> <li>DLQ is useful for debugging</li> <li>Retention times for the messages should be set to max (14 days) in case of a DLQ</li> <li>DLQ is a queue which is created separately and attached to the normal queue</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/025-sqs/#long-polling","title":"Long Polling","text":"<ul> <li>When a consumer requests for a message from a queue it can optionally wait for messages to arrive in case there is no available message to be consumed in the queue</li> <li>Long polling decreases the number of API calls made to SQS while increasing the efficiency and latency of the application</li> <li>The wait time can be set to 1 second up to 20 seconds.</li> <li>Long polling should be preferred in case of short polling (wait time of 0 seconds)</li> <li>Long polling is enabled by setting a value between 1 and 20 for\u00a0WaitTimeSeconds\u00a0queue attribute</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#sqs-extended-client","title":"SQS Extended Client","text":"<ul> <li>Message size limit is 265KB in case of a queue, Extended Client Java library offers an implementation for larger messages using S3</li> <li>The data is uploaded into S3, the message will contain a pointer to the data. When the message is consumed, the data is retrieved from the S3 using the pointer</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#sqs-api","title":"SQS API","text":"<ul> <li>CreateQueue(MessageRetentionPeriod): creates a queue</li> <li>DeleteQueue: deletes a queue</li> <li>PurgeQueue: deletes all the messages from a queue</li> <li>SendMessage(DelaySeconds): send a message with optional delay</li> <li>ReceiveMessageWaitTimeSeconds: receives a message using long polling</li> <li>ChangeMessageVisibility: changes the message wait time in case there is more time needed for processing</li> <li>Batch API:\u00a0SendMessage,\u00a0DeleteMessage,\u00a0ChangeMessageVisibility</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#fifo-queues","title":"FIFO Queues","text":"<ul> <li>FIFO = First In First Out</li> <li>Provides ordering of the messages in a queue</li> <li>Has limited throughput compared to standard queues: 300 msg/s without batching, 3000 msg/s with batching</li> <li>Exactly-once send capability</li> <li>Messages are processed in order by the consumer</li> <li>Queues which are created as FIFO should have their name ending with \"fifo\"</li> </ul>"},{"location":"cloud/aws/services/025-sqs/#fifo-deduplication","title":"FIFO Deduplication","text":"<ul> <li>Used for making sure that a message is sent only once</li> <li>Deduplication interval is 5 minutes</li> <li>Deduplication methods:<ul> <li>Content based deduplication: the message body is hashed with SHA-256 algorithm and the hash is used to detect duplicates</li> <li>MessageDeduplicationID: attribute can be set explicitly for checking duplicates</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/025-sqs/#fifo-message-grouping","title":"FIFO Message Grouping","text":"<ul> <li>MessageGroupID: if this attribute is set, a message group can have only one consumer and the messages will arrive in order for the same message group</li> <li>Provides ordering at a subset level of messages in case of a queue:<ul> <li>Messages which share the same group id arrive in order within the group</li> <li>Each group id can have a different consumer. A queue can have multiple groups</li> <li>Ordering across the groups are not guaranteed</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/026-sns/","title":"SNS: Simple Notification Service","text":"<p>SNS is a fully managed messaging service for both application to application (A2A) and application to person (A2P) communication.</p> <ul> <li>The event producer only sends a message to one SNS topic at a time</li> <li>Many event receivers can be created to listen to an SNS topic notification</li> <li>Limits:<ul> <li>10,000,000 subscriptions per topic</li> <li>100,000 topics</li> </ul> </li> <li>Subscriber types:<ul> <li>SQS</li> <li>HTTP / HTTPS (with delivery retries)</li> <li>Lambda</li> <li>Emails</li> <li>Mobile Notifications</li> <li>SMS text messages</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/026-sns/#sns-integrates-with-most-aws-services","title":"SNS integrates with most AWS Services","text":"<ul> <li>AWS Services can send data directly to SNS for generating notifications:<ul> <li>CloudWatch (for alarms)</li> <li>Auto Scaling Groups</li> <li>S3 buckets (for events)</li> <li>CloudFormation (for state changes)</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/026-sns/#how-to-publish-a-topic","title":"How to publish a Topic","text":"<ul> <li>Simple:<ul> <li>Create a topic</li> <li>Create a subscription</li> <li>Public to the topic</li> </ul> </li> <li>Publish directly from an application<ul> <li>Create an endpoint in your application</li> <li>Publish to the platform endpoint</li> <li>This works with:<ul> <li>Google GCM</li> <li>Apple APNS</li> <li>Amazon ADM</li> </ul> </li> </ul> </li> </ul>"},{"location":"cloud/aws/services/026-sns/#security","title":"Security","text":"<ul> <li>Encryption:<ul> <li>In-flight encryption using HTTPS API</li> <li>At-rest encryption using KMS keys</li> <li>Client-side encryption if the client wants to perform encryption/decryption itself</li> </ul> </li> <li>Access Controls: IAM policies to regulate access to the SNS API</li> <li>SNS Access Policies (similar to S3 Bucket policies)<ul> <li>Useful for multi account access to SNS topics</li> <li>Useful for allowing other services to write to an SNS topic</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/027-kinesis/","title":"Amazon Kinesis","text":""},{"location":"cloud/aws/services/027-kinesis/#overview","title":"Overview","text":"<p>Amazon Kinesis is a platform on AWS to collect, process, and analyze real-time, streaming data. It enables you to build custom applications that process or analyze streaming data for specialized needs.</p>"},{"location":"cloud/aws/services/027-kinesis/#key-features","title":"Key Features","text":"<ul> <li>Real-time data ingestion and processing</li> <li>Scalable and durable</li> <li>Multiple services: Kinesis Data Streams, Kinesis Data Firehose, Kinesis Data Analytics, Kinesis Video Streams</li> <li>Integrates with AWS Lambda, S3, Redshift, Elasticsearch, and more</li> <li>Secure with encryption and access controls</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#kinesis-services","title":"Kinesis Services","text":""},{"location":"cloud/aws/services/027-kinesis/#kinesis-data-streams","title":"Kinesis Data Streams","text":"<ul> <li>Real-time streaming data ingestion</li> <li>Custom processing with AWS Lambda or EC2 consumers</li> <li>Data is stored in shards (scalable units of throughput)</li> <li>Data retention: 24 hours (default), up to 7 days</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#kinesis-data-firehose","title":"Kinesis Data Firehose","text":"<ul> <li>Load streaming data to S3, Redshift, Elasticsearch, or Splunk</li> <li>Automatic scaling and data transformation</li> <li>Near real-time delivery</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#kinesis-data-analytics","title":"Kinesis Data Analytics","text":"<ul> <li>Real-time analytics on streaming data using SQL</li> <li>Integrates with Kinesis Data Streams and Firehose</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#kinesis-video-streams","title":"Kinesis Video Streams","text":"<ul> <li>Ingest and process video streams in real time</li> <li>Supports live and on-demand video analytics</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#security","title":"Security","text":"<ul> <li>Server-side encryption with AWS KMS</li> <li>Access control with IAM policies</li> <li>VPC endpoints for private connectivity</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#monitoring-logging","title":"Monitoring &amp; Logging","text":"<ul> <li>CloudWatch metrics for stream health and throughput</li> <li>CloudTrail for API call auditing</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#best-practices","title":"Best Practices","text":"<ul> <li>Use multiple shards for high-throughput streams</li> <li>Monitor stream metrics and set up alerts</li> <li>Secure streams with IAM and encryption</li> <li>Use enhanced fan-out for high-performance consumers</li> <li>Integrate with Lambda for serverless processing</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#kinesis-data-streams_1","title":"Kinesis Data Streams","text":"<ul> <li>Retention between 1 day to 365 days</li> <li>Ability to reprocess (replay) data</li> <li>Once data is inserted in Kinesis, it can\u2019t be deleted (immutability)</li> <li>Data that shares the same partition goes to the same shard (ordering)</li> <li>Producers: AWS SDK, Kinesis Producer Library (KPL), Kinesis Agent</li> <li>Consumers:<ul> <li>Write your own: Kinesis Client Library (KCL), AWS SDK</li> <li>Managed: AWS Lambda, Kinesis Data Firehose, Kinesis Data Analytics</li> </ul> </li> <li>Capacity Modes<ul> <li>Provisioned mode:<ul> <li>You choose the number of shards provisioned, scale manually or using API</li> <li>Each shard gets 1MB/s in (or 1000 records per second)</li> <li>Each shard gets 2MB/s out (classic or enhanced fan-out consumer)</li> <li>You pay per shard provisioned per hour</li> </ul> </li> <li>On-demand mode:<ul> <li>No need to provision or manage the capacity</li> <li>Default capacity provisioned (4 MB/s in or 4000 records per second)</li> <li>Scales automatically based on observed throughput peak during the last 30 days</li> <li>Pay per stream per hour &amp; data in/out per GB</li> </ul> </li> </ul> </li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#kinesis-data-analytics_1","title":"Kinesis Data Analytics","text":"<ul> <li>Real-time analytics on Kinesis Streams using SQL</li> <li>Pay for actual consumption, no need to pre-provision anything</li> <li>Can create streams from query results</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#kinesis-firehose","title":"Kinesis Firehose","text":"<ul> <li>Used for ETL, can load data into Redshift, S3, ElasticSearch etc.</li> <li>Near Real Time<ul> <li>Buffer interval: 0 seconds (no buffering) to 900 seconds</li> <li>Buffer size: minimum 1MB</li> </ul> </li> <li>Fully managed, automatic scaling</li> <li>Low latency (60 seconds)</li> <li>Pay for the amount of data which goes through Firehose</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#sqs-vs-sns-vs-kinesis","title":"SQS vs SNS vs Kinesis","text":"Consumer pulls data Data is pushed to many subscribers Consumer pulls data Data is deleted after consumed Up to 10 million subscribers Can have as many consumer as we want Can have as many consumer as we want Data os not persisted Can replay data No need to provision throughput Pub/Sub Used for big data analytics and ETL No ordering (except FIFO) Up to 100k topics Data expires after X days Individual message delay capability No need to provision throughput Must provision throughput Integrates with SQS for fan-out architecture Ordering at the shard level"},{"location":"cloud/aws/services/027-kinesis/#kinesis-operations","title":"Kinesis Operations","text":"<ul> <li>Shard Splitting<ul> <li>Used to increase the Stream capacity (1 MB/s data in per shard)</li> <li>Used to divide a \u201chot shard\u201d</li> <li>The old shard is closed and will be deleted once the data is expired</li> <li>No automatic scaling (manually increase/decrease capacity)</li> <li>Can\u2019t split into more than two shards in a single operation</li> </ul> </li> <li>Merging Shards<ul> <li>Decrease the Stream capacity and save costs</li> <li>Can be used to group two shards with low traffic (cold shards)</li> <li>Old shards are closed and will be deleted once the data is expired</li> <li>Can\u2019t merge more than two shards in a single operation</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#kinesis-api","title":"Kinesis API","text":"<ul> <li>PutRecord API: requires a partition key which gets hashed.</li> <li>Partition key should be highly distributed (otherwise a shard can become overwhelmed)</li> <li>PutRecord accepts batches, cost can be reduced</li> <li>PutRecord throws ProvisionedThroughputExceeded in case of capacity is exceeded. Solution: exponential back-off, more shards, ensure that partition key is highly distributed</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#kinesis-client-library-kcl","title":"Kinesis Client Library (KCL)","text":"<ul> <li>It is a Java library that helps read record from a Kinesis Data Stream with distributed applications sharing the read workload</li> <li>Each shard should be read by only one KCL instance!</li> <li>Progress checkpoint is written to DynamoDB</li> <li>Records are read in order at the shard level</li> <li>KCL can run on EC2, Elastic Beanstalk, and on-premises</li> </ul>"},{"location":"cloud/aws/services/027-kinesis/#shards","title":"Shards","text":"<ul> <li>A stream can contain one or more shards</li> <li>Write capacity: 1MB/s or 1000 messages per shard</li> <li>Read capacity: 2MB/s per shard</li> <li>Billing is per shard</li> <li>Records are ordered per shard</li> </ul> <pre><code>flowchart TD\n\n\u00a0 \u00a0 A[Kinesis Data Streams] --&gt; C\n\n\u00a0 \u00a0 B[Kinesis Firehose] --&gt; C\n\n\u00a0 \u00a0 C[(Kinesis Data Analytics)] --&gt; D[Kinesis Data Streams]\n\n\u00a0 \u00a0 C --&gt; E[Kinesis Firehose]\n\n\u00a0 \u00a0 E --&gt; F[S3]\n\n\u00a0 \u00a0 E --&gt; G[Redshift]\n\n\u00a0 \u00a0 D --&gt; H[AWS Lambda]\n\n\u00a0 \u00a0 D --&gt; I[AWS Applications] </code></pre>"},{"location":"cloud/aws/services/028-elastic-beanstalk/","title":"AWS Elastic Beanstalk","text":""},{"location":"cloud/aws/services/028-elastic-beanstalk/#overview","title":"Overview","text":"<p>AWS Elastic Beanstalk is a Platform as a Service (PaaS) that makes it easy to deploy, manage, and scale web applications and services. It handles the provisioning of infrastructure, load balancing, auto-scaling, and application health monitoring.</p>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#key-features","title":"Key Features","text":"<ul> <li>Supports multiple programming languages and platforms</li> <li>Automated provisioning and management of resources</li> <li>Integrated load balancing and auto-scaling</li> <li>Application health monitoring and logging</li> <li>Customizable environment configuration</li> <li>Zero-downtime deployments with rolling updates</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#supported-platforms","title":"Supported Platforms","text":"<ul> <li>Java, .NET, PHP, Node.js, Python, Ruby, Go, Docker</li> <li>Preconfigured and custom platforms</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#architecture","title":"Architecture","text":"<ul> <li>Environments: Each application runs in one or more environments (web server or worker)</li> <li>Environment Tiers: Web server (HTTP/S) or worker (background tasks)</li> <li>Environment Resources: EC2, ELB, Auto Scaling, RDS, S3, CloudWatch, IAM</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#deployment","title":"Deployment","text":"<ul> <li>Supports rolling, rolling with additional batch, immutable, and blue/green deployments</li> <li>Application versions managed and stored in S3</li> <li>Environment configuration via configuration files (.ebextensions)</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#monitoring-logging","title":"Monitoring &amp; Logging","text":"<ul> <li>Integrated with CloudWatch for metrics and alarms</li> <li>Application and environment logs accessible via console or CLI</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#security","title":"Security","text":"<ul> <li>IAM roles for environment resources</li> <li>VPC support for network isolation</li> <li>HTTPS support with SSL certificates</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#best-practices","title":"Best Practices","text":"<ul> <li>Use environment variables for configuration</li> <li>Separate dev, test, and prod environments</li> <li>Monitor application and environment health</li> <li>Use rolling or immutable deployments for zero downtime</li> <li>Secure environments with IAM and VPC</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#components","title":"Components","text":"<p>Elastic Beanstalk has three components: - Application: collection of Elastic Beanstalk components (environments, versions, configurations, \u2026) - Application Version: an iteration of your application code - Environment     - Collection of AWS resources running an application version (only one application version at a time)     - Tiers: Web Server Environment Tier &amp; Worker Environment Tier     - You can create multiple environments (dev, test, prod, \u2026)</p>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#three-architecture-models","title":"Three architecture models:","text":"<ul> <li>Single instance deployment: great for development and testing purposes</li> <li>LB + ASG: great for production or staging web applications=</li> <li>ASG only: great for non-web apps in production</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#deployment_1","title":"Deployment","text":"<ul> <li>You deploy application versions to environments and can promote application versions to the next environment</li> <li>Rollback feature to previous application versions</li> <li>Full control over the lifecycle of environments</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#deployment-modes","title":"Deployment Modes","text":"<ul> <li>Single Instance mode: Great for development environment</li> <li>High Availability with Load Balancer mode: Great for production environments</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#deployment-options-for-updates","title":"Deployment Options for Updates","text":"<ul> <li>All at once (deploy on the go)<ul> <li>Fastest, but instances aren't available to serve traffic for a while (longer downtime)</li> <li>No additional cost</li> </ul> </li> <li>Rolling update<ul> <li>Update a few (bucket) instances at a time, and then move onto the next bucket when the current ones become healthy</li> <li>You can set the bucket size</li> <li>Application will run below capacity during update</li> <li>At some point, the application will run both versions simultaneously</li> <li>Can be a very long deployment time depending on number of instances running</li> <li>No additional cost</li> </ul> </li> <li>Rolling update with additional batches<ul> <li>Similar to rolling updates but you spin up new instances to move the batch (so the old application is still available)</li> <li>Application is running at capacity</li> <li>You can set the bucket size</li> <li>Additional batches are removed at the end of the deployment</li> <li>Small additional cost (due to additional running instances)</li> <li>Great for production environments</li> </ul> </li> <li>Immutable<ul> <li>Spins up new instances in a new ASG, deploys versions to these instances and then swaps all the instances when everything is healthy</li> <li>Zero downtime</li> <li>New code is deployed on new instances in a temporary ASG</li> <li>High cost, double capacity</li> <li>Longest deployment</li> <li>Quick rollback in case of failures (new ASG will be terminated)</li> <li>Best for production environments</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#deployment-mechanism","title":"Deployment Mechanism","text":"<ul> <li>Describe dependencies<ul> <li>(requirements.txt for python, package.json for node.js)</li> </ul> </li> <li>Package code as zip</li> <li>Zip file is uploaded to each EC2 machine</li> <li>Each EC2 machine resolves dependencies (SLOW)</li> <li>Optimization in case of long deployments:<ul> <li>Package dependencies with source code to improve deployment performance and speed</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#blue-green-deployment","title":"Blue / Green Deployment","text":"<ul> <li>This is not a direct feature of Elastic Beanstalk</li> <li>Zero downtime and release facility</li> <li>Create a new staging environment and deploy your newest version there</li> <li>The new environment (green) can be validated independently and roll back if there's issues</li> <li>Route 53 can be setup using weighted policies to redirect a little bit of traffic to the staging environment</li> <li>Using the elastic beanstalk console, you can \"swap URLs\" when with the testing environment</li> <li>This is a manual feature, it's not directly embedded in EB</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#elastic-beanstalk-extensions","title":"Elastic Beanstalk Extensions","text":"<ul> <li>A zip file containing our code must be deployed to Elastic Beanstalk</li> <li>All the parameters set in the UI can be configured with code using files</li> <li>Requirements:<ul> <li>in the .ebextensions/ directory in the root of source code</li> <li>YAML / JSON format</li> <li>.config extensions (example: logging.config)</li> <li>Able to modify some default settings using: option_settings</li> <li>Ability to add resources such as RDS, ElastiCache, DynamoDB, etc...</li> </ul> </li> <li>Resources managed by .ebextensions get deleted if the environment goes away</li> <li>The .ebextensions folder goes to the root of your project</li> </ul>"},{"location":"cloud/aws/services/028-elastic-beanstalk/#elastic-beanstalk-cli","title":"Elastic Beanstalk CLI","text":"<ul> <li>We can install an additional CLI called the \u201cEB cli\u201d which makes working with Beanstalk from the CLI easier</li> <li>Basic commands are:<ul> <li>eb create</li> <li>eb status</li> <li>eb health</li> <li>eb events</li> <li>eb logs</li> <li>eb open</li> <li>eb deploy</li> <li>eb config</li> <li>eb terminate</li> </ul> </li> <li>It\u2019s helpful for your automated deployment pipelines!</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/","title":"AWS Code Services","text":""},{"location":"cloud/aws/services/029-aws-code-services/#overview","title":"Overview","text":"<p>AWS provides a suite of developer tools to help you build, test, and deploy your code quickly and securely. These services support continuous integration and continuous delivery (CI/CD) workflows.</p>"},{"location":"cloud/aws/services/029-aws-code-services/#key-services","title":"Key Services","text":""},{"location":"cloud/aws/services/029-aws-code-services/#aws-codecommit","title":"AWS CodeCommit","text":"<ul> <li>Managed source control service that hosts private Git repositories</li> <li>Secure, scalable, and highly available</li> <li>Supports code collaboration and version control</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#aws-codebuild","title":"AWS CodeBuild","text":"<ul> <li>Fully managed build service</li> <li>Compiles source code, runs tests, and produces deployable artifacts</li> <li>Scales automatically and integrates with other AWS services</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#aws-codedeploy","title":"AWS CodeDeploy","text":"<ul> <li>Automates code deployments to EC2, Lambda, and on-premises servers</li> <li>Supports blue/green and rolling deployments</li> <li>Tracks deployment health and rollback</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#aws-codepipeline","title":"AWS CodePipeline","text":"<ul> <li>Continuous integration and delivery service</li> <li>Automates build, test, and deploy phases</li> <li>Integrates with CodeCommit, CodeBuild, CodeDeploy, and third-party tools</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#aws-codeartifact","title":"AWS CodeArtifact","text":"<ul> <li>Artifact repository for software packages</li> <li>Supports npm, Maven, PyPI, and NuGet</li> <li>Secure and scalable package management</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#aws-codestar","title":"AWS CodeStar","text":"<ul> <li>Unified interface for managing software development activities</li> <li>Integrates with Code* services and third-party tools</li> <li>Provides project templates and dashboards</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#best-practices","title":"Best Practices","text":"<ul> <li>Use managed services for scalability and reliability</li> <li>Automate build, test, and deployment workflows</li> <li>Monitor pipeline health and set up alerts</li> <li>Secure code repositories and artifacts with IAM and encryption</li> <li>Use version control and branching strategies</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#code-build","title":"Code Build","text":"<ul> <li>Fully managed build service</li> <li>Alternative to other build tools such as Jenkins</li> <li>Continuous scaling (no servers to manage or provision \u2013 no build queue)</li> <li>Pay for usage: the time it takes to complete the builds</li> <li>Leverages Docker under the hood for reproducible builds</li> <li>Possibility to extend capabilities leveraging our own base Docker images</li> <li>Secure: Integration with KMS for encryption of build artifacts, IAM for build permissions, and VPC for network security, CloudTrail for API calls logging</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#overview_1","title":"Overview","text":"<ul> <li>Source Code from GitHub / CodeCommit / CodePipeline / S3...</li> <li>Build instructions can be defined in code<ul> <li>buildspec.yml file</li> </ul> </li> <li>Output logs to Amazon S3 &amp; AWS CloudWatch Logs</li> <li>Metrics to monitor CodeBuild statistics</li> <li>Use CloudWatch Events to detect failed builds and trigger notifications - Use CloudWatch Alarms to notify if you need \u201cthresholds\u201d for failures</li> <li>CloudWatch Events / AWS Lambda as a Glue</li> <li>SNS notifications</li> <li>Ability to reproduce CodeBuild locally to troubleshoot in case of errors</li> <li>Pipelines can be defined within CodePipeline or CodeBuild itself</li> <li>Supported Environments<ul> <li>Java</li> <li>Ruby</li> <li>Python</li> <li>Go</li> <li>Node.js</li> <li>Android</li> <li>.NET Core</li> <li>PHP</li> <li>Docker : extend any environment you like</li> </ul> </li> <li>Local Build<ul> <li>In case of need of deep troubleshooting beyond logs...</li> <li>You can run CodeBuild locally on your desktop (after installing Docker) - For this, leverage the CodeBuild Agent</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#working-mode","title":"Working Mode","text":"<ul> <li>Two ways to run CodeBuild<ul> <li>Source Code<ul> <li>buildspec.yml</li> </ul> </li> <li>By building a Docker image<ul> <li>AWS Managed or Custom</li> </ul> </li> </ul> </li> <li>A CodeBuild Container is created</li> <li>You can add an optional S3 Cache bucket<ul> <li>Cache while you do multiple builds<ul> <li>dependencies</li> <li>artifacts</li> </ul> </li> </ul> </li> <li>Output to an S3 bucket</li> <li>Save logs using CloudWatch or S3</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#buildspec-file","title":"BuildSpec File","text":"<ul> <li>buildspec.yml file must be at the root of your code</li> <li>Define environment variables:<ul> <li>Plaintext variables</li> <li>Secure secrets: use SSM Parameter store</li> </ul> </li> <li>Phases (specify commands to run):<ul> <li>Install: install dependencies you may need for your build</li> <li>Pre build: final commands to execute before build</li> <li>Build: actual build commands</li> <li>Post build: finishing touches (zip output for example)</li> </ul> </li> <li>Artifacts: What to upload to S3 (encrypted with KMS)</li> <li>Cache: Files to cache (usually dependencies) to S3 for future build speedup</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#code-deploy","title":"Code Deploy","text":"<ul> <li>Deploy your application automatically to EC2 instances, On-premise servers, lambda functions, ECS services, etc</li> <li>A file named appspec.yml defines how the deployment happens</li> <li>Gradual deployment control</li> <li>These instances are not managed by Elastic Beanstalk</li> <li>There are several ways to handle deployments using open source tools (Ansible, Terraform, Chef, Puppet, etc...)<ul> <li>CodeDeploy is the alternative to these tools</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#working-mode_1","title":"Working Mode","text":"<ul> <li>Each EC2 Machine (or On Premise machine) must be running the CodeDeploy Agent</li> <li>The agent is continuously polling AWS CodeDeploy for work to do</li> <li>CodeDeploy sends appspec.yml file.</li> <li>Application is pulled from GitHub or S3</li> <li>EC2 will run the deployment instructions</li> <li>CodeDeploy Agent will report of success / failure of deployment on the instance</li> </ul> <p>Additional information - EC2 instances are grouped by deployment group (dev / test / prod) - Lots of flexibility to define any kind of deployments - CodeDeploy can be chained into CodePipeline and use artifacts from there - CodeDeploy can re-use existing setup tools, works with any application, auto-scaling integration - Note: Blue / Green only works with EC2 instances (not on premise) - Support for AWS Lambda deployments - CodeDeploy does not provision resources</p>"},{"location":"cloud/aws/services/029-aws-code-services/#primary-components","title":"Primary Components","text":"<ul> <li>Application: unique name</li> <li>Compute platform: EC2/On-Premise or Lambda</li> <li>Deployment configuration: Deployment rules for success / failures<ul> <li>EC2/On-Premise: you can specify the minimum number of healthy instances for the deployment.</li> <li>AWS Lambda: specify how traffic is routed to your updated Lambda function versions.</li> </ul> </li> <li>Deployment group: group of tagged instances (allows to deploy gradually)</li> <li>Deployment type: In-place deployment or Blue/green deployment:</li> <li>IAM instance profile: need to give EC2 the permissions to pull from S3 / GitHub</li> <li>Application Revision: application code + appspec.yml file</li> <li>Service role: Role for CodeDeploy to perform what it needs</li> <li>Target revision: Target deployment application version</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#appspec-file","title":"AppSpec File","text":"<p>The AppSpec File is used to define the parameters that will be used for a CodeDeploy deployment. The file structure depends on whether you are deploying to Lambda or EC2 / On Premises. - File section: how to source and copy from S3 / GitHub to filesystem - Hooks: set of instructions to do to deploy the new version (hooks can have timeouts).The order is:     - Traffic Blocking Hooks         - BeforeBlockTraffic: Run tasks on instances before they are deregistered from a load balancer.         - BlockTraffic: Deregister instances from a load balancer         - AfterBlockTraffic: Run tasks on instances after they are Deregistered from a load balancer.     - ApplicationStop: Gracefully stop the application in preparation for deploying the new revision     - DownloadBundle: The CodeDeploy agent copies the application revision files to a temporary location.     - BeforeInstall: Details of any pre-installation scripts, e.g. backing up the current version, decrypting files.     - Install: The CodeDeploy agent copies the application revision files from their temporary location to their correct location     - AfterInstall: Details of any post-installation scripts (e.g. configuration tasks, change file permissions, etc.)     - ApplicationStart: Restarts any services that were stopped during ApplicationStop.     - ValidateService: Details of any tests to validate the service.     - Traffic Allowances Hooks         - BeforeAllowTraffic: Run tasks on instances before they are registered with a load balancer.         - AllowTraffic: Register instances with a load balancer.         - AfterAllowTraffic: Run tasks on instances after they are registered with a load balancer.</p>"},{"location":"cloud/aws/services/029-aws-code-services/#deployment","title":"Deployment","text":""},{"location":"cloud/aws/services/029-aws-code-services/#deployment-config","title":"Deployment Config","text":"<ul> <li>Configs:<ul> <li>One a time: one instance at a time, one instance fails =&gt; deployment stops</li> <li>Half at a time: 50%</li> <li>All at once: quick but no healthy host, downtime. Good for dev</li> <li>Custom: min healthy host = 75%</li> </ul> </li> <li>Failures:<ul> <li>Instances stay in \u201cfailed state\u201d</li> <li>New deployments will first be deployed to \u201cfailed state\u201d instances</li> <li>To rollback: redeploy old deployment or enable automated rollback for failures</li> </ul> </li> <li>Deployment Targets:<ul> <li>Set of EC2 instances with tags</li> <li>Directly to an ASG</li> <li>Mix of ASG / Tags, so you can build deployment segments</li> <li>Customization in scripts with DEPLOYMENT_GROUP_NAME environment variables</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#deployment-types","title":"Deployment Types","text":"<ul> <li>In place deployment<ul> <li>half the time</li> </ul> </li> <li>Blue / Green Deployment<ul> <li>Attached to one auto-scaling group of instances</li> <li>new auto-scaling group of instances created (green)</li> <li>if it passes the health checks, version 1 (original asg) is deleted (blue)</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#lambda-ecs","title":"Lambda &amp; ECS","text":"<ul> <li>Can help traffic shift for AWS Lambda and deployment of new task definition for ECS </li> <li>only with Blue/Green deployment Traffic Shifting Options:</li> <li>Linear: grow traffic every N minutes until 100%</li> <li>Canary: try X percent then 100%</li> <li>AllAtOnce: immediate</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#redeploy-and-rollbacks","title":"Redeploy and Rollbacks","text":"<ul> <li>Rollback = redeploy a previously deployed revision of your application</li> <li>Deployments can be rolled back:<ul> <li>Automatically \u2013 rollback when a deployment fails or rollback when a CloudWatch Alarm thresholds are met</li> <li>Manually</li> </ul> </li> <li>Disable Rollbacks \u2014 do not perform rollbacks for this deployment</li> <li>If a roll back happens, CodeDeploy redeploys the last known good revision as a new deployment</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#code-pipeline","title":"Code Pipeline","text":"<p>AWS CodePipeline is a fully managed Continuous Integration and Continuous Delivery service. CodePipeline allows you to model your release process as a workflow or pipeline made up of different tasks, such as the simple workflow represented below: Code Update -&gt; Build -&gt; Test -&gt; Deploy</p> <p>Notes: - Continuous delivery - Visual workflow - Source: GitHub, CodeCommit, Amazon S3 - Build: CodeBuild, Jenkins, etc... - Load Testing: 3<sup>rd</sup> par ty tools - Deploy: AWS CodeDeploy, Beanstalk, CloudFormation, ECS... - Made of stages:     - Each stage can have sequential actions and / or parallel actions     - Stages examples: Build, Test, Deploy, Load Test, etc...     - Manual approval can be defined at any stage</p>"},{"location":"cloud/aws/services/029-aws-code-services/#artifacts","title":"Artifacts","text":"<ul> <li>Each pipeline stage can create \u201dartifacts\u201d</li> <li>Artifacts\u00a0are Amazon S3 buckets that CodePipeline uses to store artifacts used by pipelines. When you first use the CodePipeline console in a region to create a pipeline, CodePipeline automatically generates this S3 bucket in the AWS region.</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>CodePipeline state changes happen in\u00a0AWS CloudWatch Events, which can in return create SNS notifications.</li> <li>Ex: you can create events for failed pipelines \u2022 Ex: you can create events for cancelled stages</li> <li>If CodePipeline fails a stage, your pipeline stops, and you can get information in the console</li> <li>AWS CloudTrail can be used to audit AWS API calls</li> <li>If Pipeline can\u2019t perform an action, make sure the \u201cIAM Service Role\u201d attached does have enough permissions (IAM Policy)</li> <li>Make sure to have Versions enabled in the S3 bucket</li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#code-commit","title":"Code Commit","text":"<p>Code Commit is a fully managed source control service that enables companies to host secure and highly scalable private Git repositories</p> <p>Notes: - Version Control\u00a0is the ability to understand changes that happened to the code over time (and possibly roll back) - This is enabled by using a version control system such as Git - A git repository can live on your machine or on a central online repository - Benefits:     - Collaborate with a team of developers     - Make sure the code is backed-up somewhere     - Makes sure it's fully viewable and auditable - AWS CodeCommit     - Private git repositories     - No size limits on the repositories (scale seamlessly)     - Fully managed and highly available     - The code is only in your AWS cloud account     - Increased security and compliance     - Secure (encrypted access control, etc) - CodeCommit Security     - Interactions are done using git     - Authentication with Git         - SSH Keys: AWS Users can configure SSH keys in their IAM Console         - HTTPS: Done through AWS CLI Authentication helper or generate HTTPS credentials         - MFA: Multi-Factor Authentication     - Authorization with Git         - IAM Policies manage user / roles rights to the repositories     - Encryption         - Repositories are automatically encrypted at rest using KMS         - Encrypted in transit (can only user HTTPS or SSH both secure)     - Cross Account access:         - Do not share your SSH keys         - Do not share your AWS credentials         - Use IAM Role in your AWS account and use AWS STS (with AssumeRole API)</p>"},{"location":"cloud/aws/services/029-aws-code-services/#notifications","title":"Notifications","text":"<ul> <li>You can trigger notifications in CodeCommit using AWS SNS(Simple Notification Service) or AWS Lambda or AWS CloudWatch Event Rules</li> <li>Use cases for notifications SNS / AWS Lambda notifications:<ul> <li>Deletion of branches</li> <li>Trigger for pushes that happens in master branch</li> <li>Notify external Build System</li> <li>Trigger AWS Lambda function to perform codebase analysis (maybe credentials got committed in the code?)</li> </ul> </li> <li>Use cases for CloudWatch Event Rules:<ul> <li>Trigger for pull request updates (created / updated / deleted / commented)</li> <li>Commit comment events</li> <li>CloudWatch Event Rules goes into an SNS topic</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/029-aws-code-services/#exam-tips","title":"Exam Tips","text":"<ul> <li>What are the MINIMUM properties required in the 'resources' section of the AppSpec file for CodeDeploy to deploy the function successfully?<ul> <li>name, alias, currentversion, and targetversion</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/030-cloudformation/","title":"AWS CloudFormation","text":""},{"location":"cloud/aws/services/030-cloudformation/#overview","title":"Overview","text":"<p>CloudFormation is a declarative way of outlining your AWS Infrastructure. It allows you to create and manage AWS resources by treating infrastructure as code.</p>"},{"location":"cloud/aws/services/030-cloudformation/#key-features","title":"Key Features","text":"<ul> <li>Infrastructure as Code with full resource coverage</li> <li>Automated resource provisioning and management</li> <li>Version control support for infrastructure</li> <li>Cost tracking and optimization capabilities</li> <li>Built-in dependency management</li> <li>Extensible through custom resources</li> </ul>"},{"location":"cloud/aws/services/030-cloudformation/#key-concepts","title":"Key Concepts","text":""},{"location":"cloud/aws/services/030-cloudformation/#templates","title":"Templates","text":"<ul> <li>JSON or YAML text files containing infrastructure specifications</li> <li>Define AWS resources and their configurations</li> <li>Support dynamic parameters and conditions</li> <li>Enable resource reuse across deployments</li> </ul>"},{"location":"cloud/aws/services/030-cloudformation/#stacks","title":"Stacks","text":"<ul> <li>Collection of AWS resources managed as a single unit</li> <li>Created, updated, and deleted based on template changes</li> <li>Support rollback on failure</li> <li>Enable organized resource management</li> </ul>"},{"location":"cloud/aws/services/030-cloudformation/#stacksets","title":"StackSets","text":"<ul> <li>Deploy stacks across multiple accounts and regions</li> <li>Manage infrastructure at scale</li> <li>Support centralized deployment management</li> </ul>"},{"location":"cloud/aws/services/030-cloudformation/#change-sets","title":"Change Sets","text":"<ul> <li>Preview proposed changes before execution</li> <li>Validate infrastructure modifications</li> <li>Ensure safe deployment processes</li> </ul>"},{"location":"cloud/aws/services/030-cloudformation/#components","title":"Components","text":""},{"location":"cloud/aws/services/030-cloudformation/#building-blocks","title":"Building Blocks","text":"<ol> <li>Resources (MANDATORY)</li> <li>AWS resources declared in the template</li> <li>Core component of CloudFormation</li> <li>Supports most AWS services</li> <li>Parameters</li> <li>Dynamic inputs for templates</li> <li>Enable template reuse</li> <li>Support validation and constraints</li> <li>Mappings</li> <li>Static variables within templates</li> <li>Used for environment-specific values</li> <li>Support conditional resource configuration</li> <li>Outputs</li> <li>Export values for cross-stack reference</li> <li>Enable stack integration</li> <li>Support resource sharing</li> <li>Conditions</li> <li>Control resource creation</li> <li>Enable environment-specific deployments</li> <li>Support dynamic configuration</li> <li>Metadata</li> <li>Additional template information</li> <li>Support template documentation</li> <li>Enable additional functionality</li> </ol>"},{"location":"cloud/aws/services/030-cloudformation/#template-helpers","title":"Template Helpers","text":"<ol> <li>References</li> <li>Link resources within templates</li> <li>Enable dynamic value resolution</li> <li>Support resource dependencies</li> <li>Functions</li> <li>Perform operations within templates</li> <li>Enable dynamic configuration</li> <li>Support complex scenarios</li> </ol>"},{"location":"cloud/aws/services/030-cloudformation/#operations","title":"Operations","text":""},{"location":"cloud/aws/services/030-cloudformation/#deployment-methods","title":"Deployment Methods","text":"<ol> <li>Manual Deployment</li> <li>Using CloudFormation Designer</li> <li>Console-based parameter input</li> <li>Visual template editing</li> <li>Automated Deployment</li> <li>Using AWS CLI</li> <li>Template file-based</li> <li>Supports CI/CD integration</li> </ol>"},{"location":"cloud/aws/services/030-cloudformation/#stack-management","title":"Stack Management","text":"<ul> <li>Creation: Deploy new infrastructure</li> <li>Updates: Modify existing resources</li> <li>Deletion: Remove infrastructure</li> <li>Monitoring: Track stack status</li> </ul>"},{"location":"cloud/aws/services/030-cloudformation/#best-practices","title":"Best Practices","text":"<ul> <li>Version control templates</li> <li>Use stack policies for resource protection</li> <li>Implement change sets for validation</li> <li>Document templates thoroughly</li> <li>Use cross-stack references where appropriate</li> <li>Implement proper tagging strategy</li> </ul>"},{"location":"cloud/aws/services/030-cloudformation/#security","title":"Security","text":"<ul> <li>Use IAM roles for stack operations</li> <li>Implement stack policies</li> <li>Encrypt sensitive parameters</li> <li>Regular security audits</li> <li>Access logging and monitoring</li> </ul>"},{"location":"cloud/aws/services/030-cloudformation/#error-handling","title":"Error Handling","text":"<ul> <li>Stack Creation Failures</li> <li>Default rollback on failure</li> <li>Option to disable rollback for troubleshooting</li> <li>Detailed error logging</li> <li>Stack Update Failures</li> <li>Automatic rollback to previous state</li> <li>Error logs for troubleshooting</li> <li>Support for manual intervention</li> </ul>"},{"location":"cloud/aws/services/030-cloudformation/#example-template","title":"Example Template","text":"<pre><code>AWSTemplateFormatVersion: \"2010-09-09\"\nDescription: \"Template to create an EC2 instance\"\nMetadata:\n  Instances:\n    Description: \"Web Server Instance\"\nParameters:\n  EnvType:\n    Description: \"Environment type\"\n    Type: String\n    AllowedValues:\n      - prod\n      - test\nConditions:\n  CreateProdResources: !Equals [ !Ref EnvType, prod ]\nMappings:\n  RegionMap:\n    eu-west-1:\n      \"ami\": \"ami-394534954395e\"\nTransform:\n  Name: 'AWS::Include'\n  Parameters:\n    Location: \"s3://MyAmazonS3BucketName/MyFileName.yaml\"\nResources:\n  EC2Instance:\n    Type: AWS::EC2::Instance\n    Properties:\n      InstanceType: t2.micro\n      ImageId: ami-0db1d6c9349334334\nOutputs:\n  InstanceID:\n    Description: The Instance ID\n    Value: !Ref EC2Instance\n</code></pre>"},{"location":"cloud/aws/services/030-cloudformation/#exam-tips","title":"Exam Tips","text":"<ul> <li>The stack may be stuck in the DELETE_FAILED state because the dependent object (security group), can't be deleted. This can be for many reasons, for example, the security group could have an ENI attached that\u2019s not part of the CloudFormation stack. To delete the stack you must choose to delete the stack in the console and then select to retain the resource(s) that failed to delete. This can also be achieved from the AWS CLI:</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/","title":"Amazon CloudWatch","text":""},{"location":"cloud/aws/services/031-cloudwatch/#overview","title":"Overview","text":"<p>Amazon CloudWatch is a monitoring and observability service for AWS resources and applications. It provides data and actionable insights to monitor applications, understand and respond to system-wide performance changes, and optimize resource utilization.</p>"},{"location":"cloud/aws/services/031-cloudwatch/#key-features","title":"Key Features","text":"<ul> <li>Collects and tracks metrics, logs, and events</li> <li>Set alarms and automate actions</li> <li>Visualize data with dashboards</li> <li>Integrates with most AWS services</li> <li>Supports custom metrics and logs</li> <li>Enables anomaly detection and insights</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#metrics","title":"Metrics","text":"<ul> <li>Built-in metrics for AWS services (EC2, RDS, Lambda, etc.)</li> <li>Custom metrics for application-specific monitoring</li> <li>Granularity: 1-minute (standard), 1-second (high-resolution)</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#cloudwatch-ec2-detailed-monitoring","title":"CloudWatch EC2 Detailed monitoring","text":"<ul> <li>EC2 instance metrics have metrics \u201cevery 5 minutes\u201d</li> <li>Host Level metrics consist of:<ul> <li>CPU</li> <li>Network</li> <li>Disk</li> <li>Status Check</li> </ul> </li> <li>With detailed monitoring (for a cost), you get data \u201cevery 1 minute\u201d</li> <li>Use detailed monitoring if you want to more prompt scale your ASG!</li> <li>The AWS Free Tier allows us to have 10 detailed monitoring metrics</li> <li>Note:\u00a0EC2 Memory usage is by default not pushed (must be pushed from inside the instance as a custom metric)</li> <li>Note: RAM Utilization is a custom metric! By default, EC2 monitoring is 5 minute intervals, unless you enable detailed monitoring, which will then make it 1 minute intervals</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#aws-cloudwatch-custom-metrics","title":"AWS CloudWatch Custom Metrics","text":"<ul> <li>Possibility to define and send your own custom metrics to CloudWatch</li> <li>Ability to use dimensions (attributes) to segment metrics<ul> <li>Instance.id</li> <li>Environment.name</li> </ul> </li> <li>Metric resolution:<ul> <li>Standard: 1 minute</li> <li>High Resolution: up to 1 second (StorageResolution API parameter - Higher cost)</li> </ul> </li> <li>Use API call\u00a0PutMetricData</li> <li>Use exponential back off in case of throttle errors</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#logs","title":"Logs","text":"<ul> <li>Centralized log collection and storage</li> <li>Real-time log streaming and analysis</li> <li>Log groups and log streams for organization</li> <li>Metric filters to extract insights from logs</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#aws-cloudwatch-logs","title":"AWS CloudWatch Logs","text":"<ul> <li>Applications can send logs to CloudWatch using the SDK</li> <li>CloudWatch can collect log from:<ul> <li>Elastic Beanstalk: collection of logs from application</li> <li>ECS: collection from containers</li> <li>AWS Lambda: collection from function logs</li> <li>VPC Flow Logs:VPC specific logs</li> <li>API Gateway</li> <li>CloudTrail based on filter</li> <li>CloudWatch log agents: for example on EC2 machines</li> <li>Route53: Log DNS queries</li> </ul> </li> <li>CloudWatch Logs can go to:<ul> <li>Batch exporter to S3 for archival</li> <li>Stream to ElasticSearch cluster for further analytics</li> </ul> </li> <li>CloudWatch Logs can use filter expressions</li> <li>Logs storage architecture:<ul> <li>Log groups: arbitrary name, usually representing an application. Log expiration policy should be defined at this level.</li> <li>Log stream: instances within application / log files / containers</li> </ul> </li> <li>Can define log expiration policies (never expire, 30 days, etc..)</li> <li>Using the AWS CLI we can tail CloudWatch logs</li> <li>To send logs to CloudWatch, make sure IAM permissions are correct!</li> <li>Security: encryption of logs using KMS at the Group Level</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#alarms","title":"Alarms","text":"<ul> <li>Monitor metrics and trigger actions (SNS, Lambda, Auto Scaling)</li> <li>Set thresholds for alerting</li> <li>Composite alarms for complex conditions</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#alarms-are-used-to-trigger-notifications-for-any-metric","title":"Alarms are used to trigger notifications for any metric","text":"<ul> <li>Alarms can go to Auto Scaling, EC2 Actions, SNS notifications</li> <li>Various options (sampling, %, max, min, etc...)</li> <li>Alarm States:<ul> <li>OK</li> <li>INSUFFICIENT_DATA</li> <li>ALARM</li> </ul> </li> <li>Period:<ul> <li>Length of time in seconds to evaluate the metric</li> <li>High resolution custom metrics: can only choose 10 sec or 30 sec</li> </ul> </li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#dashboards","title":"Dashboards","text":"<ul> <li>Visualize metrics and logs in customizable dashboards</li> <li>Share dashboards across teams</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#events","title":"Events","text":"<ul> <li>Detect and respond to changes in AWS resources</li> <li>Automate workflows with EventBridge (CloudWatch Events)</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#aws-cloudwatch-events","title":"AWS CloudWatch Events","text":"<ul> <li>Schedule: Cron jobs</li> <li>Event Pattern: Event rules to react to a service doing something<ul> <li>Ex: CodePipeline state changes</li> </ul> </li> <li>Triggers to Lambda functions, SQS/SNS/Kinesis Messages</li> <li>CloudWatch Event creates a small JSON document to give information about the change</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#insights-anomaly-detection","title":"Insights &amp; Anomaly Detection","text":"<ul> <li>Automatic detection of metric anomalies</li> <li>Log Insights for querying and analyzing log data</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#best-practices","title":"Best Practices","text":"<ul> <li>Monitor key metrics and set up alarms</li> <li>Use dashboards for real-time visibility</li> <li>Centralize log collection and analysis</li> <li>Automate responses to critical events</li> <li>Enable anomaly detection for proactive monitoring</li> </ul>"},{"location":"cloud/aws/services/031-cloudwatch/#exam-tips","title":"Exam Tips","text":"<ul> <li>Amazon CloudWatch is a monitoring service to monitor your AWS resources, as well as the applications that you run on AWS.</li> <li>Host Level Metrics Consist of:<ul> <li>CPU</li> <li>Network</li> <li>Disk</li> <li>Status Check</li> </ul> </li> <li>RAM Utilization is a custom metric</li> <li>Custom Metrics: Minimum granularity is 1 minute</li> <li>Terminated Instances: You can retrieve data from any terminated EC2 or ELB instance after its termination. CloudWatch Logs by default are stored indefinitely.</li> <li>Metric Granularity<ul> <li>1 minute for detailed monitoring</li> <li>5 minutes for standard monitoring</li> </ul> </li> <li>CloudWatch can be used on premise: Not restricted to just AWS resources. Can be on premise too. Just need to download and install the SSM agent and CloudWatch agent.</li> <li>You can create\u00a0cross-account cross-Region dashboards, which summarize your CloudWatch data from multiple AWS accounts and multiple Regions into one dashboard. From this high-level dashboard you can get a view of your entire application, and also drill down into more specific dashboards without having to log in and out of accounts or switch Regions. You can create cross-account cross-Region dashboards in the AWS Management Console and programmatically.</li> </ul>"},{"location":"cloud/aws/services/032-kms/","title":"Key Management Service (KMS)","text":""},{"location":"cloud/aws/services/032-kms/#overview","title":"Overview","text":"<p>AWS Key Management Service (AWS KMS) is a managed service that makes it easy to create and control the encryption keys used to encrypt your data. - AWS manages encryption keys for you - Integrated with IAM for authorization - Control access to your data - Audit KMS Key usage using CloudTrail - Integrated into most AWS services (EBS, S3, RDS, SSM, etc.)</p>"},{"location":"cloud/aws/services/032-kms/#encryption-types","title":"Encryption Types","text":"<ul> <li>Symmetric (AES-256):</li> <li>Single encryption key for encrypt and decrypt</li> <li>Used by most AWS services integrated with KMS</li> <li>Asymmetric (RSA &amp; ECC key pair):</li> <li>Public (Encrypt) and Private Key (Decrypt) pair</li> <li>Used for encrypt/decrypt or sign/verify operations</li> <li>Public key is downloadable, private key is not</li> </ul>"},{"location":"cloud/aws/services/032-kms/#kms-key-types","title":"KMS Key Types","text":"<ul> <li>AWS Owned Keys (free): SSE-S3, SSE-SQS, SSE-DDB</li> <li>AWS Managed Key (free): (e.g., aws/rds)</li> <li>Customer managed keys created in KMS: $1/month</li> <li>Customer managed keys imported (must be symmetric): $1/month</li> </ul>"},{"location":"cloud/aws/services/032-kms/#key-rotation","title":"Key Rotation","text":"<ul> <li>AWS-managed KMS Key: automatic every 1 year</li> <li>Customer-managed KMS Key: (must be enabled) automatic every 1 year</li> <li>Imported KMS Key: only manual rotation (using alias)</li> </ul>"},{"location":"cloud/aws/services/032-kms/#key-policies","title":"Key Policies","text":"<ul> <li>Control access to KMS keys (similar to S3 bucket policies)</li> <li>Required for access control</li> <li>Allow cross-account access (e.g., for snapshots)</li> <li>Default KMS Key Policy: full access to root user (entire AWS account)</li> <li>Custom KMS Key Policy: define users/roles for access and administration, useful for cross-account access</li> </ul>"},{"location":"cloud/aws/services/032-kms/#api-summary","title":"API Summary","text":"<ul> <li>Encrypt: encrypt up to 4 KB of data through KMS</li> <li>GenerateDataKey: generates a unique symmetric data key (DEK), returns plaintext and encrypted copy</li> <li>GenerateDataKeyWithoutPlaintext: generate a DEK (encrypted only, must use Decrypt later)</li> <li>Decrypt: decrypt up to 4 KB of data (including Data Encryption Keys)</li> <li>GenerateRandom: returns a random byte string</li> </ul>"},{"location":"cloud/aws/services/032-kms/#envelope-encryption","title":"Envelope Encryption","text":"<ul> <li>KMS Encrypt API call limit: 4 KB</li> <li>For &gt;4 KB, use Envelope Encryption</li> <li>Use GenerateDataKey API to get a plaintext data key and an encrypted data key</li> <li>Encrypt: use plaintext data key to encrypt your file, store encrypted data key with the file</li> <li>Decrypt: use KMS to decrypt the encrypted data key, then decrypt your file</li> </ul>"},{"location":"cloud/aws/services/033-aws-athena/","title":"AWS Athena","text":"<p>AWS Athena is a serverless, interactive query service that allows you to analyze data in Amazon S3 using standard SQL.</p>"},{"location":"cloud/aws/services/033-aws-athena/#overview","title":"Overview","text":"<ul> <li>Serverless: No infrastructure to manage; run queries directly on data stored in Amazon S3 without complex ETL processes.</li> <li>Based on Presto: Uses Presto, an open-source distributed SQL query engine, for high-speed data querying.</li> <li>SQL Queries: Supports ANSI SQL, making it easy for users familiar with SQL to get started quickly.</li> <li>Integrations: Works seamlessly with AWS services such as Glue (data cataloging), IAM (security), and CloudTrail (auditing).</li> <li>Scalability: Automatically scales to execute queries in parallel for fast performance.</li> </ul>"},{"location":"cloud/aws/services/033-aws-athena/#key-features","title":"Key Features","text":"<ul> <li>Data Formats: Supports CSV, JSON, ORC, Avro, and Parquet.</li> <li>Data Lake: Query data in data lakes, enabling big data analytics without loading data into a database.</li> <li>Cost-Effective: Pay only for the queries you run, billed by the amount of data scanned.</li> <li>Catalog Integration: Integrates with AWS Glue Data Catalog for unified metadata across services.</li> <li>Security: Uses AWS IAM for fine-grained access control and secure querying.</li> <li>Audit &amp; Compliance: Queries can be logged and monitored using AWS CloudTrail for compliance and auditing.</li> </ul>"},{"location":"cloud/aws/services/033-aws-athena/#best-practices","title":"Best Practices","text":"<ul> <li>Partitioning: Partition S3 data to reduce the amount of data scanned, improving performance and lowering costs.</li> <li>Compression: Use compressed formats (Parquet, ORC) to minimize storage costs and speed up queries.</li> <li>Optimize File Sizes: Balance between too many small files and a few very large files for optimal performance.</li> <li>Schema Design: Design schemas carefully, considering query patterns to optimize performance.</li> </ul>"},{"location":"cloud/aws/services/034-aws-opensearch/","title":"Amazon OpenSearch Service","text":""},{"location":"cloud/aws/services/034-aws-opensearch/#overview","title":"Overview","text":"<p>Amazon OpenSearch Service (formerly Amazon Elasticsearch Service) is a fully managed service that makes it easy to deploy, secure, and operate OpenSearch and Elasticsearch clusters at scale.</p>"},{"location":"cloud/aws/services/034-aws-opensearch/#key-features","title":"Key Features","text":"<ul> <li>Managed OpenSearch and Elasticsearch clusters</li> <li>Real-time search, analytics, and visualization</li> <li>Integrated with Kibana and OpenSearch Dashboards</li> <li>Secure with encryption, IAM, and VPC support</li> <li>Automated backups, patching, and monitoring</li> <li>Scalable storage and compute</li> </ul>"},{"location":"cloud/aws/services/034-aws-opensearch/#use-cases","title":"Use Cases","text":"<ul> <li>Log and event data analysis</li> <li>Full-text search</li> <li>Application monitoring and observability</li> <li>Security information and event management (SIEM)</li> <li>Business analytics</li> </ul>"},{"location":"cloud/aws/services/034-aws-opensearch/#security","title":"Security","text":"<ul> <li>Encryption at rest and in transit</li> <li>IAM-based access control</li> <li>VPC support for network isolation</li> <li>Fine-grained access control</li> </ul>"},{"location":"cloud/aws/services/034-aws-opensearch/#monitoring-logging","title":"Monitoring &amp; Logging","text":"<ul> <li>Integrated with CloudWatch for metrics and alarms</li> <li>Slow log publishing for search and indexing</li> <li>Audit logs for compliance</li> </ul>"},{"location":"cloud/aws/services/034-aws-opensearch/#best-practices","title":"Best Practices","text":"<ul> <li>Use VPC endpoints for secure access</li> <li>Monitor cluster health and set up alerts</li> <li>Enable automated snapshots for backups</li> <li>Use fine-grained access control for multi-tenant environments</li> <li>Scale clusters based on workload</li> </ul>"},{"location":"cloud/aws/services/034-aws-opensearch/#indexes","title":"Indexes","text":"<p>Indexes in OpenSearch are similar to tables in a relational database or collections in MongoDB. They organize documents and make it easy to perform searches.</p>"},{"location":"cloud/aws/services/034-aws-opensearch/#key-concepts","title":"Key Concepts:","text":"<ul> <li>Document: A basic unit of information that can be indexed. It is expressed in JSON format.</li> <li>Index: A collection of documents with similar characteristics. Each index has a unique name.</li> <li>Shards: Indices are split into shards to distribute data across multiple nodes for scalability and parallel processing.</li> <li>Replicas: Copies of shards that provide redundancy and increase availability.</li> </ul>"},{"location":"cloud/aws/services/035-aurora-database/","title":"AWS Aurora Database","text":""},{"location":"cloud/aws/services/035-aurora-database/#overview","title":"Overview","text":"<p>Amazon Aurora is a MySQL- and PostgreSQL-compatible relational database built for the cloud, combining the performance and availability of high-end commercial databases with the simplicity and cost-effectiveness of open-source databases.</p>"},{"location":"cloud/aws/services/035-aurora-database/#key-features","title":"Key Features","text":"<ul> <li>MySQL and PostgreSQL compatibility</li> <li>Up to 5x performance of standard MySQL and 3x of PostgreSQL</li> <li>Replicated 6 ways across 3 Availability Zones</li> <li>Automated failover, backup, and replication</li> <li>Serverless and Global Database options</li> <li>High durability and fault tolerance</li> </ul>"},{"location":"cloud/aws/services/035-aurora-database/#architecture","title":"Architecture","text":"<ul> <li>Clustered storage with separation of compute and storage</li> <li>Storage automatically grows in 10GB increments up to 128TB</li> <li>Replication across multiple AZs for high availability</li> <li>Supports read replicas for scaling read workloads</li> </ul>"},{"location":"cloud/aws/services/035-aurora-database/#security","title":"Security","text":"<ul> <li>Encryption at rest and in transit</li> <li>IAM-based authentication</li> <li>VPC support for network isolation</li> <li>Automated backups and point-in-time recovery</li> </ul>"},{"location":"cloud/aws/services/035-aurora-database/#monitoring-logging","title":"Monitoring &amp; Logging","text":"<ul> <li>Integrated with CloudWatch for metrics and alarms</li> <li>Performance Insights for query analysis</li> <li>Audit logging for compliance</li> </ul>"},{"location":"cloud/aws/services/035-aurora-database/#best-practices","title":"Best Practices","text":"<ul> <li>Use read replicas for scaling</li> <li>Enable automatic backups and monitoring</li> <li>Secure clusters with IAM and VPC</li> <li>Use Aurora Serverless for variable workloads</li> <li>Monitor performance and set up alerts</li> </ul>"},{"location":"cloud/aws/services/035-aurora-database/#aurora-replicas","title":"Aurora Replicas","text":"<p>Aurora Replicas can help improve read scaling because it synchronously updates data with the primary database (within 100 ms). Aurora Replicas are created in the same DB cluster within a Region. With Aurora MySQL you can also enable binlog replication to another Aurora DB cluster which can be in the same or a different Region.</p>"},{"location":"cloud/aws/services/036-fargate-compute/","title":"AWS Fargate Compute","text":""},{"location":"cloud/aws/services/036-fargate-compute/#overview","title":"Overview","text":"<p>AWS Fargate is a serverless compute engine for containers that works with both Amazon Elastic Container Service (ECS) and Amazon Elastic Kubernetes Service (EKS). It allows you to run containers without managing servers or clusters.</p>"},{"location":"cloud/aws/services/036-fargate-compute/#key-features","title":"Key Features","text":"<ul> <li>Serverless compute for containers</li> <li>Works with ECS and EKS</li> <li>No server or cluster management</li> <li>Automatic scaling and resource provisioning</li> <li>Integrated with AWS networking and security</li> <li>Pay only for resources used</li> </ul>"},{"location":"cloud/aws/services/036-fargate-compute/#architecture","title":"Architecture","text":"<ul> <li>Launch containers directly without provisioning EC2 instances</li> <li>Define CPU and memory at the task or pod level</li> <li>Fargate provisions and manages the infrastructure</li> </ul>"},{"location":"cloud/aws/services/036-fargate-compute/#security","title":"Security","text":"<ul> <li>IAM roles for tasks and pods</li> <li>VPC integration for network isolation</li> <li>Encryption at rest and in transit</li> <li>Security groups and network policies</li> </ul>"},{"location":"cloud/aws/services/036-fargate-compute/#monitoring-logging","title":"Monitoring &amp; Logging","text":"<ul> <li>Integrated with CloudWatch for metrics and logs</li> <li>Container-level monitoring and logging</li> </ul>"},{"location":"cloud/aws/services/036-fargate-compute/#best-practices","title":"Best Practices","text":"<ul> <li>Use IAM roles for least privilege</li> <li>Monitor resource usage and set up alerts</li> <li>Use VPC and security groups for isolation</li> <li>Optimize task and pod definitions for cost and performance</li> </ul>"},{"location":"cloud/aws/services/037-ecs/","title":"Amazon Elastic Container Service (ECS)","text":""},{"location":"cloud/aws/services/037-ecs/#overview","title":"Overview","text":"<p>Amazon ECS is a fully managed container orchestration service that makes it easy to deploy, manage, and scale containerized applications using Docker containers on AWS.</p>"},{"location":"cloud/aws/services/037-ecs/#key-features","title":"Key Features","text":"<ul> <li>Fully managed container orchestration</li> <li>Supports Docker containers</li> <li>Works with EC2 and AWS Fargate launch types</li> <li>Integrated with AWS networking and security</li> <li>Service discovery and load balancing</li> <li>Auto scaling and rolling updates</li> </ul>"},{"location":"cloud/aws/services/037-ecs/#architecture","title":"Architecture","text":"<ul> <li>Clusters: Logical grouping of tasks or services</li> <li>Tasks: Instantiation of a task definition (one or more containers)</li> <li>Services: Maintain desired number of running tasks</li> <li>Task Definitions: Blueprint for your application (container images, CPU, memory, networking, IAM roles)</li> <li>Launch Types: EC2 (user-managed) or Fargate (serverless)</li> </ul>"},{"location":"cloud/aws/services/037-ecs/#security","title":"Security","text":"<ul> <li>IAM roles for tasks and services</li> <li>VPC integration for network isolation</li> <li>Security groups and network ACLs</li> <li>Encryption at rest and in transit</li> </ul>"},{"location":"cloud/aws/services/037-ecs/#monitoring-logging","title":"Monitoring &amp; Logging","text":"<ul> <li>Integrated with CloudWatch for metrics and logs</li> <li>Container-level monitoring and logging</li> </ul>"},{"location":"cloud/aws/services/037-ecs/#best-practices","title":"Best Practices","text":"<ul> <li>Use IAM roles for least privilege</li> <li>Monitor resource usage and set up alerts</li> <li>Use VPC and security groups for isolation</li> <li>Optimize task definitions for cost and performance</li> </ul>"},{"location":"cloud/aws/services/037-ecs/#task-placement-strategies","title":"Task Placement Strategies","text":"<p>Amazon ECS supports the following task placement strategies:</p> <p>binpack\u00a0- Place tasks based on the least available amount of CPU or memory. This minimizes the number of instances in use.</p> <p>random\u00a0- Place tasks randomly.</p> <p>spread\u00a0- Place tasks evenly based on the specified value. Accepted values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. Service tasks are spread based on the tasks from that service. Standalone tasks are spread based on the tasks from the same task group.</p>"},{"location":"cloud/aws/services/038-xray/","title":"AWS X-Ray","text":""},{"location":"cloud/aws/services/038-xray/#overview","title":"Overview","text":"<p>AWS X-Ray is a distributed tracing service that helps developers analyze and debug production, distributed applications, such as those built using a microservices architecture.</p>"},{"location":"cloud/aws/services/038-xray/#key-features","title":"Key Features","text":"<ul> <li>Distributed tracing for applications</li> <li>Visualizes service maps and traces</li> <li>Identifies bottlenecks and performance issues</li> <li>Integrates with AWS Lambda, EC2, ECS, Elastic Beanstalk, and more</li> <li>Supports custom instrumentation for any application</li> </ul>"},{"location":"cloud/aws/services/038-xray/#architecture","title":"Architecture","text":"<ul> <li>X-Ray SDKs instrument your application code</li> <li>Traces are collected and sent to the X-Ray service</li> <li>Service maps show relationships between components</li> <li>Segments and subsegments provide detailed timing data</li> </ul>"},{"location":"cloud/aws/services/038-xray/#security","title":"Security","text":"<ul> <li>IAM-based access control</li> <li>Encryption in transit and at rest</li> <li>VPC endpoint support</li> </ul>"},{"location":"cloud/aws/services/038-xray/#monitoring-logging","title":"Monitoring &amp; Logging","text":"<ul> <li>Integrated with CloudWatch for metrics and logs</li> <li>Trace data retention and filtering</li> </ul>"},{"location":"cloud/aws/services/038-xray/#best-practices","title":"Best Practices","text":"<ul> <li>Instrument all application components</li> <li>Use annotations and metadata for custom insights</li> <li>Monitor trace data and set up alerts</li> <li>Use service maps to identify and resolve bottlenecks</li> </ul>"},{"location":"cloud/aws/services/038-xray/#segment-document","title":"Segment Document","text":"<p>A\u00a0segment document\u00a0conveys information about a segment to X-Ray. A segment document can be up to 64 kB and contain a whole segment with subsegments, a fragment of a segment that indicates that a request is in progress, or a single subsegment that is sent separately. You can send segment documents directly to X-Ray by using the\u00a0PutTraceSegments\u00a0API. A subset of segment fields are indexed by X-Ray for use with filter expressions. For example, if you set the user field on a segment to a unique identifier, you can search for segments associated with specific users in the X-Ray console or by using the\u00a0<code>GetTraceSummaries</code>\u00a0API.</p>"},{"location":"cloud/aws/services/038-xray/#annotations-and-metadata","title":"Annotations and Metadata","text":"<p>You can record additional information about requests, the environment, or your application with annotations and metadata. You can add annotations and metadata to the segments that the X-Ray SDK creates, or to custom subsegments that you create.</p>"},{"location":"cloud/aws/services/038-xray/#annotations","title":"Annotations","text":"<p>Annotations\u00a0are key-value pairs with string, number, or Boolean values. Annotations are indexed for use with\u00a0filter expressions. Use annotations to record data that you want to use to group traces in the console, or when calling the\u00a0GetTraceSummaries\u00a0API.</p>"},{"location":"cloud/aws/services/038-xray/#metadata","title":"Metadata","text":"<p>Metadata\u00a0are key-value pairs that can have values of any type, including objects and lists, but are not indexed for use with filter expressions. Use metadata to record additional data that you want stored in the trace but don't need to use with search.</p>"},{"location":"conventions/coding/c-sharp/","title":"SECOND-BRAIN C# coding conventions","text":""},{"location":"conventions/coding/css-scss/","title":"SECOND-BRAIN CSS-SCSS coding conventions","text":""},{"location":"conventions/coding/html/","title":"SECOND-BRAIN HTML coding conventions","text":""},{"location":"conventions/coding/javascript/","title":"SECOND-BRAIN JavaScript coding conventions","text":""},{"location":"conventions/coding/type-script/","title":"SECOND-BRAIN TypeScript coding conventions","text":""},{"location":"examples/markdown/cheat-sheet/","title":"Markdown Cheat Sheet","text":""},{"location":"examples/markdown/cheat-sheet/#1-headers","title":"1. Headers","text":"<p><pre><code># Header 1\n## Header 2\n### Header 3\n#### Header 4\n##### Header 5\n###### Header 6\n</code></pre> Result:</p>"},{"location":"examples/markdown/cheat-sheet/#header-1","title":"Header 1","text":""},{"location":"examples/markdown/cheat-sheet/#header-2","title":"Header 2","text":""},{"location":"examples/markdown/cheat-sheet/#header-3","title":"Header 3","text":""},{"location":"examples/markdown/cheat-sheet/#header-4","title":"Header 4","text":""},{"location":"examples/markdown/cheat-sheet/#header-5","title":"Header 5","text":""},{"location":"examples/markdown/cheat-sheet/#header-6","title":"Header 6","text":""},{"location":"examples/markdown/cheat-sheet/#2-emphasis","title":"2. Emphasis","text":"<p><pre><code>*Italic* or _Italic_\n**Bold** or __Bold__\n***Bold and Italic***\n</code></pre> Result: Italic or Italic Bold or Bold Bold and Italic</p>"},{"location":"examples/markdown/cheat-sheet/#3-lists","title":"3. Lists","text":""},{"location":"examples/markdown/cheat-sheet/#unordered-list","title":"Unordered List","text":"<p><pre><code>- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n</code></pre> Result: - Item 1 - Item 2   - Subitem 2.1   - Subitem 2.2</p>"},{"location":"examples/markdown/cheat-sheet/#ordered-list","title":"Ordered List","text":"<p><pre><code>1. Item 1\n2. Item 2\n   1. Subitem 2.1\n   2. Subitem 2.2\n</code></pre> Result: 1. Item 1 2. Item 2    1. Subitem 2.1    2. Subitem 2.2</p>"},{"location":"examples/markdown/cheat-sheet/#4-links","title":"4. Links","text":"<p><pre><code>[Link Text](https://example.com)\n</code></pre> Result: Link Text</p>"},{"location":"examples/markdown/cheat-sheet/#5-images","title":"5. Images","text":"<p><pre><code>![Alt Text](https://example.com/image.png)\n</code></pre> Result: </p>"},{"location":"examples/markdown/cheat-sheet/#6-code","title":"6. Code","text":""},{"location":"examples/markdown/cheat-sheet/#inline-code","title":"Inline Code","text":"<p><pre><code>`inline code`\n</code></pre> Result: <code>inline code</code></p>"},{"location":"examples/markdown/cheat-sheet/#code-block","title":"Code Block","text":"<p>```markdown <pre><code>Code block\n</code></pre> ``` Result: <pre><code>Code block\n</code></pre></p>"},{"location":"examples/markdown/cheat-sheet/#7-blockquotes","title":"7. Blockquotes","text":"<p><pre><code>&gt; This is a blockquote.\n&gt;&gt; Nested blockquote.\n</code></pre> Result:</p> <p>This is a blockquote.  </p> <p>Nested blockquote.</p>"},{"location":"examples/markdown/cheat-sheet/#8-horizontal-rule","title":"8. Horizontal Rule","text":"<p><pre><code>---\n***\n___\n</code></pre> Result:</p>"},{"location":"examples/markdown/cheat-sheet/#9-tables","title":"9. Tables","text":"<p><pre><code>| Header 1 | Header 2 | Header 3 |\n|----------|----------|----------|\n| Row 1    | Data 1   | Data 2   |\n| Row 2    | Data 3   | Data 4   |\n</code></pre> Result: | Header 1 | Header 2 | Header 3 | |----------|----------|----------| | Row 1    | Data 1   | Data 2   | | Row 2    | Data 3   | Data 4   |</p>"},{"location":"examples/markdown/cheat-sheet/#10-checkboxes","title":"10. Checkboxes","text":"<p><pre><code>- [x] Task 1\n- [ ] Task 2\n</code></pre> Result: - [x] Task 1 - [ ] Task 2</p>"},{"location":"examples/markdown/cheat-sheet/#11-escaping-characters","title":"11. Escaping Characters","text":"<p><pre><code>\\*Not Italic*\n</code></pre> Result: *Not Italic*</p>"},{"location":"examples/plantuml/activity-diagram/","title":"Bi\u1ec3u \u0111\u1ed3 ho\u1ea1t \u0111\u1ed9ng","text":"<pre><code>@startuml\n\nstart\n\nif (Graphviz installed?) then (yes)\n  :process all\\ndiagrams;\nelse (no)\n  :process only\n  __sequence__ and __activity__ diagrams;\nendif\n\nstop\n\n@enduml\n</code></pre> <pre><code>@startuml\n\nstart\n\nif (Graphviz installed?) then (yes)\n  :process all\\ndiagrams;\nelse (no)\n  :process only\n  __sequence__ and __activity__ diagrams;\nendif\n\nstop\n\n@enduml\n</code></pre>"},{"location":"examples/plantuml/sequence-diagram/","title":"Bi\u1ec3u \u0111\u1ed3 tu\u1ea7n t\u1ef1","text":"<pre><code>@startuml\nparticipant Participant as Foo\nactor       Actor       as Foo1\nboundary    Boundary    as Foo2\ncontrol     Control     as Foo3\nentity      Entity      as Foo4\ndatabase    Database    as Foo5\ncollections Collections as Foo6\nqueue       Queue       as Foo7\nFoo -&gt; Foo1 : To actor \nFoo -&gt; Foo2 : To boundary\nFoo -&gt; Foo3 : To control\nFoo -&gt; Foo4 : To entity\nFoo -&gt; Foo5 : To database\nFoo -&gt; Foo6 : To collections\nFoo -&gt; Foo7: To queue\n@enduml\n</code></pre> <pre><code>@startuml\nparticipant Participant as Foo\nactor       Actor       as Foo1\nboundary    Boundary    as Foo2\ncontrol     Control     as Foo3\nentity      Entity      as Foo4\ndatabase    Database    as Foo5\ncollections Collections as Foo6\nqueue       Queue       as Foo7\nFoo -&gt; Foo1 : To actor \nFoo -&gt; Foo2 : To boundary\nFoo -&gt; Foo3 : To control\nFoo -&gt; Foo4 : To entity\nFoo -&gt; Foo5 : To database\nFoo -&gt; Foo6 : To collections\nFoo -&gt; Foo7: To queue\n@enduml\n</code></pre>"},{"location":"examples/plantuml/use-case-diagram/","title":"Bi\u1ec3u \u0111\u1ed3 ca s\u1eed d\u1ee5ng","text":"<p>For more infomation: https://plantuml.com/sequence-diagram</p> <pre><code>@startuml\nleft to right direction\nactor Guest as g\npackage Professional {\n  actor Chef as c\n  actor \"Food Critic\" as fc\n}\npackage Restaurant {\n  usecase \"Eat Food\" as UC1\n  usecase \"Pay for Food\" as UC2\n  usecase \"Drink\" as UC3\n  usecase \"Review\" as UC4\n}\nfc --&gt; UC4\ng --&gt; UC1\ng --&gt; UC2\ng --&gt; UC3\n@enduml\n</code></pre> <pre><code>@startuml\nleft to right direction\nactor Guest as g\npackage Professional {\n  actor Chef as c\n  actor \"Food Critic\" as fc\n}\npackage Restaurant {\n  usecase \"Eat Food\" as UC1\n  usecase \"Pay for Food\" as UC2\n  usecase \"Drink\" as UC3\n  usecase \"Review\" as UC4\n}\nfc --&gt; UC4\ng --&gt; UC1\ng --&gt; UC2\ng --&gt; UC3\n@enduml\n</code></pre>"},{"location":"guides/contributions/","title":"H\u01b0\u1edbng d\u1eabn t\u1ea1o t\u00e0i li\u1ec7u","text":"<ul> <li>Clone repo v\u1ec1 m\u00e1y local </li> <li>C\u1ea5u tr\u00fac l\u00e0m vi\u1ec7c hi\u1ec7n t\u1ea1i nh\u01b0 sau:</li> </ul> <pre><code>\u251c\u2500  mkdocs.yml\n\u2502  \n\u2514\u2500docs\n    \u2502  about.md\n    \u2502  contributions.md\n    \u2502  index.md\n    \u2502  \n    \u251c\u2500assets\n    \u2502  \u2514\u2500images\n    \u2502      \u2502  logo.png\n    \u2502      \u2502  \n    \u2502      \u2514\u2500common-errors\n    \u2502              version-of-an-assembly.png\n    \u2502              \n    \u251c\u2500blog\n    \u2502  \u2502  index.md\n    \u2502  \u2502  \n    \u2502  \u2514\u2500posts\n    \u251c\u2500common-errors\n    \u2502  \u2502  others.md\n    \u2502  \u2502  \n    \u2502  \u2514\u2500oracle\n    \u2502          index.md\n    \u2502          \n    \u251c\u2500database\n    \u2502      index.md\n    \u2502      \n    \u251c\u2500environments\n    \u2502      async-jobs.md\n    \u2502      oracle-database.md\n    \u2502      rocket-chat.md\n    \u2502      visual-studio.md\n    \u2502      vpn.md\n    \u2502      \n    \u251c\u2500examples\n    \u2502  \u251c\u2500markdown\n    \u2502  \u2502      cheat-sheet.md\n    \u2502  \u2502      \n    \u2502  \u2514\u2500plantuml\n    \u2502          activity-diagram.md\n    \u2502          sequence-diagram.md\n    \u2502          use-case-diagram.md\n    \u2502          \n    \u251c\u2500functions\n    \u2502      index.md\n    \u2502      \n    \u2514\u2500scenarios\n            environments.md\n            how-to-create.md\n            how-to-run.md\n            index.md\n</code></pre>"},{"location":"guides/contributions/#cac-buoc-tao-tai-lieu","title":"C\u00e1c b\u01b0\u1edbc t\u1ea1o t\u00e0i li\u1ec7u","text":""},{"location":"guides/contributions/#1-tao-mot-nhanh-git-moi-tuong-ung-voi-chuc-nang-muon-tao-tai-lieu","title":"1. T\u1ea1o m\u1ed9t nh\u00e1nh <code>git</code> m\u1edbi t\u01b0\u01a1ng \u1ee9ng v\u1edbi ch\u1ee9c n\u0103ng mu\u1ed1n t\u1ea1o t\u00e0i li\u1ec7u","text":""},{"location":"guides/contributions/#2-tao-file-md-hoac-chinh-sua-noi-dung-cua-tai-lieu","title":"2. T\u1ea1o file <code>.md</code> ho\u1eb7c ch\u1ec9nh s\u1eeda n\u1ed9i dung c\u1ee7a t\u00e0i li\u1ec7u.","text":"<p>V\u00ed d\u1ee5 mu\u1ed1n ch\u1ec9nh s\u1eeda file t\u00e0i li\u1ec7u c\u1ee7a <code>async-jobs</code> trong m\u1ee5c <code>environments</code> th\u00ec t\u00ecm file <code>async-jobs.md</code> sau \u0111\u00f3 ch\u1ec9nh s\u1eeda.</p> <p>Ho\u1eb7c mu\u1ed1n t\u1ea1o t\u00e0i li\u1ec7u cho ch\u1ee9c n\u0103ng <code>RedLink</code> th\u00ec t\u1ea1o m\u1edbi file <code>red-link.md</code> trong folder <code>functions</code></p>"},{"location":"guides/contributions/#3-viet-noi-dung","title":"3. Vi\u1ebft n\u1ed9i dung.","text":"<ul> <li>V\u1ec1 markdown v\u00e0 c\u00e1c bi\u1ec3u \u0111\u1ed3</li> </ul> <p>Tham kh\u1ea3o cheetsheet c\u1ee7a markdown ho\u1eb7c plantuml</p> <ul> <li>V\u1ec1 h\u00ecnh \u1ea3nh. \u0110\u1ec3 th\u00eam h\u00ecnh \u1ea3nh v\u00e0o t\u00e0i li\u1ec7u:</li> </ul> <p>Copy \u1ea3nh v\u00e0o folder <code>docs/assets/images</code> t\u01b0\u01a1ng \u1ee9ng v\u1edbi ch\u1ee9c n\u0103ng. V\u00ed d\u1ee5 \u0111ang l\u00e0m ch\u1ee9c n\u0103ng <code>RedLink</code> th\u00ec h\u00e3y t\u1ea1o 1 folder (n\u1ebfu ch\u01b0a c\u00f3) <code>red-link</code> v\u00e0 d\u00e1n \u1ea3nh v\u00e0o th\u01b0 m\u1ee5c \u0111\u00f3.</p> <p>Ch\u1ec9 \u0111\u1ecbnh link \u1ea3nh trong t\u00e0i li\u1ec7u. </p> <pre><code>![How to attach an image to a document](/assets/images/red-link/lorem.png)\n</code></pre>"},{"location":"guides/contributions/#4-tao-navigation-cho-tai-lieu-vua-tao","title":"4. T\u1ea1o <code>navigation</code> cho t\u00e0i li\u1ec7u v\u1eeba t\u1ea1o","text":"<p>Di chuy\u1ec3n t\u1edbi section <code>nav</code> trong file <code>mkdocs.yml</code>. T\u1ea1o m\u1ed9t nav t\u01b0\u01a1ng \u1ee9ng v\u1edbi t\u00e0i li\u1ec7u v\u1eeba t\u1ea1o, h\u00e3y tham kh\u1ea3o c\u00e1c nav kh\u00e1c n\u1ebfu c\u1ea7n thi\u1ebft.</p>"},{"location":"guides/contributions/#5-tao-mr-e-merge-vao-nhanh-master","title":"5. T\u1ea1o MR \u0111\u1ec3 merge v\u00e0o nh\u00e1nh master","text":"<p>Hi\u1ec7n t\u1ea1i th\u00ec \u0111ang s\u1eed d\u1ee5ng c\u1ea5u h\u00ecnh t\u1ef1 \u0111\u1ed9ng c\u1eadp nh\u1eadt t\u00e0i li\u1ec7u b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng <code>GitLab runner</code> tr\u00ean nh\u00e1nh <code>master</code>. Do \u0111\u00f3 h\u00e3y merge v\u00e0o nh\u00e1nh master.</p> <p>Have a nice day !!!</p>"},{"location":"guides/environments/","title":"H\u01b0\u1edbng d\u1eabn c\u00e0i m\u00f4i tr\u01b0\u1eddng \u0111\u1ec3 l\u00e0m vi\u1ec7c v\u1edbi file markdown v\u00e0 planuml","text":"<p>H\u1ec7 th\u1ed1ng SECOND-BRAIN documentation \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ef1a tr\u00ean opensource mkdocs-material \u0110\u00e2y l\u00e0 m\u1ed9t h\u1ec7 th\u1ed1ng web r\u1ea5t m\u1ea1nh \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 x\u00e2y d\u1ef1ng documentation portal \u0111\u01b0\u1ee3c vi\u1ebft b\u1eb1ng <code>python</code> v\u1edbi \u0111\u1ecbnh d\u1ea1ng t\u00e0i li\u1ec7u s\u1eed d\u1ee5ng l\u00e0 <code>markdown</code> v\u00e0 c\u00f3 h\u1ed7 tr\u1ee3 h\u00e0ng lo\u1ea1t c\u00e1c t\u00ednh n\u0103ng h\u1eefu \u00edch nh\u01b0:</p> <ul> <li>Convert sang html (d\u1ea1ng file t\u0129nh v\u00e0 kh\u00f4ng c\u1ea7n host)</li> <li>H\u1ed7 tr\u1ee3 g\u1eafn th\u1ebb cho t\u00e0i li\u1ec7u</li> <li>H\u1ed7 tr\u1ee3 docker</li> <li>H\u1ed7 tr\u1ee3 theme</li> <li>H\u1ed7 tr\u1ee3 t\u00ecm ki\u1ebfm theo n\u1ed9i dung t\u00e0i li\u1ec7u</li> <li>H\u1ed7 tr\u1ee3 blog</li> <li>H\u1ed7 tr\u1ee3 \u0111a ng\u00f4n ng\u1eef</li> <li>H\u1ed7 tr\u1ee3 c\u00e1 nh\u00e2n h\u00f3a to\u00e0n ph\u1ea7n</li> <li>R\u1ea5t nhi\u1ec1u 3<sup>rd</sup> plugins</li> <li>H\u1ed7 tr\u1ee3 nh\u00fang v\u00e0 hi\u1ec3n th\u1ecb plantuml</li> <li>V\u00e0 h\u00e0ng lo\u1ea1t c\u00e1c t\u00ednh n\u0103ng kh\u00e1c</li> </ul> <p>C\u00f3 r\u1ea5t nhi\u1ec1u ph\u1ea7n m\u1ec1m \u0111\u1ec3 t\u1ea1o <code>markdown</code> v\u00e0 <code>plantuml</code>. Tuy nhi\u00ean trong t\u00e0i li\u1ec7u n\u00e0y h\u01b0\u1edbng d\u1ea5n s\u1eed d\u1ee5ng <code>Visual Studio Code</code>.</p>"},{"location":"guides/environments/#1-cai-at-visual-studio-code","title":"1. C\u00e0i \u0111\u1eb7t <code>Visual Studio Code</code>","text":"<p>Link c\u00e0i \u0111\u1eb7t VS Code</p>"},{"location":"guides/environments/#2-cai-at-plugin-cho-vs-code-cho-phep-preview-tai-lieu-markdown","title":"2. C\u00e0i \u0111\u1eb7t plugin cho VS Code cho ph\u00e9p <code>Preview</code> t\u00e0i li\u1ec7u markdown","text":"<p>M\u1edf VS code, b\u1ea5m t\u1ed5 h\u1ee3p ph\u00edm <code>Ctrl</code> + <code>Shift</code> + <code>X</code> \u0111\u1ec3 m\u1edf <code>Extensions</code>.</p> <p>T\u00ecm ki\u1ebfm v\u00e0 c\u00e0i \u0111\u1eb7t c\u00e1c extensions sau:</p> <ul> <li>DavidAnson.vscode-markdownlint</li> </ul> <p>Khi c\u00e0i \u0111\u1eb7t xong c\u00f3 th\u1ec3 s\u1ebd kh\u00f4ng g\u00f5 \u0111\u01b0\u1ee3c ti\u1ebfng Vi\u1ec7t trong t\u00e0i li\u1ec7u <code>markdown</code>, h\u00e3y l\u00e0m nh\u01b0 sau:</p> <ul> <li>G\u00f5 t\u1ed5 h\u1ee3p ph\u00edm <code>Ctrl</code> + <code>Shift</code> + <code>P</code> \u0111\u1ec3 m\u1edf Shortcut settings</li> <li>T\u00ecm t\u1eeb kh\u00f3a <code>onBackspaceKey</code>. Chu\u1ed9t ph\u1ea3i v\u00e0o v\u00e0 ch\u1ecdn <code>Remove Keybiding</code>.</li> </ul> <p></p>"},{"location":"guides/environments/#3-cai-at-plugin-cho-vs-code-cho-phep-preview-planuml","title":"3. C\u00e0i \u0111\u1eb7t plugin cho VS Code cho ph\u00e9p <code>preview</code> <code>planuml</code>","text":"<p>M\u1edf VS code, b\u1ea5m t\u1ed5 h\u1ee3p ph\u00edm <code>Ctrl</code> + <code>Shift</code> + <code>X</code> \u0111\u1ec3 m\u1edf <code>Extensions</code>.</p> <p>T\u00ecm ki\u1ebfm v\u00e0 c\u00e0i \u0111\u1eb7t c\u00e1c extensions sau:</p> <ul> <li>clysto.plantuml</li> <li>jebbs.plantuml</li> <li>qhoekman.language-plantuml</li> <li>well-ar.plantuml</li> </ul>"},{"location":"guides/tagging/","title":"C\u00e1ch g\u1eafn th\u1ebb cho t\u00e0i li\u1ec7u","text":"<p>\u0110\u1ec3 g\u1eafn th\u1ebb cho t\u00e0i li\u1ec7u, ch\u1ec9 c\u1ea7n th\u00eam 1 section v\u1edbi \u0111\u1ecbnh d\u1ea1ng nh\u01b0 sau v\u00e0o \u0111\u1ea7u c\u1ee7a file t\u00e0i li\u1ec7u:</p> <pre><code>---\ntags:\n  - oracle\n  - errors\n---\n</code></pre> <p>T\u00e0i li\u1ec7u tham kh\u1ea3o</p>"},{"location":"merge-request-templates/v1/","title":"SECOND-BRAIN Merge Request Template V1","text":""},{"location":"merge-request-templates/v2/","title":"SECOND-BRAIN Merge Request Template V2","text":""},{"location":"merge-request-templates/v2/#task-link","title":"Task Link","text":"<p>D\u00e1n \u0111\u01b0\u1eddng d\u1eabn t\u1edbi task v\u00e0o \u0111\u00e2y.</p>"},{"location":"merge-request-templates/v2/#short-description","title":"Short Description","text":"<p>M\u00f4 t\u1ea3 ng\u1eafn v\u1ec1 n\u1ed9i dung task.</p>"},{"location":"merge-request-templates/v2/#solution","title":"Solution","text":"<p>M\u00f4 t\u1ea3 ng\u1eafn v\u1ec1 n\u1ed9i dung \u0111\u1ed1i \u1ee9ng.</p>"},{"location":"merge-request-templates/v2/#second-brain-checklist","title":"SECOND-BRAIN CHECKLIST","text":""},{"location":"merge-request-templates/v2/#i-general-conventions","title":"I. General conventions","text":"<ul> <li> 1. C\u00e0i \u0111\u1eb7t <code>endline</code> mode c\u1ee7a editor v\u1ec1 <code>CRLF</code>, c\u0103n l\u1ec1 \u0111\u1ea7u d\u00f2ng s\u1eed d\u1ee5ng tabs.</li> <li> 2. M\u1ed9t d\u00f2ng kh\u00f4ng n\u00ean v\u01b0\u1ee3t qu\u00e1 120 k\u00ed t\u1ef1.</li> <li> 3. M\u1ed7i file ch\u1ec9 n\u00ean ch\u1ee9a m\u1ed9t class.</li> <li> 4. Source code thay \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c ch\u1ee9a <code>warning</code>.</li> <li> 5. H\u1ea1n ch\u1ebf s\u1eed d\u1ee5ng TODO. <ul> <li>N\u1ebfu c\u1ea7n TODO, comment r\u00f5 t\u00ecnh tr\u1ea1ng v\u00e0 l\u00fd do \u0111\u1ec3 d\u1ec5 \u0111\u1ed1i \u1ee9ng sau n\u00e0y.  </li> </ul> </li> <li> 6. M\u1ed7i member trong class c\u00e1ch nhau ch\u00ednh x\u00e1c 1 d\u00f2ng tr\u1ed1ng.</li> <li> 7. Kh\u00f4ng s\u1eed d\u1ee5ng c\u00e1c <code>Obsolete</code> members. <ul> <li>N\u1ebfu b\u1eaft bu\u1ed9c s\u1eed d\u1ee5ng th\u00ec ph\u1ea3i comment r\u00f5 l\u00fd do.  </li> </ul> </li> </ul>"},{"location":"merge-request-templates/v2/#ii-naming-conventions","title":"II. Naming conventions","text":"<ul> <li> 8. Ph\u00e2n bi\u1ec7t ch\u1eef vi\u1ebft hoa/th\u01b0\u1eddng: <ul> <li>_camelCase: T\u00ean field.</li> <li>camelCase: T\u00ean variable, parameter.  </li> <li>UPPER_CASE: T\u00ean const, static readonly.  </li> <li>PascalCase: C\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f2n l\u1ea1i. </li> </ul> </li> <li> 9. T\u00ean ng\u1eafn g\u1ecdn, d\u1ec5 hi\u1ec3u, \u0111\u00fang ng\u1eef c\u1ea3nh: <ul> <li>Class: T\u00ean th\u1ec3 hi\u1ec7n \u0111\u1ed1i t\u01b0\u1ee3ng g\u00ec trong h\u1ec7 th\u1ed1ng.  </li> <li>Method: T\u00ean th\u1ec3 hi\u1ec7n ph\u01b0\u01a1ng th\u1ee9c l\u00e0m g\u00ec, ph\u1ee5c v\u1ee5 ai.  </li> <li>Variable: T\u00ean th\u1ec3 hi\u1ec7n r\u00f5 \u00fd ngh\u0129a trong logic x\u1eed l\u00fd, \u0111\u1eb7c bi\u1ec7t v\u1edbi business code.  </li> </ul> </li> <li> 10. T\u00ean r\u00f5 r\u00e0ng v\u00e0 \u0111\u00fang ng\u1eef ph\u00e1p ti\u1ebfng Anh: <ul> <li>\u0110\u1eb7t t\u00ean bi\u1ebfn d\u1ea1ng s\u1ed1 nhi\u1ec1u n\u1ebfu bi\u1ebfn l\u00e0 ki\u1ec3u danh s\u00e1ch (<code>List</code>, <code>IEnumerable</code>, <code>Array</code>, ...).  </li> <li>Kh\u00f4ng vi\u1ebft t\u1eaft qu\u00e1 m\u1ee9c, s\u1eed d\u1ee5ng t\u1eeb v\u1ef1ng ch\u00ednh x\u00e1c \u0111\u1ec3 tr\u00e1nh g\u00e2y kh\u00f3 hi\u1ec3u.  </li> </ul> </li> <li> 11. S\u1eed d\u1ee5ng t\u1eeb ng\u1eef ch\u00ednh x\u00e1c trong ng\u1eef c\u1ea3nh: <ul> <li>Ph\u00e2n bi\u1ec7t <code>Validate</code> (x\u00e1c th\u1ef1c) v\u00e0 <code>Check</code> (ki\u1ec3m tra).  </li> <li>Ki\u1ec3m tra v\u00e0 \u0111\u1ed5i t\u00ean method khi n\u1ed9i dung method thay \u0111\u1ed5i.  </li> </ul> </li> <li> 12. S\u1eed d\u1ee5ng <code>prefix</code> ho\u1eb7c <code>suffix</code> ph\u00f9 h\u1ee3p (v\u00ed d\u1ee5: <code>I</code> cho interface, <code>Base</code> cho class c\u01a1 s\u1edf ho\u1eb7c c\u00e1c ph\u01b0\u01a1ng th\u1ee9c ho\u1eb7c h\u00e0m b\u1ea5t \u0111\u1ed3ng b\u1ed9 ph\u1ea3i c\u00f3 h\u1eadu t\u1ed1 <code>Async</code> v\u00e0 ng\u01b0\u1ee3c l\u1ea1i).</li> </ul>"},{"location":"merge-request-templates/v2/#iii-coding-styles","title":"III. Coding styles","text":"<ul> <li> 13. \u01afu ti\u00ean s\u1eed d\u1ee5ng <code>var</code> thay cho ki\u1ec3u d\u1eef li\u1ec7u t\u01b0\u1eddng minh.</li> <li> 14. S\u1eed d\u1ee5ng d\u1ea5u ngo\u1eb7c <code>{}</code> v\u00e0 xu\u1ed1ng d\u00f2ng cho m\u1ecdi \u0111i\u1ec1u ki\u1ec7n <code>if</code> v\u00e0 <code>method</code> ho\u1eb7c <code>function</code>.</li> <li> 15. Bi\u1ec3u th\u1ee9c c\u00f3 t\u1eeb 3 \u0111i\u1ec1u ki\u1ec7n tr\u1edf l\u00ean th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i \u0111i\u1ec1u ki\u1ec7n (bao g\u1ed3m lambda v\u00e0 c\u00e1c bi\u1ec3u th\u1ee9c \u0111i\u1ec1u ki\u1ec7n nh\u01b0 <code>while</code>, <code>if</code>, ... )</li> <li> 16. N\u1ebfu ph\u01b0\u01a1ng th\u1ee9c ho\u1eb7c h\u00e0m c\u00f3 3 tham s\u1ed1 tr\u1edf l\u00ean th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i tham s\u1ed1.</li> <li> 17. Khi g\u1ecdi extension methods, n\u1ebfu g\u1ecdi li\u00ean t\u1ee5c t\u1eeb 3 methods tr\u1edf l\u00ean ho\u1eb7c c\u00e2u l\u1ec7nh \u0111\u00e3 qu\u00e1 d\u00e0i th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i l\u1eddi g\u1ecdi method.</li> <li> 18. Kh\u00f4ng s\u1eed d\u1ee5ng <code>expression-bodied</code> cho method \u1edf b\u1ea5t k\u00ec tr\u01b0\u1eddng h\u1ee3p n\u00e0o.</li> <li> 19. Ch\u1ec9 s\u1eed d\u1ee5ng to\u00e1n t\u1eed \u0111i\u1ec1u ki\u1ec7n <code>Ternary</code> cho gi\u00e1 tr\u1ecb c\u1ed1 \u0111\u1ecbnh, kh\u00f4ng s\u1eed d\u1ee5ng cho l\u1eddi g\u1ecdi h\u00e0m.</li> <li> 20. S\u1eed d\u1ee5ng <code>nameof</code> thay cho hardcode t\u00ean bi\u1ebfn ho\u1eb7c t\u00ean member.</li> <li> 21. Ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n v\u00e0 <code>return</code> s\u1edbm nh\u1ea5t c\u00f3 th\u1ec3.</li> </ul>"},{"location":"merge-request-templates/v2/#iv-tuan-thu-oop-va-solid","title":"IV. Tu\u00e2n th\u1ee7 OOP v\u00e0 SOLID","text":"<ul> <li> 22. Khai b\u00e1o s\u1eed d\u1ee5ng h\u1ee3p l\u00fd Access Modifiers: <ul> <li>Lu\u00f4n \u0111\u1ec3 field \u1edf <code>private</code>.  </li> <li>Ngo\u00e0i ra c\u1ea7n tu\u00e2n th\u1ee7 t\u00ednh k\u1ebf th\u1eeba / truy c\u1eadp \u0111\u1ec3 \u0111\u1eb7t access modifier.  </li> </ul> </li> <li> 23. Khai b\u00e1o v\u00e0 s\u1eed d\u1ee5ng h\u1ee3p l\u00fd constant, readonly, static field/property: <ul> <li><code>const</code>: H\u1eb1ng s\u1ed1 ch\u1ec9 s\u1eed d\u1ee5ng cho gi\u00e1 tr\u1ecb kh\u00f4ng thay \u0111\u1ed5i v\u00e0 d\u00f9ng chung.  </li> <li><code>readonly</code>: Bi\u1ebfn ch\u1ec9 kh\u1edfi t\u1ea1o m\u1ed9t l\u1ea7n t\u1ea1i th\u1eddi \u0111i\u1ec3m khai b\u00e1o ho\u1eb7c trong constructor.  </li> <li><code>static</code>: Ch\u1ec9 d\u00f9ng khi bi\u1ebfn d\u00f9ng chung cho nhi\u1ec1u \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c nhau trong h\u1ec7 th\u1ed1ng.  </li> </ul> </li> <li> 24. Khai b\u00e1o v\u00e0 s\u1eed properties h\u1ee3p l\u00fd: <ul> <li>\u01afu ti\u00ean s\u1eed d\u1ee5ng auto-properties khi c\u00f3 th\u1ec3.  </li> <li>S\u1eed d\u1ee5ng <code>private set</code> ho\u1eb7c <code>init</code> cho c\u00e1c properties ch\u1ec9 \u0111\u1ecdc sau khi kh\u1edfi t\u1ea1o.  </li> <li>Ph\u00e2n bi\u1ec7t v\u1edbi <code>field</code>. Property s\u1eed \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nh\u01b0 1 API \u0111\u1ec3 cho c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c ngo\u00e0i class truy c\u1eadp v\u00e0o, c\u00f2n field th\u00ec ch\u1ec9 s\u1eed d\u1ee5ng trong class \u0111\u00f3.  </li> </ul> </li> </ul>"},{"location":"merge-request-templates/v2/#v-tuan-thu-cac-quy-tac-second-brain","title":"V. Tu\u00e2n Th\u1ee7 C\u00e1c Quy T\u1eafc SECOND-BRAIN","text":"<ul> <li> 25. X\u00f3a code kh\u00f4ng s\u1eed d\u1ee5ng: <ul> <li>X\u00f3a c\u00e1c <code>using</code> kh\u00f4ng c\u1ea7n thi\u1ebft trong c\u00e1c file <code>.cs</code>.  </li> <li>X\u00f3a file, class, method, property, bi\u1ebfn kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng.  </li> <li>X\u00f3a bi\u1ebfn kh\u00f4ng s\u1eed d\u1ee5ng trong c\u00e1c method c\u00f3 s\u1eeda \u0111\u1ed5i.  </li> </ul> </li> <li> 26. X\u00f3a code kh\u00f4ng c\u1ea7n thi\u1ebft: <ul> <li>Kh\u00f4ng c\u1ea7n kh\u1edfi t\u1ea1o <code>null</code> cho bi\u1ebfn ki\u1ec3u reference type n\u1ebfu kh\u00f4ng c\u1ea7n thi\u1ebft.  </li> <li>Bi\u1ebfn \u0111\u00e3 \u0111\u01b0\u1ee3c validate \u0111\u1ea7u v\u00e0o r\u1ed3i th\u00ec kh\u00f4ng c\u1ea7n check <code>null</code> ho\u1eb7c r\u1ed7ng.  </li> <li>X\u00f3a \u0111o\u1ea1n code kh\u00f4ng d\u00f9ng, kh\u00f4ng \u0111\u01b0\u1ee3c comment l\u1ea1i b\u1eb1ng <code>//</code>.  </li> </ul> </li> <li> 27. Gi\u1ea3i th\u00edch r\u00f5 r\u00e0ng khi copy code t\u1eeb n\u01a1i kh\u00e1c: ngu\u1ed3n g\u1ed1c, m\u1ee5c \u0111\u00edch.</li> <li> 28. C\u00e2n nh\u1eafc s\u1eed d\u1ee5ng <code>thread-safe collections</code> trong tr\u01b0\u1eddng h\u1ee3p \u0111a lu\u1ed3ng.</li> <li> 29. Kh\u00f4ng thay \u0111\u1ed5i source code m\u00e0 kh\u00f4ng li\u00ean quan tr\u1ef1c ti\u1ebfp \u0111\u1ebfn task \u0111ang \u0111\u1ed1i \u1ee9ng, k\u1ec3 c\u1ea3 vi\u1ec7c x\u00f3a c\u00e1c \u0111o\u1ea1n code th\u1eeba.</li> </ul>"},{"location":"merge-request-templates/v2/#vi-hieu-nang","title":"VI. Hi\u1ec7u N\u0103ng","text":"<ul> <li> 30. S\u1eed d\u1ee5ng <code>String Interpolation</code> ho\u1eb7c <code>StringBuilder</code> thay v\u00ec c\u1ed9ng chu\u1ed7i.</li> <li> 31. D\u00f9ng <code>OrdinalIgnoreCase</code> thay v\u00ec <code>InvariantCultureIgnoreCase</code> khi so s\u00e1nh chu\u1ed7i.</li> <li> 32. H\u1ea1n ch\u1ebf s\u1ed1 l\u01b0\u1ee3ng request (t\u1edbi DB) trong m\u1ed9t x\u1eed l\u00fd.</li> <li> 33. \u0110\u00e1nh d\u1ea5u v\u00e0 gi\u1ea3i th\u00edch logic ph\u1ee9c t\u1ea1p ho\u1eb7c magic number b\u1eb1ng comment r\u00f5 r\u00e0ng.</li> <li> 34. Tr\u00e1nh code b\u1ecb l\u1eb7p ho\u1eb7c qu\u00e1 d\u00e0i <ul> <li>T\u00e1ch code th\u00e0nh c\u00e1c method nh\u1ecf, r\u00f5 r\u00e0ng \u0111\u1ec3 t\u00e1i s\u1eed d\u1ee5ng v\u00e0 d\u1ec5 \u0111\u1ecdc.  </li> <li>Ki\u1ec3m tra xem c\u00f3 s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c source code \u0111\u00e3 c\u00f3 s\u1eb5n hay kh\u00f4ng.  </li> </ul> </li> <li> 35. X\u1eed l\u00fd d\u1eef li\u1ec7u: <ul> <li>Tr\u01b0\u1edbc khi <code>return</code> danh s\u00e1ch, s\u1eed d\u1ee5ng <code>ToList()</code> ho\u1eb7c <code>ToArray()</code> \u0111\u1ec3 execute data.  </li> <li>X\u1eed l\u00fd tu\u1ea7n t\u1ef1 theo <code>index</code> n\u00ean d\u00f9ng <code>for</code>, h\u1ea1n ch\u1ebf <code>foreach</code> n\u1ebfu c\u00f3 y\u00eau c\u1ea7u r\u00f5 r\u00e0ng v\u1ec1 th\u1ee9 t\u1ef1.  </li> </ul> </li> <li> 36. H\u1ea1n ch\u1ebf <code>return null</code>.</li> <li> 37. S\u1eed d\u1ee5ng <code>throw</code> thay v\u00ec <code>throw ex</code> \u0111\u1ec3 gi\u1eef nguy\u00ean stack trace.</li> <li> 38. S\u1eed d\u1ee5ng <code>using</code> \u0111\u1ec3 gi\u1ea3i ph\u00f3ng unmanaged resources khi kh\u00f4ng c\u00f2n s\u1eed d\u1ee5ng</li> <li> 39. S\u1eed d\u1ee5ng <code>async/await</code> thay cho <code>Task.Wait()</code> ho\u1eb7c <code>Task.Result</code> ho\u1eb7c <code>Task.WaitAll()</code> \u0111\u1ec3 tr\u00e1nh block.</li> </ul>"},{"location":"merge-request-templates/v2/#vii-comment-code","title":"VII. Comment Code","text":"<ul> <li> 40. Comment \u0111\u1ea7y \u0111\u1ee7 cho t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng (ri\u00eang \u0111\u1ed1i v\u1edbi field th\u00ec t\u00f9y ch\u1ecdn): <ul> <li>\u0110\u1ea7u c\u00e1c classes, methods, interfaces, properties, ... (c\u00e1c members m\u00e0 c\u00f3 th\u1ec3 access t\u1eeb \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c) - s\u1eed d\u1ee5ng XML comments  </li> <li>C\u00e1c \u0111o\u1ea1n logic ph\u1ee9c t\u1ea1p.  </li> <li>N\u1ed9i dung comment \u0111\u00fang ng\u1eef c\u1ea3nh s\u1eed d\u1ee5ng, th\u1ec3 hi\u1ec7n r\u00f5 \u00fd t\u01b0\u1edfng.  </li> </ul> </li> </ul>"},{"location":"merge-request-templates/v2/template/","title":"Template","text":""},{"location":"merge-request-templates/v2/template/#task-link","title":"Task Link","text":"<p>D\u00e1n \u0111\u01b0\u1eddng d\u1eabn t\u1edbi task v\u00e0o \u0111\u00e2y.</p>"},{"location":"merge-request-templates/v2/template/#short-description","title":"Short Description","text":"<p>M\u00f4 t\u1ea3 ng\u1eafn v\u1ec1 n\u1ed9i dung task.</p>"},{"location":"merge-request-templates/v2/template/#solution","title":"Solution","text":"<p>M\u00f4 t\u1ea3 ng\u1eafn v\u1ec1 n\u1ed9i dung \u0111\u1ed1i \u1ee9ng.</p>"},{"location":"merge-request-templates/v2/template/#second-brain-checklist","title":"SECOND-BRAIN CHECKLIST","text":""},{"location":"merge-request-templates/v2/template/#i-general-conventions","title":"I. General conventions","text":"<ul> <li> 1. C\u00e0i \u0111\u1eb7t <code>endline</code> mode c\u1ee7a editor v\u1ec1 <code>CRLF</code>, c\u0103n l\u1ec1 \u0111\u1ea7u d\u00f2ng s\u1eed d\u1ee5ng tabs.</li> <li> 2. M\u1ed9t d\u00f2ng kh\u00f4ng n\u00ean v\u01b0\u1ee3t qu\u00e1 120 k\u00ed t\u1ef1.</li> <li> 3. M\u1ed7i file ch\u1ec9 n\u00ean ch\u1ee9a m\u1ed9t class.</li> <li> 4. Source code thay \u0111\u1ed5i kh\u00f4ng \u0111\u01b0\u1ee3c ch\u1ee9a <code>warning</code>.</li> <li> 5. H\u1ea1n ch\u1ebf s\u1eed d\u1ee5ng TODO. <ul> <li>N\u1ebfu c\u1ea7n TODO, comment r\u00f5 t\u00ecnh tr\u1ea1ng v\u00e0 l\u00fd do \u0111\u1ec3 d\u1ec5 \u0111\u1ed1i \u1ee9ng sau n\u00e0y.  </li> </ul> </li> <li> 6. M\u1ed7i member trong class c\u00e1ch nhau ch\u00ednh x\u00e1c 1 d\u00f2ng tr\u1ed1ng.</li> <li> 7. Kh\u00f4ng s\u1eed d\u1ee5ng c\u00e1c <code>Obsolete</code> members. <ul> <li>N\u1ebfu b\u1eaft bu\u1ed9c s\u1eed d\u1ee5ng th\u00ec ph\u1ea3i comment r\u00f5 l\u00fd do.  </li> </ul> </li> </ul>"},{"location":"merge-request-templates/v2/template/#ii-naming-conventions","title":"II. Naming conventions","text":"<ul> <li> 8. Ph\u00e2n bi\u1ec7t ch\u1eef vi\u1ebft hoa/th\u01b0\u1eddng: <ul> <li>_camelCase: T\u00ean field.</li> <li>camelCase: T\u00ean variable, parameter.  </li> <li>UPPER_CASE: T\u00ean const, static readonly.  </li> <li>PascalCase: C\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f2n l\u1ea1i. </li> </ul> </li> <li> 9. T\u00ean ng\u1eafn g\u1ecdn, d\u1ec5 hi\u1ec3u, \u0111\u00fang ng\u1eef c\u1ea3nh: <ul> <li>Class: T\u00ean th\u1ec3 hi\u1ec7n \u0111\u1ed1i t\u01b0\u1ee3ng g\u00ec trong h\u1ec7 th\u1ed1ng.  </li> <li>Method: T\u00ean th\u1ec3 hi\u1ec7n ph\u01b0\u01a1ng th\u1ee9c l\u00e0m g\u00ec, ph\u1ee5c v\u1ee5 ai.  </li> <li>Variable: T\u00ean th\u1ec3 hi\u1ec7n r\u00f5 \u00fd ngh\u0129a trong logic x\u1eed l\u00fd, \u0111\u1eb7c bi\u1ec7t v\u1edbi business code.  </li> </ul> </li> <li> 10. T\u00ean r\u00f5 r\u00e0ng v\u00e0 \u0111\u00fang ng\u1eef ph\u00e1p ti\u1ebfng Anh: <ul> <li>\u0110\u1eb7t t\u00ean bi\u1ebfn d\u1ea1ng s\u1ed1 nhi\u1ec1u n\u1ebfu bi\u1ebfn l\u00e0 ki\u1ec3u danh s\u00e1ch (<code>List</code>, <code>IEnumerable</code>, <code>Array</code>, ...).  </li> <li>Kh\u00f4ng vi\u1ebft t\u1eaft qu\u00e1 m\u1ee9c, s\u1eed d\u1ee5ng t\u1eeb v\u1ef1ng ch\u00ednh x\u00e1c \u0111\u1ec3 tr\u00e1nh g\u00e2y kh\u00f3 hi\u1ec3u.  </li> </ul> </li> <li> 11. S\u1eed d\u1ee5ng t\u1eeb ng\u1eef ch\u00ednh x\u00e1c trong ng\u1eef c\u1ea3nh: <ul> <li>Ph\u00e2n bi\u1ec7t <code>Validate</code> (x\u00e1c th\u1ef1c) v\u00e0 <code>Check</code> (ki\u1ec3m tra).  </li> <li>Ki\u1ec3m tra v\u00e0 \u0111\u1ed5i t\u00ean method khi n\u1ed9i dung method thay \u0111\u1ed5i.  </li> </ul> </li> <li> 12. S\u1eed d\u1ee5ng <code>prefix</code> ho\u1eb7c <code>suffix</code> ph\u00f9 h\u1ee3p (v\u00ed d\u1ee5: <code>I</code> cho interface, <code>Base</code> cho class c\u01a1 s\u1edf ho\u1eb7c c\u00e1c ph\u01b0\u01a1ng th\u1ee9c ho\u1eb7c h\u00e0m b\u1ea5t \u0111\u1ed3ng b\u1ed9 ph\u1ea3i c\u00f3 h\u1eadu t\u1ed1 <code>Async</code> v\u00e0 ng\u01b0\u1ee3c l\u1ea1i).</li> </ul>"},{"location":"merge-request-templates/v2/template/#iii-coding-styles","title":"III. Coding styles","text":"<ul> <li> 13. \u01afu ti\u00ean s\u1eed d\u1ee5ng <code>var</code> thay cho ki\u1ec3u d\u1eef li\u1ec7u t\u01b0\u1eddng minh.</li> <li> 14. S\u1eed d\u1ee5ng d\u1ea5u ngo\u1eb7c <code>{}</code> v\u00e0 xu\u1ed1ng d\u00f2ng cho m\u1ecdi \u0111i\u1ec1u ki\u1ec7n <code>if</code> v\u00e0 <code>method</code> ho\u1eb7c <code>function</code>.</li> <li> 15. Bi\u1ec3u th\u1ee9c c\u00f3 t\u1eeb 3 \u0111i\u1ec1u ki\u1ec7n tr\u1edf l\u00ean th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i \u0111i\u1ec1u ki\u1ec7n (bao g\u1ed3m lambda v\u00e0 c\u00e1c bi\u1ec3u th\u1ee9c \u0111i\u1ec1u ki\u1ec7n nh\u01b0 <code>while</code>, <code>if</code>, ... )</li> <li> 16. N\u1ebfu ph\u01b0\u01a1ng th\u1ee9c ho\u1eb7c h\u00e0m c\u00f3 3 tham s\u1ed1 tr\u1edf l\u00ean th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i tham s\u1ed1.</li> <li> 17. Khi g\u1ecdi extension methods, n\u1ebfu g\u1ecdi li\u00ean t\u1ee5c t\u1eeb 3 methods tr\u1edf l\u00ean ho\u1eb7c c\u00e2u l\u1ec7nh \u0111\u00e3 qu\u00e1 d\u00e0i th\u00ec xu\u1ed1ng d\u00f2ng cho m\u1ed7i l\u1eddi g\u1ecdi method.</li> <li> 18. Kh\u00f4ng s\u1eed d\u1ee5ng <code>expression-bodied</code> cho method \u1edf b\u1ea5t k\u00ec tr\u01b0\u1eddng h\u1ee3p n\u00e0o.</li> <li> 19. Ch\u1ec9 s\u1eed d\u1ee5ng to\u00e1n t\u1eed \u0111i\u1ec1u ki\u1ec7n <code>Ternary</code> cho gi\u00e1 tr\u1ecb c\u1ed1 \u0111\u1ecbnh, kh\u00f4ng s\u1eed d\u1ee5ng cho l\u1eddi g\u1ecdi h\u00e0m.</li> <li> 20. S\u1eed d\u1ee5ng <code>nameof</code> thay cho hardcode t\u00ean bi\u1ebfn ho\u1eb7c t\u00ean member.</li> <li> 21. Ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n v\u00e0 <code>return</code> s\u1edbm nh\u1ea5t c\u00f3 th\u1ec3.</li> </ul>"},{"location":"merge-request-templates/v2/template/#iv-tuan-thu-oop-va-solid","title":"IV. Tu\u00e2n th\u1ee7 OOP v\u00e0 SOLID","text":"<ul> <li> 22. Khai b\u00e1o s\u1eed d\u1ee5ng h\u1ee3p l\u00fd Access Modifiers: <ul> <li>Lu\u00f4n \u0111\u1ec3 field \u1edf <code>private</code>.  </li> <li>Ngo\u00e0i ra c\u1ea7n tu\u00e2n th\u1ee7 t\u00ednh k\u1ebf th\u1eeba / truy c\u1eadp \u0111\u1ec3 \u0111\u1eb7t access modifier.  </li> </ul> </li> <li> 23. Khai b\u00e1o v\u00e0 s\u1eed d\u1ee5ng h\u1ee3p l\u00fd constant, readonly, static field/property: <ul> <li><code>const</code>: H\u1eb1ng s\u1ed1 ch\u1ec9 s\u1eed d\u1ee5ng cho gi\u00e1 tr\u1ecb kh\u00f4ng thay \u0111\u1ed5i v\u00e0 d\u00f9ng chung.  </li> <li><code>readonly</code>: Bi\u1ebfn ch\u1ec9 kh\u1edfi t\u1ea1o m\u1ed9t l\u1ea7n t\u1ea1i th\u1eddi \u0111i\u1ec3m khai b\u00e1o ho\u1eb7c trong constructor.  </li> <li><code>static</code>: Ch\u1ec9 d\u00f9ng khi bi\u1ebfn d\u00f9ng chung cho nhi\u1ec1u \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c nhau trong h\u1ec7 th\u1ed1ng.  </li> </ul> </li> <li> 24. Khai b\u00e1o v\u00e0 s\u1eed properties h\u1ee3p l\u00fd: <ul> <li>\u01afu ti\u00ean s\u1eed d\u1ee5ng auto-properties khi c\u00f3 th\u1ec3.  </li> <li>S\u1eed d\u1ee5ng <code>private set</code> ho\u1eb7c <code>init</code> cho c\u00e1c properties ch\u1ec9 \u0111\u1ecdc sau khi kh\u1edfi t\u1ea1o.  </li> <li>Ph\u00e2n bi\u1ec7t v\u1edbi <code>field</code>. Property s\u1eed \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nh\u01b0 1 API \u0111\u1ec3 cho c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c ngo\u00e0i class truy c\u1eadp v\u00e0o, c\u00f2n field th\u00ec ch\u1ec9 s\u1eed d\u1ee5ng trong class \u0111\u00f3.  </li> </ul> </li> </ul>"},{"location":"merge-request-templates/v2/template/#v-tuan-thu-cac-quy-tac-second-brain","title":"V. Tu\u00e2n Th\u1ee7 C\u00e1c Quy T\u1eafc SECOND-BRAIN","text":"<ul> <li> 25. X\u00f3a code kh\u00f4ng s\u1eed d\u1ee5ng: <ul> <li>X\u00f3a c\u00e1c <code>using</code> kh\u00f4ng c\u1ea7n thi\u1ebft trong c\u00e1c file <code>.cs</code>.  </li> <li>X\u00f3a file, class, method, property, bi\u1ebfn kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng.  </li> <li>X\u00f3a bi\u1ebfn kh\u00f4ng s\u1eed d\u1ee5ng trong c\u00e1c method c\u00f3 s\u1eeda \u0111\u1ed5i.  </li> </ul> </li> <li> 26. X\u00f3a code kh\u00f4ng c\u1ea7n thi\u1ebft: <ul> <li>Kh\u00f4ng c\u1ea7n kh\u1edfi t\u1ea1o <code>null</code> cho bi\u1ebfn ki\u1ec3u reference type n\u1ebfu kh\u00f4ng c\u1ea7n thi\u1ebft.  </li> <li>Bi\u1ebfn \u0111\u00e3 \u0111\u01b0\u1ee3c validate \u0111\u1ea7u v\u00e0o r\u1ed3i th\u00ec kh\u00f4ng c\u1ea7n check <code>null</code> ho\u1eb7c r\u1ed7ng.  </li> <li>X\u00f3a \u0111o\u1ea1n code kh\u00f4ng d\u00f9ng, kh\u00f4ng \u0111\u01b0\u1ee3c comment l\u1ea1i b\u1eb1ng <code>//</code>.  </li> </ul> </li> <li> 27. Gi\u1ea3i th\u00edch r\u00f5 r\u00e0ng khi copy code t\u1eeb n\u01a1i kh\u00e1c: ngu\u1ed3n g\u1ed1c, m\u1ee5c \u0111\u00edch.</li> <li> 28. C\u00e2n nh\u1eafc s\u1eed d\u1ee5ng <code>thread-safe collections</code> trong tr\u01b0\u1eddng h\u1ee3p \u0111a lu\u1ed3ng.</li> <li> 29. Kh\u00f4ng thay \u0111\u1ed5i source code m\u00e0 kh\u00f4ng li\u00ean quan tr\u1ef1c ti\u1ebfp \u0111\u1ebfn task \u0111ang \u0111\u1ed1i \u1ee9ng, k\u1ec3 c\u1ea3 vi\u1ec7c x\u00f3a c\u00e1c \u0111o\u1ea1n code th\u1eeba.</li> </ul>"},{"location":"merge-request-templates/v2/template/#vi-hieu-nang","title":"VI. Hi\u1ec7u N\u0103ng","text":"<ul> <li> 30. S\u1eed d\u1ee5ng <code>String Interpolation</code> ho\u1eb7c <code>StringBuilder</code> thay v\u00ec c\u1ed9ng chu\u1ed7i.</li> <li> 31. D\u00f9ng <code>OrdinalIgnoreCase</code> thay v\u00ec <code>InvariantCultureIgnoreCase</code> khi so s\u00e1nh chu\u1ed7i.</li> <li> 32. H\u1ea1n ch\u1ebf s\u1ed1 l\u01b0\u1ee3ng request (t\u1edbi DB) trong m\u1ed9t x\u1eed l\u00fd.</li> <li> 33. \u0110\u00e1nh d\u1ea5u v\u00e0 gi\u1ea3i th\u00edch logic ph\u1ee9c t\u1ea1p ho\u1eb7c magic number b\u1eb1ng comment r\u00f5 r\u00e0ng.</li> <li> 34. Tr\u00e1nh code b\u1ecb l\u1eb7p ho\u1eb7c qu\u00e1 d\u00e0i <ul> <li>T\u00e1ch code th\u00e0nh c\u00e1c method nh\u1ecf, r\u00f5 r\u00e0ng \u0111\u1ec3 t\u00e1i s\u1eed d\u1ee5ng v\u00e0 d\u1ec5 \u0111\u1ecdc.  </li> <li>Ki\u1ec3m tra xem c\u00f3 s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c source code \u0111\u00e3 c\u00f3 s\u1eb5n hay kh\u00f4ng.  </li> </ul> </li> <li> 35. X\u1eed l\u00fd d\u1eef li\u1ec7u: <ul> <li>Tr\u01b0\u1edbc khi <code>return</code> danh s\u00e1ch, s\u1eed d\u1ee5ng <code>ToList()</code> ho\u1eb7c <code>ToArray()</code> \u0111\u1ec3 execute data.  </li> <li>X\u1eed l\u00fd tu\u1ea7n t\u1ef1 theo <code>index</code> n\u00ean d\u00f9ng <code>for</code>, h\u1ea1n ch\u1ebf <code>foreach</code> n\u1ebfu c\u00f3 y\u00eau c\u1ea7u r\u00f5 r\u00e0ng v\u1ec1 th\u1ee9 t\u1ef1.  </li> </ul> </li> <li> 36. H\u1ea1n ch\u1ebf <code>return null</code>.</li> <li> 37. S\u1eed d\u1ee5ng <code>throw</code> thay v\u00ec <code>throw ex</code> \u0111\u1ec3 gi\u1eef nguy\u00ean stack trace.</li> <li> 38. S\u1eed d\u1ee5ng <code>using</code> \u0111\u1ec3 gi\u1ea3i ph\u00f3ng unmanaged resources khi kh\u00f4ng c\u00f2n s\u1eed d\u1ee5ng</li> <li> 39. S\u1eed d\u1ee5ng <code>async/await</code> thay cho <code>Task.Wait()</code> ho\u1eb7c <code>Task.Result</code> ho\u1eb7c <code>Task.WaitAll()</code> \u0111\u1ec3 tr\u00e1nh block.</li> </ul>"},{"location":"merge-request-templates/v2/template/#vii-comment-code","title":"VII. Comment Code","text":"<ul> <li> 40. Comment \u0111\u1ea7y \u0111\u1ee7 cho t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng (ri\u00eang \u0111\u1ed1i v\u1edbi field th\u00ec t\u00f9y ch\u1ecdn): <ul> <li>\u0110\u1ea7u c\u00e1c classes, methods, interfaces, properties, ... (c\u00e1c members m\u00e0 c\u00f3 th\u1ec3 access t\u1eeb \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c) - s\u1eed d\u1ee5ng XML comments  </li> <li>C\u00e1c \u0111o\u1ea1n logic ph\u1ee9c t\u1ea1p.  </li> <li>N\u1ed9i dung comment \u0111\u00fang ng\u1eef c\u1ea3nh s\u1eed d\u1ee5ng, th\u1ec3 hi\u1ec7n r\u00f5 \u00fd t\u01b0\u1edfng.  </li> </ul> </li> </ul>"},{"location":"scenarios/","title":"T\u01b0 t\u01b0\u1edfng v\u1ec1 scenarios","text":""},{"location":"scenarios/environments/","title":"C\u00e1ch c\u00e0i \u0111\u1eb7t m\u00f4i tr\u01b0\u1eddng cho scenarios","text":""},{"location":"scenarios/how-to-create/","title":"C\u00e1ch t\u1ea1o code cho scenarios","text":""},{"location":"scenarios/how-to-run/","title":"C\u00e1ch run scenarios","text":""},{"location":"workflows/git/","title":"SECOND-BRAIN gitflow","text":""},{"location":"workflows/git/#1-so-o-lam-viec","title":"1. S\u01a1 \u0111\u1ed3 l\u00e0m vi\u1ec7c","text":"<pre><code>@startuml\nstart\n    : 1. Developer t\u1ea1o branch;\n    : 2. Developer t\u1ea1o code v\u00e0 commit l\u00ean nh\u00e1nh \u0111\u00e3 t\u1ea1o;\n    : 3. Developer T\u1ea1o MR;\n\n    repeat\n        : 4. Developer th\u00f4ng b\u00e1o cho c\u00e1c reviewers;\n        : 5. Reviewer th\u1ef1c hi\u1ec7n review;\n\n        if (Is the code OK?) then (No)\n            : 6. Reviewer y\u00eau c\u1ea7u ch\u1ec9nh s\u1eeda;\n            : 7. Reviewer th\u00f4ng b\u00e1o cho Developer;\n            : 8. Developer Ch\u1ec9nh s\u1eeda v\u00e0 push l\u1ea1i code;\n            : 9. Developer th\u00f4ng b\u00e1o cho c\u00e1c reviewers;\n        endif\n    repeat while (\u0110\u1ee7 s\u1ed1 l\u01b0\u1ee3ng approvers?) is (No) not (Yes)\n\n    : 10. Developer Shelve / Checkin / Merge;\nstop\n@enduml\n</code></pre>"},{"location":"workflows/git/#2-chu-thich","title":"2. Ch\u00fa th\u00edch","text":"<p>1. T\u1ea1o branch cho t\u1eebng Task ho\u1eb7c Bug:</p> <ul> <li>Task t\u1ea1o branch m\u1edbi theo format: features/{TaskID}_{Ti\u00eau \u0111\u1ec1}</li> <li>Bug t\u1ea1o theo format: fixes/{TaskID}_{Ti\u00eau \u0111\u1ec1}</li> <li>Task_ID: b\u1eaft bu\u1ed9c n\u1ebfu c\u00f3</li> <li>Ti\u00eau \u0111\u1ec1: ti\u00eau \u0111\u1ec1 c\u1ea7n mi\u00eau t\u1ea3 ng\u1eafn g\u1ecdn task th\u1ef1c hi\u1ec7n nhi\u1ec7m v\u1ee5 g\u00ec, d\u1ea5u c\u00e1ch thay b\u1eb1ng \u201c_\u201d, tuy\u1ec7t \u0111\u1ed1i kh\u00f4ng \u0111\u01b0\u1ee3c vi\u1ebft t\u1eaft.</li> <li>Branch m\u1edbi ph\u1ea3i t\u1ea1o t\u1eeb Develop, ph\u1ea7n \"Create from\"</li> <li>Tr\u01b0\u1eddng h\u1ee3p task ph\u1ee5 thu\u1ed9c v\u00e0o task kh\u00e1c (task A c\u00f3 BranchA), th\u00ec branch m\u1edbi ph\u1ea3i ch\u1ecdn \"Create from\" = BranchA</li> </ul> <p>V\u00ed d\u1ee5:</p> <ul> <li> <p>Feature #xxxxxx: t\u1ea1o TableA v\u00e0 th\u1ef1c hi\u1ec7n insert d\u1eef li\u1ec7u, t\u00e1ch th\u00e0nh 2 tasks nh\u01b0 d\u01b0\u1edbi:</p> </li> <li> <p>Task #01: th\u00eam b\u1ea3ng m\u1edbi TableA v\u00e0o DB</p> <ul> <li>t\u1ea1o branch features/01_them_bang_tableA</li> </ul> </li> <li>Task #02: insert d\u1eef li\u1ec7u v\u00e0o TableA<ul> <li>t\u1ea1o branch features/02_insert_du_lieu_tableA</li> </ul> </li> </ul> <p>2. Commit code:</p> <ul> <li>H\u1ea1n ch\u1ebf nhi\u1ec1u commits trong 1 branch.</li> <li>M\u1ed7i commit c\u1ea7n mi\u00eau t\u1ea3 r\u00f5 r\u00e0ng ph\u1ea7n thay \u0111\u1ed5i</li> </ul> <p>3. Merge request (MR):</p> <ul> <li>T\u00ean c\u1ee7a MR theo format t\u00ean c\u1ee7a branch (ko c\u1ea7n features ho\u1eb7c fixes \u1edf ti\u1ec1n t\u1ed1)</li> <li>MR ph\u1ea3i ch\u1ecdn target branch m\u00e0 m\u00ecnh merge v\u00e0o (th\u00f4ng th\u01b0\u1eddng l\u00e0 branch c\u1ee7a ph\u1ea7n \"Create from\" \u1edf b\u01b0\u1edbc 2).</li> <li>Tr\u01b0\u1eddng h\u1ee3p target branch l\u00e0 Branch A (\u1edf step 2), th\u00ec sau khi BranchA \u0111\u01b0\u1ee3c merged, th\u00ec \u0111\u1ed5i target branch v\u1ec1 \"Develop\"</li> <li>Ch\u00fa \u00fd ch\u1ecdn MR template c\u1ee7a d\u1ef1 \u00e1n SECOND-BRAIN. (template m\u1eb7c \u0111\u1ecbnh c\u00f3 t\u00ean l\u00e0 Default.md)</li> <li>Nh\u1eefng tasks li\u00ean quan \u0111\u1ebfn thay \u0111\u1ed5i (ko ph\u1ea3i th\u00eam m\u1edbi) \u1edf ph\u00eda UI (vd: thay \u0111\u1ed5i text, screen...) th\u00ec c\u1ea7n capture m\u00e0n h\u00ecnh \u0111\u01b0\u1ee3c update v\u00e0o comment \u1edf MR \u0111\u1ec3 reviewer ki\u1ec3m tra.</li> <li>MR ph\u1ea3i \u0111\u01b0\u1ee3c review v\u00e0 approve tr\u01b0\u1edbc khi merge l\u00ean Develop:</li> </ul> <p>Dev1 t\u1ea1o MR</p> <p>C\u00e1c reviewers th\u1ef1c hi\u1ec7n review =&gt; add comments =&gt; Dev1 s\u1eeda =&gt; Dev2 v\u00e0o review l\u1ea1i v\u00e0 resolved thread n\u1ebfu \u0111\u00e3 OK</p> <ul> <li>Step1: reviewers th\u1ef1c hi\u1ec7n review =&gt; Add comments n\u1ebfu c\u00f3</li> <li>Step2: Dev1 ki\u1ec3m tra comment =&gt; reply ho\u1eb7c update code =&gt; \u0111\u00e1nh d\u1ea5u task completed =&gt; th\u00f4ng b\u00e1o cho Dev2</li> <li>Step3: Dev2 review l\u1ea1i =&gt; \u0111\u00e1nh d\u1ea5u Thread comment \u0111\u01b0\u1ee3c Resolved</li> </ul> <p>Ch\u00fa \u00fd:</p> <ul> <li>Ch\u1ec9 ng\u01b0\u1eddi t\u1ea1o comment m\u1edbi c\u00f3 quy\u1ec1n approve comment \u0111\u00f3.</li> <li>1 MR y\u00eau c\u1ea7u \u00edt nh\u1ea5t 4 devs v\u00e0o review.</li> </ul>"},{"location":"workflows/task/","title":"SECOND-BRAIN Workflow","text":""},{"location":"workflows/task/#1-cac-buoc-va-giai-thich","title":"1. C\u00e1c b\u01b0\u1edbc v\u00e0 gi\u1ea3i th\u00edch","text":"Step PIC Input Description Output Note 1.1 Study requirement Dev, BA C\u00e1c y\u00eau c\u1ea7u m\u00f4 t\u1ea3 v\u00e0 t\u00e0i li\u1ec7u kh\u00e1ch h\u00e0ng \u0111\u00e3 g\u1eedi Dev study y\u00eau c\u1ea7u t\u1eeb input, c\u00f3 trao \u0111\u1ed5i v\u1edbi BA/BrSE \u0111\u1ec3 l\u00e0m r\u00f5 c\u00e1c th\u00f4ng tin Note l\u1ea1i Q&amp;A (n\u1ebfu c\u00f3) l\u00ean redmine C\u00e1c t\u00e0i li\u1ec7u m\u00f4 t\u1ea3 c\u1ea7n \u0111\u01b0\u1ee3c l\u1ea5y v\u1ec1 v\u00e0 \u0111\u00ednh k\u00e8m l\u00ean redmine t\u1eeb khi nh\u1eadn task (n\u1ebfu t\u00e0i li\u1ec7u nhi\u1ec1u c\u1ea7n upload l\u00ean Google Drive, t\u00ean folder ch\u01b0a c\u00f3 th\u1ec3 l\u00e0 code/id c\u1ee7a task; sau \u0111\u00f3 ph\u1ea3i \u0111\u00ednh k\u00e8m l\u1ea1i link v\u00e0o redmine)C\u00e1c meeting trao \u0111\u1ed5i c\u1ea7n g\u1ecdi th\u00eam BA v\u00e0 Tester li\u00ean quan v\u00e0o \u0111\u1ec3 c\u00f9ng n\u1eafm th\u00f4ng tin 1.2 Confirm requirement Dev C\u00e1c y\u00eau c\u1ea7u m\u00f4 t\u1ea3 v\u00e0 t\u00e0i li\u1ec7u kh\u00e1ch h\u00e0ng \u0111\u00e3 g\u1eedi Sau khi study xong, c\u1ea7n x\u00e1c nh\u1eadn \u00fd hi\u1ec3u c\u1ee7a m\u00ecnh \u0111\u00e3 \u0111\u00fang ch\u01b0a v\u1edbi BrSENote l\u1ea1i n\u1ed9i dung \u00fd hi\u1ec3u l\u00ean redmine C\u00e1c meeting trao \u0111\u1ed5i c\u1ea7n g\u1ecdi th\u00eam BA v\u00e0 Tester li\u00ean quan v\u00e0o \u0111\u1ec3 c\u00f9ng n\u1eafm th\u00f4ng tin 2.1 Make Solution &amp; Estimation Dev Y\u00eau c\u1ea7u \u0111\u00e3 n\u1eafm \u0111\u01b0\u1ee3c D\u1ef1a tr\u00ean y\u00eau c\u1ea7u, Dev s\u1ebd \u0111i\u1ec1u tra sau \u0111\u00f3 \u0111\u01b0a ra solution v\u00e0 estimate th\u1eddi gian th\u1ef1c hi\u1ec7n.  Ch\u00fa \u00fd v\u1ec1 vi\u1ec7c t\u1ea1o c\u00e1c subtasks v\u00e0 t\u1ea1o c\u00e1c estimation ri\u00eang l\u1ebb \u0111\u1ed1i v\u1edbi t\u1eebng subtask. Solution \u0111\u1ec3 \u0111\u1ed1i \u1ee9ng y\u00eau c\u1ea7u ho\u1eb7c t\u1ed1i thi\u1ec3u l\u00e0 c\u00f3 k\u1ebft qu\u1ea3 \u0111i\u1ec1u tra r\u00f5 r\u00e0ng \u0111\u1ed1i v\u1edbi nh\u1eefng task \u0111\u00e1nh gi\u00e1 kh\u00f4ng th\u1ec3 th\u1ef1c hi\u1ec7nTh\u1eddi gian c\u1ea7n \u0111\u1ec3 th\u1ef1c hi\u1ec7n v\u00e0 m\u1ed1c deadline \u1ede giai \u0111o\u1ea1n n\u00e0y Dev c\u00f3 th\u1ec3 nh\u1edd c\u00e1c \u0111\u1ed3ng nghi\u1ec7p, Leader, Senior, ... c\u00f9ng t\u01b0 v\u1ea5n/h\u1ed7 tr\u1ee3 n\u1ebfu c\u1ea7n 2.2 Review Solution Leader, Senior, BrSE, Customer Solution \u0111\u1ec1 xu\u1ea5tTh\u1eddi gian c\u1ea7n \u0111\u1ec3 th\u1ef1c hi\u1ec7n v\u00e0 m\u1ed1c deadline Nh\u1edd nh\u1eefng ng\u01b0\u1eddi c\u00f3 kinh nghi\u1ec7m \u0111\u00e1nh gi\u00e1 xem solution c\u1ee7a Dev c\u00f3 v\u1ea5n \u0111\u1ec1 g\u00ec kh\u00f4ng, xem c\u00f3 th\u1ec3 \u0111\u01b0a v\u00e0o ti\u1ebfn h\u00e0nh kh\u00f4ng Note solution, th\u1eddi gian c\u1ea7n \u0111\u1ec3 th\u1ef1c hi\u1ec7n v\u00e0 m\u1ed1c deadline \u0111\u00e3 th\u1ed1ng nh\u1ea5t l\u00ean redmine Nh\u1eefng y\u00eau c\u1ea7u ph\u1ee9c t\u1ea1p, \u1ea3nh h\u01b0\u1edfng nhi\u1ec1u c\u00f3 th\u1ec3 nh\u1edd BrSE h\u1ecfi \u00fd ki\u1ebfn KH sau khi team \u0111\u00e3 th\u1ed1ng nh\u1ea5t 3.1 Implementation Code Dev Solution \u0111\u00e3 th\u1ed1ng nh\u1ea5t Dev ti\u1ebfn h\u00e0nh th\u1ef1c hi\u1ec7n code 3.2 Self Review Dev Code \u0111\u00e3 th\u1ef1c hi\u1ec7n Dev t\u1ef1 check l\u1ea1i code theo check-list, coding-convention File check-list t\u1ea1o tr\u00ean folder check-list 3.3 Self Test Dev Code \u0111\u00e3 th\u1ef1c hi\u1ec7n Dev t\u1ef1 test l\u1ea1i logic theo y\u00eau c\u1ea7u Evidence (photo/video) c\u1ee7a vi\u1ec7c self-test 3.4 Commit/Shelve &amp; Make Merge Request Dev Code \u0111\u00e3 th\u1ef1c hi\u1ec7n T\u1ea1o merge-request \u0110\u00ednh k\u00e8m l\u00ean redmine file check-list v\u00e0 evidenceSau \u0111\u00f3 b\u00e1o cho \u0111\u1ed3ng nghi\u1ec7p, Leader, Senior, ... c\u00f9ng review 4.1 Review Leader, Senior Merge Request Reviewer ti\u1ebfn h\u00e0nh review code theo check-list, kinh nghi\u1ec7m v\u00e0 coding-convention Approved/Comment C\u1ea7n t\u1ed1i thi\u1ec3u 3 approvedN\u1ebfu ch\u01b0a \u0111\u1ee7 c\u1ea7n push c\u00e1c reviewer 5. Build Dev Code \u0111\u00e3 th\u1ef1c hi\u1ec7n Ti\u1ebfn h\u00e0nh build code v\u00e0 th\u00f4ng tin cho tester s\u1eafp x\u1ebfp th\u1ef1c hi\u1ec7n verify 6. Test Tester B\u1ea3n build Tester ti\u1ebfn h\u00e0nh verify ch\u1ee9c n\u0103ng, bug, logic,... Bug log tr\u00ean redmine (n\u1ebfu c\u00f3)T\u00e0i li\u1ec7u test-case v\u00e0 k\u1ebft qu\u1ea3 test N\u1ebfu c\u00f3 bug c\u1ea7n \u0111i\u1ec1n \u0111\u1ee7 c\u00e1c th\u00f4ng tin Similar/Solution/Cause/Cause Category tr\u00ean redmine 7. T\u1ea1o shelve code Dev Code \u0111\u00e3 th\u1ef1c hi\u1ec7n B\u00e1o c\u00e1o th\u00f4ng tin Shelveset cho BrSE 8. Kh\u00e1ch h\u00e0ng review Customer TFS Shelveset K\u1ebft qu\u1ea3 review 9. Checkin Codes Dev Code \u0111\u00e3 th\u1ef1c hi\u1ec7n B\u00e1o c\u00e1o th\u00f4ng tin TFS Changeset cho BrSE"},{"location":"workflows/task/#2-so-o-lam-viec","title":"2. S\u01a1 \u0111\u1ed3 l\u00e0m vi\u1ec7c","text":"<pre><code>@startuml\n\nstart\n\n    repeat\n\n        : 1.1 Ph\u00e2n t\u00edch v\u00e0 hi\u1ec3u y\u00eau c\u1ea7u c\u1ee7a task;\n\n        floating note left: D\u1ef1a v\u00e0o t\u00e0i li\u1ec7u v\u00e0 m\u00f4 t\u1ea3 c\u1ee7a KH g\u1eedi\n\n        note right\n            &lt;b&gt;Roles&lt;/b&gt;\n            ====\n            DEV\n            BA\n        end note\n\n        : 1.2 X\u00e1c nh\u1eadn \u00fd hi\u1ec3u c\u1ee7a m\u00ecnh v\u1ec1 y\u00eau c\u1ea7u;\n\n        floating note left: X\u00e1c nh\u1eadn v\u1edbi c\u00e1c b\u00ean li\u00ean quan nh\u01b0 BA / Teamleader / BrSE\n\n        note right\n            &lt;b&gt;Roles&lt;/b&gt;\n            ====\n            DEV\n            BA\n        end note\n\n    repeat while (OK?) is (No) not (Yes)\n\n    repeat\n\n        : 2.1 L\u00ean ph\u01b0\u01a1ng \u00e1n \u0111\u1ed1i \u1ee9ng;\n\n        note right\n            &lt;b&gt;Roles&lt;/b&gt;\n            ====\n            DEV\n        end note\n\n        : 2.2 Leader Review;\n        : 2.3 T\u1ea1o estimate cho ph\u01b0\u01a1ng \u00e1n \u0111\u00e3 ch\u1ecdn;\n\n    repeat while (OK?) is (No) not (Yes)\n\n    repeat\n        repeat\n            repeat\n                repeat\n                    : 3.1 Coding;\n                    : 3.2 Self Review;\n                repeat while (OK?) is (No) not (Yes)\n\n                : 3.4 T\u1ea1o / Ch\u1ec9nh S\u1eeda MR / Shelve;\n                : 4.1 Leader Review;\n            repeat while (OK?) is (No) not (Yes)\n\n            : 5. T\u1ea1o c\u00e1c b\u1ea3n build c\u1ea7n thi\u1ebft;\n            : 6. Tester th\u1ef1c hi\u1ec7n test;\n\n        repeat while (OK?) is (No) not (Yes)\n\n        : 7. T\u1ea1o shelve code;\n        : 8. Kh\u00e1ch h\u00e0ng review;\n\n    repeat while (OK?) is (No) not (Yes)\n\n    : 9. Checkin Codes;\n\nstop\n\n@enduml\n</code></pre>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/technical/","title":"Technical","text":""},{"location":"blog/category/c-advanced-series/","title":"C# advanced series","text":""},{"location":"blog/category/coding/","title":"Coding","text":""}]}